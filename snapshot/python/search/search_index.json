{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GeoAPI for Python","text":"<p>WARNING: This specification is not final and is subject to change.</p> <p>Experimental set of Python interfaces for GeoAPI. This package provides only code lists and abstract classes; implementations can be provided by separated projects. Implementations in the Java language can also be used in Python using the <code>geoapi-java-python</code> module.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>This package requires Python 3.10 or later</p>"},{"location":"geometry/overview/","title":"Geometry Subpackage (ISO 19107)","text":"<p>This is the <code>geometry</code> subpackage.</p> <p>This subpackage contains geometry data structures derived from the ISO 19107 international standard.</p>"},{"location":"geometry/primitive/","title":"<code>primitive</code> module","text":"<p>This is the <code>primitive</code> module.</p> <p>This module contains primitive geometry data structures derived from the ISO 19107 international standard.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing","title":"<code>Bearing</code>","text":"<p>               Bases: <code>ABC</code></p> <p>The Bearing data type indicates a direction. The azimuth can take one of two forms forms:</p> <ul> <li> <p>a set of angles, one of which is a plane azimuth and the second a   measure of altitude (positive above the horizontal, negative below   the horizon). above the horizontal, negative below the horizon),   essentially by creating a spherical spherical coordinate system;</p> </li> <li> <p>a directional vector derived from the coordinate system at the   initial point, a unit vector with the direction associated with   the set of angles.</p> </li> </ul> <p>Since the two types of measurement are identical, the azimuth values are the same, but the interpretations will depend on the usage (usually a reference direction, the offset \u201c0\u201d). will depend on usage (usually a reference direction, offset \u201c0\u201d, and a direction of rotation, clockwise).</p> <p>The value of the Bearing data type can only be valid at the point from which the measurement is taken. The common \u201cparallel\u201d transformation of vectors from one point to another is only valid if the <code>GeometricReferenceSurface</code> used is planar (i.e. Cartesian and, therefore, Euclidean). The fundamental problem is that the sphere has no universally valid 2D world coordinate system for its tangent spaces. Using a fixed direction reference such as \u201ctrue north\u201d does allow some translation, however, if the reference exists and is unique at a given position. For example, north does not exist at the North Pole and is not unique at the South Pole.</p> <p>Azimuths can be measured in both directions, as absolute values (such as true north, see azimuth) or relative (such as \u201cbefore\u201d or \u201cafter\u201d).</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Bearing(ABC):\n    \"\"\"\n    The Bearing data type indicates a direction. The azimuth can take one\n    of two forms forms:\n\n    - a set of angles, one of which is a plane azimuth and the second a\n      measure of altitude (positive above the horizontal, negative below\n      the horizon). above the horizontal, negative below the horizon),\n      essentially by creating a spherical spherical coordinate system;\n\n    - a directional vector derived from the coordinate system at the\n      initial point, a unit vector with the direction associated with\n      the set of angles.\n\n    Since the two types of measurement are identical, the azimuth values\n    are the same, but the interpretations will depend on the usage (usually\n    a reference direction, the offset \u201c0\u201d). will depend on usage (usually a\n    reference direction, offset \u201c0\u201d, and a direction of rotation, clockwise).\n\n    The value of the Bearing data type can only be valid at the point from\n    which the measurement is taken. The common \u201cparallel\u201d transformation of\n    vectors from one point to another is only valid if the\n    `GeometricReferenceSurface` used is planar (i.e. Cartesian and, therefore,\n    Euclidean). The fundamental problem is that the sphere has no universally\n    valid 2D world coordinate system for its tangent spaces. Using a fixed\n    direction reference such as \u201ctrue north\u201d does allow some translation,\n    however, if the reference exists and is unique at a given position.\n    For example, north does not exist at the North Pole and is not unique at\n    the South Pole.\n\n    Azimuths can be measured in both directions, as absolute values (such as\n    true north, see azimuth) or relative (such as \u201cbefore\u201d or \u201cafter\u201d).\n    \"\"\"\n\n    @abstractmethod\n    def __init__(self,\n                 v: 'Vector',\n                 reference: ReferenceDirection |\n                    CurveRelativeDirection |\n                    RelativeDirection |\n                    FixedDirection,\n                 rotation: Rotation,\n                 ):\n        \"\"\"\n        The default azimuth constructor considers a non-zero vector at a\n        point and creates an azimuth at that point, with the classic default\n        values for the most common fixed azimuth.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def angle(self) -&gt; Sequence['Angle']:\n        \"\"\"\n        In this variant of Bearing, generally used for 2D coordinate systems,\n        the first angle (azimuth) is measured from a coordinate axis (usually\n        north) in a clockwise direction, parallel to the tangent plane of the\n        reference surface. Given two angles, the second angle (altitude)\n        generally represents the angle above (for positive angles) or below\n        (for negative angles) a local plane parallel to the tangent plane\n        of the reference surface.\n\n        NOTE: 1 or more angles should be returned.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def direction(self) -&gt; Optional['Vector']:\n        \"\"\"\n        In this variant of Bearing, generally used for 3D coordinate systems,\n        the direction is expressed as an arbitrary vector in the\n        coordinate system.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def reference(self) -&gt; ReferenceDirection:\n        \"\"\"\n        The reference attribute is the direction from which the azimuth is\n        measured, i.e. the direction of a positive measurement. Most systems\n        can use a negative number to express a measurement opposite to the\n        default rotation.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def rotation(self) -&gt; Rotation:\n        \"\"\"\n        The rotation attribute specifies the direction from which the azimuth\n        is measured.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing.angle","title":"<code>angle: Sequence[Angle]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>In this variant of Bearing, generally used for 2D coordinate systems, the first angle (azimuth) is measured from a coordinate axis (usually north) in a clockwise direction, parallel to the tangent plane of the reference surface. Given two angles, the second angle (altitude) generally represents the angle above (for positive angles) or below (for negative angles) a local plane parallel to the tangent plane of the reference surface.</p> <p>NOTE: 1 or more angles should be returned.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing.direction","title":"<code>direction: Optional[Vector]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>In this variant of Bearing, generally used for 3D coordinate systems, the direction is expressed as an arbitrary vector in the coordinate system.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing.reference","title":"<code>reference: ReferenceDirection</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The reference attribute is the direction from which the azimuth is measured, i.e. the direction of a positive measurement. Most systems can use a negative number to express a measurement opposite to the default rotation.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing.rotation","title":"<code>rotation: Rotation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The rotation attribute specifies the direction from which the azimuth is measured.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Bearing.__init__","title":"<code>__init__(v, reference, rotation)</code>  <code>abstractmethod</code>","text":"<p>The default azimuth constructor considers a non-zero vector at a point and creates an azimuth at that point, with the classic default values for the most common fixed azimuth.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef __init__(self,\n             v: 'Vector',\n             reference: ReferenceDirection |\n                CurveRelativeDirection |\n                RelativeDirection |\n                FixedDirection,\n             rotation: Rotation,\n             ):\n    \"\"\"\n    The default azimuth constructor considers a non-zero vector at a\n    point and creates an azimuth at that point, with the classic default\n    values for the most common fixed azimuth.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.CurveRelativeDirection","title":"<code>CurveRelativeDirection</code>","text":"<p>               Bases: <code>Enum</code></p> <p><code>CurveRelativeDirection</code> refers to the vectors associated with a curve. Some common vector directions are:</p> <pre><code>- tangent, the direction in which the curve points;\n- the inverse tangent, i.e. the opposite of the tangent;\n- the binormal, the direction towards the center of curvature, i.e.\n    the inside of the curve;\n- the inverse binormal (reverseBiNormal), the opposite of the\n    binormal, on the outside of the curve;\n- leftNormal, to the left of the tangent;\n- rightNormal, to the right of the tangent;\n- upNormal, relative to the reference surface;\n- downNormal, the opposite of upNormal.\n</code></pre> <p>These values can be used to extend or replace the 2D directions of <code>RelativeDirection</code>.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class CurveRelativeDirection(Enum):\n    \"\"\"\n    `CurveRelativeDirection` refers to the vectors associated with\n    a curve. Some common vector directions are:\n\n        - tangent, the direction in which the curve points;\n        - the inverse tangent, i.e. the opposite of the tangent;\n        - the binormal, the direction towards the center of curvature, i.e.\n            the inside of the curve;\n        - the inverse binormal (reverseBiNormal), the opposite of the\n            binormal, on the outside of the curve;\n        - leftNormal, to the left of the tangent;\n        - rightNormal, to the right of the tangent;\n        - upNormal, relative to the reference surface;\n        - downNormal, the opposite of upNormal.\n\n    These values can be used to extend or replace the 2D directions\n    of `RelativeDirection`.\n    \"\"\"\n    TANGENT = \"tangent\"\n    REVERSE_TANGENT = \"reverseTangent\"\n    NORMAL = \"normal\"\n    REVERSE_NORMAL = \"reverseNormal\"\n    BINORMAL = \"biNormal\"\n    REVERSE_BINORMAL = \"reverseBiNormal\"\n    LEFT_NORMAL = \"leftNormal\"\n    RIGHT_NORMAL = \"rightNormal\"\n    UP_NORMAL = \"upNormal\"\n    DOWN_NORMAL = \"downNormal\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.DirectPosition","title":"<code>DirectPosition</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Holds the coordinates for a position within some coordinate reference system.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class DirectPosition(ABC):\n    \"\"\"\n    Holds the coordinates for a position within some coordinate\n    reference system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate(self) -&gt; Sequence[int | float]:\n        \"\"\"\n        A sequence of real numbers that hold the coordinate values for this\n        position in the specified reference system.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_reference_system(self) -&gt; 'CoordinateReferenceSystem':\n        \"\"\"\n        The coordinate reference system in which the coordinate tuple is given.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def dimension(self) -&gt; int:\n        \"\"\"The length of coordinate sequence (the number of entries).\"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.DirectPosition.coordinate","title":"<code>coordinate: Sequence[int | float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A sequence of real numbers that hold the coordinate values for this position in the specified reference system.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.DirectPosition.coordinate_reference_system","title":"<code>coordinate_reference_system: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The coordinate reference system in which the coordinate tuple is given.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.DirectPosition.dimension","title":"<code>dimension: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The length of coordinate sequence (the number of entries).</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Envelope","title":"<code>Envelope</code>","text":"<p>               Bases: <code>ABC</code></p> <p>An <code>Envelope</code> is often referred to as a box or rectangle defining a minimum enclosing area. Whatever its size, an <code>Envelope</code> can be represented unambiguously as two <code>DirectPositions</code> (coordinate points). To code an <code>Envelope</code>, you simply need to code these two points. This is consistent with all the coordinate systems in ISO 19107:2019. It should be remembered that, even if the CoordinateSystem is purely spatial without being globally bijective, the coordinate may not be valid in the associated coordinate system.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Envelope(ABC):\n    \"\"\"\n    An `Envelope` is often referred to as a box or rectangle defining a minimum\n    enclosing area. Whatever its size, an `Envelope` can be represented\n    unambiguously as two `DirectPositions` (coordinate points). To code an\n    `Envelope`, you simply need to code these two points. This is consistent\n    with all the coordinate systems in ISO 19107:2019. It should be remembered\n    that, even if the CoordinateSystem is purely spatial without being\n    globally bijective, the coordinate may not be valid in the associated\n    coordinate system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def lower_corner(self) -&gt; DirectPosition:\n        \"\"\"\n        The \u201clowerCorner\u201d of an Envelope is a coordinate position consisting\n        of all the minimum coordinates for each dimension, for all points\n        within the Envelope.\n\n        Math: For each coordinate offset, the corresponding lower corner\n        offset is the minimum of that offset in all direct positions of the\n        original geometry, and the corresponding upper corner offset is the\n        maximum of those same direct positions.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def upper_corner(self) -&gt; DirectPosition:\n        \"\"\"\n        The \u201cupperCorner\u201d of an Envelope is a coordinate position consisting\n        of all the maximum coordinates for each dimension, for all points\n        within the Envelope.\n\n        Offset in all direct positions of the original geometry.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Envelope.lower_corner","title":"<code>lower_corner: DirectPosition</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The \u201clowerCorner\u201d of an Envelope is a coordinate position consisting of all the minimum coordinates for each dimension, for all points within the Envelope.</p> <p>Math: For each coordinate offset, the corresponding lower corner offset is the minimum of that offset in all direct positions of the original geometry, and the corresponding upper corner offset is the maximum of those same direct positions.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Envelope.upper_corner","title":"<code>upper_corner: DirectPosition</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The \u201cupperCorner\u201d of an Envelope is a coordinate position consisting of all the maximum coordinates for each dimension, for all points within the Envelope.</p> <p>Offset in all direct positions of the original geometry.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.FixedDirection","title":"<code>FixedDirection</code>","text":"<p>               Bases: <code>Enum</code></p> <p><code>FixedDirection</code> enumerates common potential fixed reference directions for azimuth, generally used in reference to the globe, a map, a coordinate system or a grid. Common values include true north or south, magnetic north or south, grid north or south (reference to a grid or projection).</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class FixedDirection(Enum):\n    \"\"\"\n    `FixedDirection` enumerates common potential fixed reference directions\n    for azimuth, generally used in reference to the globe, a map,\n    a coordinate system or a grid. Common values include true north or south,\n    magnetic north or south, grid north or south (reference to a grid\n    or projection).\n    \"\"\"\n    TRUE_NORTH = \"trueNorth\"\n    MAGNETIC_NORTH = \"magneticNorth\"\n    GRID_NORTH = \"gridNorth\"\n    TRUE_SOUTH = \"trueSouth\"\n    MAGNETIC_SOUTH = \"magneticsouth\"\n    GRID_SOUTH = \"gridsouth\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Geometry","title":"<code>Geometry</code>","text":"<p>               Bases: <code>TransfiniteSetOfDirectPositions</code></p> <p>Geometry is the base class of the geometric object taxonomy, supporting interfaces common to all geographically referenced geometric objects. Instances of <code>Geometry</code> are sets of <code>DirectPosition</code> attributes in a particular reference coordinate system. <code>Geometry</code> can be thought of as an infinite set of points that satisfies the set operation interfaces for a set of direct positions constituting a <code>TransfiniteSetOfDirectPositions</code> (essentially a set defined by a <code>bool</code> \u201cisIn\u201d operator). As an infinite collection class cannot be implemented directly, a <code>bool</code> inclusion test must be provided by the <code>Geometry</code> interface. This document focuses on vector geometry classes, but future developments may use <code>Geometry</code> as a base class without modification.</p> <p>NOTE 1: As a type, <code>Geometry</code> has neither a well-defined default state nor a value representation as a data type. As far as these are concerned, instantiated subclasses of <code>Geometry</code> do.</p> <p>NOTE 2: In its current state this abstract class is a partial implementation of the <code>Geometry</code> interface described in ISO 19107:2019.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Geometry(TransfiniteSetOfDirectPositions):\n    \"\"\"\n    Geometry is the base class of the geometric object taxonomy, supporting\n    interfaces common to all geographically referenced geometric objects.\n    Instances of `Geometry` are sets of `DirectPosition` attributes in a\n    particular reference coordinate system. `Geometry` can be thought of as an\n    infinite set of points that satisfies the set operation interfaces for a\n    set of direct positions constituting a `TransfiniteSetOfDirectPositions`\n    (essentially a set defined by a `bool` \u201cisIn\u201d operator). As an infinite\n    collection class cannot be implemented directly, a `bool` inclusion test\n    must be provided by the `Geometry` interface. This document focuses on\n    vector geometry classes, but future developments may use `Geometry` as a\n    base class without modification.\n\n    NOTE 1: As a type, `Geometry` has neither a well-defined default state\n    nor a value representation as a data type. As far as these are concerned,\n    instantiated subclasses of `Geometry` do.\n\n    NOTE 2: In its current state this abstract class is a partial\n    implementation of the `Geometry` interface described in ISO 19107:2019.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def is_empty(self) -&gt; bool:\n        \"\"\"\n        The boolean `is_empty` attribute indicates that the geometric object\n        instance is the empty set. Since the empty set is unique, all empty\n        objects are \u201cspatially equivalent\u201d to any other empty object.\n        As soon as an instance is known to be empty (`self.is_empty = True`),\n        the rest of the information in the object becomes redundant until the\n        boolean value `self.is_empty` is reset to `False`.\n\n        If the `is_empty` attribute is set to `True`, the object is locked\n        until the `is_empty` attribute is set to `False`. Essentially, setting\n        the `is_empty` attribute to `True` changes the behavior (as defined by\n        its class) of the object to match the `Empty` class, defined in\n        ISO 19107:2019 section 6.4.10.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_reference_system(self) -&gt; 'CoordinateReferenceSystem':\n        \"\"\"\n        The coordinate reference system in which the coordinate geometry\n        is given.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Geometry.coordinate_reference_system","title":"<code>coordinate_reference_system: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The coordinate reference system in which the coordinate geometry is given.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Geometry.is_empty","title":"<code>is_empty: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The boolean <code>is_empty</code> attribute indicates that the geometric object instance is the empty set. Since the empty set is unique, all empty objects are \u201cspatially equivalent\u201d to any other empty object. As soon as an instance is known to be empty (<code>self.is_empty = True</code>), the rest of the information in the object becomes redundant until the boolean value <code>self.is_empty</code> is reset to <code>False</code>.</p> <p>If the <code>is_empty</code> attribute is set to <code>True</code>, the object is locked until the <code>is_empty</code> attribute is set to <code>False</code>. Essentially, setting the <code>is_empty</code> attribute to <code>True</code> changes the behavior (as defined by its class) of the object to match the <code>Empty</code> class, defined in ISO 19107:2019 section 6.4.10.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point","title":"<code>Point</code>","text":"<p>               Bases: <code>Primitive</code></p> <p>A Geometry Point instance is a unique location given by a direct position.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Point(Primitive):\n    \"\"\"\n    A Geometry Point instance is a unique location given by a direct position.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def position(self) -&gt; DirectPosition:\n        \"\"\"\n        The `position` attribute gives the location of the `Point` in its\n        reference system. The distinction between `Point` and `DirectPosition`\n        lies in the fact that `Point` as an object instance has an identity\n        provided by the system, whereas a `DirectPosition` instance is a data\n        type whose only identity is its own value.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def boundary(self) -&gt; Geometry:\n        \"\"\"\n        The \u201cboundary\u201d attribute gives the Point's boundary in the form of a\n        `Geometry` reference system. Since a point's boundary is always empty,\n        the boundary object will always have the value is_empty = TRUE.\n        \"\"\"\n\n    @abstractmethod\n    def bearing(self, to_point: DirectPosition) -&gt; Bearing:\n        \"\"\"\n        The `bearing` operation is similar to `vector_to_point` without the\n        distance information in the vector. It is essentially a constructor\n        for `Bearing` based on this point and a target point.\n        \"\"\"\n\n    @abstractmethod\n    def point_at_distance(self, bearing: Vector) -&gt; DirectPosition:\n        \"\"\"\n        The `point_at_distance` operation will return a `DirectPosition`\n        attribute given a vector in space tangent to the point whose direction\n        determines a geodesic curve that intersects this `DirectPosition` at\n        a distance equal to the length of the vector. This operation solves\n        the first geodesic problem.\n        \"\"\"\n\n    @abstractmethod\n    def vector_to_point(self, to_point: DirectPosition) -&gt; Vector:\n        \"\"\"\n        The `vector_to_point` operation will return a vector in space tangent\n        to the point whose direction determines a geodesic curve that\n        intersects `to_point` at a distance equal to the length of the vector.\n        This operation solves the second geodesic problem.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point.boundary","title":"<code>boundary: Geometry</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The \u201cboundary\u201d attribute gives the Point's boundary in the form of a <code>Geometry</code> reference system. Since a point's boundary is always empty, the boundary object will always have the value is_empty = TRUE.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point.position","title":"<code>position: DirectPosition</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The <code>position</code> attribute gives the location of the <code>Point</code> in its reference system. The distinction between <code>Point</code> and <code>DirectPosition</code> lies in the fact that <code>Point</code> as an object instance has an identity provided by the system, whereas a <code>DirectPosition</code> instance is a data type whose only identity is its own value.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point.bearing","title":"<code>bearing(to_point)</code>  <code>abstractmethod</code>","text":"<p>The <code>bearing</code> operation is similar to <code>vector_to_point</code> without the distance information in the vector. It is essentially a constructor for <code>Bearing</code> based on this point and a target point.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef bearing(self, to_point: DirectPosition) -&gt; Bearing:\n    \"\"\"\n    The `bearing` operation is similar to `vector_to_point` without the\n    distance information in the vector. It is essentially a constructor\n    for `Bearing` based on this point and a target point.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point.point_at_distance","title":"<code>point_at_distance(bearing)</code>  <code>abstractmethod</code>","text":"<p>The <code>point_at_distance</code> operation will return a <code>DirectPosition</code> attribute given a vector in space tangent to the point whose direction determines a geodesic curve that intersects this <code>DirectPosition</code> at a distance equal to the length of the vector. This operation solves the first geodesic problem.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef point_at_distance(self, bearing: Vector) -&gt; DirectPosition:\n    \"\"\"\n    The `point_at_distance` operation will return a `DirectPosition`\n    attribute given a vector in space tangent to the point whose direction\n    determines a geodesic curve that intersects this `DirectPosition` at\n    a distance equal to the length of the vector. This operation solves\n    the first geodesic problem.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Point.vector_to_point","title":"<code>vector_to_point(to_point)</code>  <code>abstractmethod</code>","text":"<p>The <code>vector_to_point</code> operation will return a vector in space tangent to the point whose direction determines a geodesic curve that intersects <code>to_point</code> at a distance equal to the length of the vector. This operation solves the second geodesic problem.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef vector_to_point(self, to_point: DirectPosition) -&gt; Vector:\n    \"\"\"\n    The `vector_to_point` operation will return a vector in space tangent\n    to the point whose direction determines a geodesic curve that\n    intersects `to_point` at a distance equal to the length of the vector.\n    This operation solves the second geodesic problem.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Primitive","title":"<code>Primitive</code>","text":"<p>               Bases: <code>Geometry</code></p> <p>A geometry primitive is a related geometric object with a uniform dimension at each interior point. Depending on the spatial dimension of the coordinate space, primitives are made up of the subclasses Point, Curve, Surface and Solid.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Primitive(Geometry):\n    \"\"\"\n    A geometry primitive is a related geometric object with a uniform\n    dimension at each interior point. Depending on the spatial dimension\n    of the coordinate space, primitives are made up of the subclasses Point,\n    Curve, Surface and Solid.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def segment(self) -&gt; Optional[Sequence['Primitive']]:\n        \"\"\"\n        The `segment` role lists the components (smallest primitives of the\n        same dimension contained) of Primitive, each of which defines aGeometry\n        portion of the Primitive. The order of the segments is the order in\n        which they are used to define the Primitive.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Primitive.segment","title":"<code>segment: Optional[Sequence[Primitive]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The <code>segment</code> role lists the components (smallest primitives of the same dimension contained) of Primitive, each of which defines aGeometry portion of the Primitive. The order of the segments is the order in which they are used to define the Primitive.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.ReferenceDirection","title":"<code>ReferenceDirection</code>","text":"<p>               Bases: <code>ABC</code></p> <p>The ReferenceDirection interface is empty, but must be \u201cimplemented\u201d by any data type that can represent a direction (or tangent unit vector) at a point. This leads to a circular, but valid, possibly recursive definition for the Bearing data type.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class ReferenceDirection(ABC):\n    \"\"\"\n    The ReferenceDirection interface is empty, but must be \u201cimplemented\u201d by\n    any data type that can represent a direction (or tangent unit vector) at\n    a point. This leads to a circular, but valid, possibly recursive\n    definition for the Bearing data type.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.RelativeDirection","title":"<code>RelativeDirection</code>","text":"<p>               Bases: <code>Enum</code></p> <p><code>RelativeDirection</code> enumerates common potential relative reference directions for azimuth, generally used in reference to a moving vehicle. Common values include front, rear, port (90\u00b0 left) or starboard (90\u00b0 right).</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class RelativeDirection(Enum):\n    \"\"\"\n    `RelativeDirection` enumerates common potential relative reference\n    directions for azimuth, generally used in reference to a moving\n    vehicle. Common values include front, rear, port (90\u00b0 left) or\n    starboard (90\u00b0 right).\n    \"\"\"\n    FORE_FOREWARD = \"fore/forward\"\n    AFT_BACKWARD = \"aft/backward\"\n    PORT_LEFT = \"port/left\"\n    STARBOARD_RIGHT = \"starboard/right\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Rotation","title":"<code>Rotation</code>","text":"<p>               Bases: <code>Enum</code></p> <p><code>Rotation</code> enumerates the two potential directions of rotation for an angular measurement, clockwise and anti-clockwise. These directions of rotation are considered as seen from above the reference surface.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Rotation(Enum):\n    \"\"\"\n    `Rotation` enumerates the two potential directions of rotation for an\n    angular measurement, clockwise and anti-clockwise. These directions\n    of rotation are considered as seen from above the reference surface.\n    \"\"\"\n    CLOCKWISE_RIGHT = \"clockwise/right\"\n    COUNTER_CLOCKWISE_LEFT = \"counter-clockwise/left\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.TransfiniteSetOfDirectPositions","title":"<code>TransfiniteSetOfDirectPositions</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Many geometry operations are based on simple set theory, which does not vary according to the cardinality of the sets concerned. Unfortunately, the term \u201cset\u201d in most programming languages refers to a finite collection of objects or object identities. The abstract class <code>TransfiniteSetOfDirectPositions</code> represents set-theoretic operations that cannot always be tested by simple enumeration techniques for sets with a small number of elements.</p> <p>A <code>TransfiniteSetOfDirectPositions</code> can be very large in terms of its number of elements (limited only to a finite number by the use of finite-precision numerical computation). The collection</p> <p>{x \u2208 R |0 \u2264 x \u2264 1}</p> <p>is logically infinite. On a digital computer, it may consist of only 2^64 objects. That's a lot, but it's not infinite. The term \u201ctransfinite\u201d indicates that nothing on a digital computer is truly infinite, but that doesn't prevent it from being too big to process in a reasonable time interval.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class TransfiniteSetOfDirectPositions(ABC):\n    \"\"\"\n    Many geometry operations are based on simple set theory, which does not\n    vary according to the cardinality of the sets concerned. Unfortunately,\n    the term \u201cset\u201d in most programming languages refers to a finite collection\n    of objects or object identities. The abstract class\n    `TransfiniteSetOfDirectPositions` represents set-theoretic operations that\n    cannot always be tested by simple enumeration techniques for sets with a\n    small number of elements.\n\n    A `TransfiniteSetOfDirectPositions` can be very large in terms of its\n    number of elements (limited only to a finite number by the use of\n    finite-precision numerical computation). The collection\n\n    {x \u2208 R |0 \u2264 x \u2264 1}\n\n    is logically infinite. On a digital computer, it may consist of only\n    2^64 objects. That's a lot, but it's not infinite. The term \u201ctransfinite\u201d\n    indicates that nothing on a digital computer is truly infinite, but that\n    doesn't prevent it from being too big to process in a reasonable\n    time interval.\n    \"\"\"\n\n    @abstractmethod\n    def contains(self, pt: DirectPosition) -&gt; bool:\n        \"\"\"\n        Determine whether a particular `DirectPosition` is part of the set.\n        Each type of `Geometry` interface will have to implement this with\n        the limitations of a computing platform with limited precision.\n\n        Let \u00c0 be a transfinite set of direct positions. Then we have:\n            [x \u2208 A] \u21d2 [A.contains(x) = TRUE]\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.TransfiniteSetOfDirectPositions.contains","title":"<code>contains(pt)</code>  <code>abstractmethod</code>","text":"<p>Determine whether a particular <code>DirectPosition</code> is part of the set. Each type of <code>Geometry</code> interface will have to implement this with the limitations of a computing platform with limited precision.</p> <p>Let \u00c0 be a transfinite set of direct positions. Then we have:     [x \u2208 A] \u21d2 [A.contains(x) = TRUE]</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef contains(self, pt: DirectPosition) -&gt; bool:\n    \"\"\"\n    Determine whether a particular `DirectPosition` is part of the set.\n    Each type of `Geometry` interface will have to implement this with\n    the limitations of a computing platform with limited precision.\n\n    Let \u00c0 be a transfinite set of direct positions. Then we have:\n        [x \u2208 A] \u21d2 [A.contains(x) = TRUE]\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector","title":"<code>Vector</code>","text":"<p>               Bases: <code>ABC</code></p> <p>The common \u201cvector\u201d in Euclidean spaces can be translated to any point in space because the flat nature of Euclidean space has a universal coordinate system that works at any \u201cstarting\u201d point of a vector.</p> <p>The Vector data type in this document must be associated with a point on the GeometricReferenceSurface, which must be well defined. The directional parts of the vector must also specify the \u201cstarting position\u201d of the vector. Where the coordinate system performs well, the generating family of vectors in tangent space is represented in 3D geocentric space by the tangents to the coordinate functions. For example, in a latitude-longitude system, the unit vectors tangent to the constant longitude curves, as well as to the latitude curves, represent a local tangent space basis, except for the poles where the longitude function has a zero tangent. longitude function has a zero tangent at the pole. If (lat, long = (d\u03c6, d\u03bb), then the symbols (d\u03c6, d\u03bb) are the differentials of the two-coordinate functions represented by the tangents in the direction of increasing \u03c6, respectively \u03bb, and represent a basis for local tangent spaces.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>class Vector(ABC):\n    \"\"\"\n    The common \u201cvector\u201d in Euclidean spaces can be translated to any point\n    in space because the flat nature of Euclidean space has a universal\n    coordinate system that works at any \u201cstarting\u201d point of a vector.\n\n    The Vector data type in this document must be associated with a point\n    on the GeometricReferenceSurface, which must be well defined.\n    The directional parts of the vector must also specify the\n    \u201cstarting position\u201d of the vector. Where the coordinate system performs\n    well, the generating family of vectors in tangent space is represented\n    in 3D geocentric space by the tangents to the coordinate functions.\n    For example, in a latitude-longitude system, the unit vectors tangent\n    to the constant longitude curves, as well as to the latitude curves,\n    represent a local tangent space basis, except for the poles where the\n    longitude function has a zero tangent. longitude function has a zero\n    tangent at the pole. If (lat, long = (d\u03c6, d\u03bb), then the symbols (d\u03c6, d\u03bb)\n    are the differentials of the two-coordinate functions represented by the\n    tangents in the direction of increasing \u03c6, respectively \u03bb, and represent\n    a basis for local tangent spaces.\n    \"\"\"\n\n    @abstractmethod\n    def __init__(self,\n                 position: DirectPosition,\n                 coordinates: float | None = None,\n                 direction: Bearing | None = None,\n                 length: 'Length | None' = None,\n                 ) -&gt; None:\n        \"\"\"\n        The constructor vector creates a vector with the given offsets or\n        direction and length at the specified direct position, in the\n        coordinate space of the direct position.\n\n        NOTE: if `coordinates` is not specified then `direction` and `length`\n        must be specified. Likewise if `direction` or `length` is not specified\n        then `coordinates` must be specified.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def origin(self) -&gt; DirectPosition:\n        \"\"\"\n        The origin attribute is the location of the point on the\n        `GeometricReferenceSurface` for which the vector is a tangent.\n        The direct position is associated with the coordinate system.\n        This determines the coordinate system for the vector. The spatial\n        dimension of the direct position determines the dimension of\n        the vector.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def offsets(self) -&gt; Sequence[float]:\n        \"\"\"\n        The offset attribute uses the direct position coordinate system and\n        represents the local tangent vector vector in the local\n        coordinate differentials.\n\n        EXAMPLE: If the Euclidean (E\u00b2) plane is used, then the `DirectPosition`\n        is a pair of coordinates (x, y) and the the vector consists of the\n        differentials in both directions. Consequently, the offset is of\n        length 2 and has a coordinate base of (dx, dy).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def dimension(self) -&gt; int:\n        \"\"\"\n        The dimension attribute is the dimension of the origin and,\n        consequently, the dimension of the tangent space of the vector.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; 'CoordinateSystem':\n        \"\"\"\n        The `coordinate_system` attribute is the origin system and, therefore,\n        determines the coordinates of the local tangent space in which the\n        vector exists.\n        \"\"\"\n\n    @abstractmethod\n    def cross_product(self, v2: 'Vector') -&gt; 'Vector':\n        \"\"\"\n        The cross product is a third vector perpendicular to the other two.\n        If the vector space is only two-dimensional, the cross product gives\n        an oriented intensity and not a vector.\n        \"\"\"\n\n    @abstractmethod\n    def dot_product(self, v2: 'Vector') -&gt; float:\n        \"\"\"\n        The dot product operation yields a real value which is the sum of the\n        products of the corresponding coefficients coefficients of the\n        two vectors.\n        \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.coordinate_system","title":"<code>coordinate_system: CoordinateSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The <code>coordinate_system</code> attribute is the origin system and, therefore, determines the coordinates of the local tangent space in which the vector exists.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.dimension","title":"<code>dimension: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The dimension attribute is the dimension of the origin and, consequently, the dimension of the tangent space of the vector.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.offsets","title":"<code>offsets: Sequence[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The offset attribute uses the direct position coordinate system and represents the local tangent vector vector in the local coordinate differentials.</p> <p>EXAMPLE: If the Euclidean (E\u00b2) plane is used, then the <code>DirectPosition</code> is a pair of coordinates (x, y) and the the vector consists of the differentials in both directions. Consequently, the offset is of length 2 and has a coordinate base of (dx, dy).</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.origin","title":"<code>origin: DirectPosition</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The origin attribute is the location of the point on the <code>GeometricReferenceSurface</code> for which the vector is a tangent. The direct position is associated with the coordinate system. This determines the coordinate system for the vector. The spatial dimension of the direct position determines the dimension of the vector.</p>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.__init__","title":"<code>__init__(position, coordinates=None, direction=None, length=None)</code>  <code>abstractmethod</code>","text":"<p>The constructor vector creates a vector with the given offsets or direction and length at the specified direct position, in the coordinate space of the direct position.</p> <p>NOTE: if <code>coordinates</code> is not specified then <code>direction</code> and <code>length</code> must be specified. Likewise if <code>direction</code> or <code>length</code> is not specified then <code>coordinates</code> must be specified.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef __init__(self,\n             position: DirectPosition,\n             coordinates: float | None = None,\n             direction: Bearing | None = None,\n             length: 'Length | None' = None,\n             ) -&gt; None:\n    \"\"\"\n    The constructor vector creates a vector with the given offsets or\n    direction and length at the specified direct position, in the\n    coordinate space of the direct position.\n\n    NOTE: if `coordinates` is not specified then `direction` and `length`\n    must be specified. Likewise if `direction` or `length` is not specified\n    then `coordinates` must be specified.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.cross_product","title":"<code>cross_product(v2)</code>  <code>abstractmethod</code>","text":"<p>The cross product is a third vector perpendicular to the other two. If the vector space is only two-dimensional, the cross product gives an oriented intensity and not a vector.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef cross_product(self, v2: 'Vector') -&gt; 'Vector':\n    \"\"\"\n    The cross product is a third vector perpendicular to the other two.\n    If the vector space is only two-dimensional, the cross product gives\n    an oriented intensity and not a vector.\n    \"\"\"\n</code></pre>"},{"location":"geometry/primitive/#opengis.geometry.primitive.Vector.dot_product","title":"<code>dot_product(v2)</code>  <code>abstractmethod</code>","text":"<p>The dot product operation yields a real value which is the sum of the products of the corresponding coefficients coefficients of the two vectors.</p> Source code in <code>opengis/geometry/primitive.py</code> <pre><code>@abstractmethod\ndef dot_product(self, v2: 'Vector') -&gt; float:\n    \"\"\"\n    The dot product operation yields a real value which is the sum of the\n    products of the corresponding coefficients coefficients of the\n    two vectors.\n    \"\"\"\n</code></pre>"},{"location":"metadata/acquisition/","title":"<code>acquisition</code> module","text":"<p>This is the <code>acquisition</code> module.</p> <p>This subpackage contains geographic metadata structures regarding data acquisition that are derived from the ISO 19115-2:2019 international standard.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation","title":"<code>AcquisitionInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Designations for the measuring instruments and their bands, the platform carrying them, and the mission to which the data contributes.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class AcquisitionInformation(ABC):\n    \"\"\"\n    Designations for the measuring instruments and their bands, the platform\n    carrying them, and the mission to which the data contributes.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Optional[Sequence[Scope]]:\n        \"\"\"The specific data to which the acquisition information applies.\"\"\"\n\n    @property\n    @abstractmethod\n    def acquisition_plan(self) -&gt; Optional[Sequence[Plan]]:\n        \"\"\"Identifies the plan as implemented by the acquisition.\"\"\"\n\n    @property\n    @abstractmethod\n    def acquisition_requirement(self) -&gt; Optional[Sequence[Requirement]]:\n        \"\"\"\n        Identifies the requirement the data acquisition intends to satisfy.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def environmental_conditions(self) -&gt; Optional[EnvironmentalRecord]:\n        \"\"\"\n        A record of the environmental circumstances during the data\n        acquisition.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def instrument(self) -&gt; Optional[Sequence[Instrument]]:\n        \"\"\"\n        General information about the instrument used in data acquisition.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def objective(self) -&gt; Optional[Sequence[Objective]]:\n        \"\"\"Identification of the area or object to be sensed.\"\"\"\n\n    @property\n    @abstractmethod\n    def operation(self) -&gt; Optional[Sequence[Operation]]:\n        \"\"\"\n        General information about an identifiable activity which provided the\n        data.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def platform(self) -&gt; Optional[Sequence[Platform]]:\n        \"\"\"\n        General information about the platform from which the data were taken.\n        \"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.acquisition_plan","title":"<code>acquisition_plan: Optional[Sequence[Plan]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifies the plan as implemented by the acquisition.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.acquisition_requirement","title":"<code>acquisition_requirement: Optional[Sequence[Requirement]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifies the requirement the data acquisition intends to satisfy.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.environmental_conditions","title":"<code>environmental_conditions: Optional[EnvironmentalRecord]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A record of the environmental circumstances during the data acquisition.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.instrument","title":"<code>instrument: Optional[Sequence[Instrument]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General information about the instrument used in data acquisition.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.objective","title":"<code>objective: Optional[Sequence[Objective]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of the area or object to be sensed.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.operation","title":"<code>operation: Optional[Sequence[Operation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General information about an identifiable activity which provided the data.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.platform","title":"<code>platform: Optional[Sequence[Platform]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General information about the platform from which the data were taken.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.AcquisitionInformation.scope","title":"<code>scope: Optional[Sequence[Scope]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The specific data to which the acquisition information applies.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ContextCode","title":"<code>ContextCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Designation of criterion for defining the context of the scanning process event.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class ContextCode(Enum):\n    \"\"\"\n    Designation of criterion for defining the context of the scanning\n    process event.\n    \"\"\"\n\n    ACQUISITION = \"acquisition\"\n    \"\"\"Event related to a specific collection.\"\"\"\n\n    PASS = \"pass\"\n    \"\"\"Event related to a sequence of collections.\"\"\"\n\n    WAY_POINT = \"wayPoint\"\n    \"\"\"Event related to a navigational manoeuvre.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ContextCode.ACQUISITION","title":"<code>ACQUISITION = 'acquisition'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to a specific collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ContextCode.PASS","title":"<code>PASS = 'pass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to a sequence of collections.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ContextCode.WAY_POINT","title":"<code>WAY_POINT = 'wayPoint'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to a navigational manoeuvre.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord","title":"<code>EnvironmentalRecord</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the environmental conditions during the acquisition.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class EnvironmentalRecord(ABC):\n    \"\"\"\n    Information about the environmental conditions during the acquisition.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def average_air_temperature(self) -&gt; Optional[float]:\n        \"\"\"\n        Average air temperature along the flight pass during the photo flight.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def max_relative_humidity(self) -&gt; Optional[float]:\n        \"\"\"\n        Maximum realative humitiy along the flight pass during the photo\n        flight.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def max_altitude(self) -&gt; Optional[float]:\n        \"\"\"\n        Maximum altitude during the photo flight.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def meteorological_conditions(self) -&gt; Optional[str]:\n        \"\"\"\n        Meteorological conditions in the photo flight area, in particular\n        clouds, snow, and wind.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def solar_azimuth(self) -&gt; Optional[float]:\n        \"\"\"\n        Clockwise angle in degrees from north to the centre of the sun's disc.\n\n        NOTE: This Angle is calculated from the nadir point of the sensor, not\n        the centre point of the image.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def solar_elevation(self) -&gt; Optional[float]:\n        \"\"\"\n        Angle between the horizonand the centre of the sun's disk.\n        \"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.average_air_temperature","title":"<code>average_air_temperature: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Average air temperature along the flight pass during the photo flight.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.max_altitude","title":"<code>max_altitude: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maximum altitude during the photo flight.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.max_relative_humidity","title":"<code>max_relative_humidity: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maximum realative humitiy along the flight pass during the photo flight.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.meteorological_conditions","title":"<code>meteorological_conditions: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Meteorological conditions in the photo flight area, in particular clouds, snow, and wind.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.solar_azimuth","title":"<code>solar_azimuth: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Clockwise angle in degrees from north to the centre of the sun's disc.</p> <p>NOTE: This Angle is calculated from the nadir point of the sensor, not the centre point of the image.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EnvironmentalRecord.solar_elevation","title":"<code>solar_elevation: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Angle between the horizonand the centre of the sun's disk.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event","title":"<code>Event</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Identification of a significant collection point within an operation.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Event(ABC):\n    \"\"\"\n    Identification of a significant collection point within an\n    operation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"Event name or number.\"\"\"\n\n    @property\n    @abstractmethod\n    def trigger(self) -&gt; TriggerCode:\n        \"\"\"Initiator of the event.\"\"\"\n\n    @property\n    @abstractmethod\n    def context(self) -&gt; ContextCode:\n        \"\"\"Meaning of the event.\"\"\"\n\n    @property\n    @abstractmethod\n    def sequence(self) -&gt; SequenceCode:\n        \"\"\"Relative time ordering of the event.\"\"\"\n\n    @property\n    @abstractmethod\n    def time(self) -&gt; datetime:\n        \"\"\"Time the event occurred.\"\"\"\n\n    @property\n    @abstractmethod\n    def expected_objective(self) -&gt; Optional[Sequence['Objective']]:\n        \"\"\"An objective expected to be completed by the event.\"\"\"\n\n    @property\n    @abstractmethod\n    def related_pass(self) -&gt; PlatformPass:\n        \"\"\"A `PlatformPass` related to the `Event`.\"\"\"\n\n    @property\n    @abstractmethod\n    def related_sensor(self) -&gt; Sequence[Instrument]:\n        \"\"\"An `Instrument` related to\n            the event.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.context","title":"<code>context: ContextCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Meaning of the event.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.expected_objective","title":"<code>expected_objective: Optional[Sequence[Objective]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>An objective expected to be completed by the event.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Event name or number.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.related_pass","title":"<code>related_pass: PlatformPass</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A <code>PlatformPass</code> related to the <code>Event</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.related_sensor","title":"<code>related_sensor: Sequence[Instrument]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>An <code>Instrument</code> related to the event.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.sequence","title":"<code>sequence: SequenceCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Relative time ordering of the event.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.time","title":"<code>time: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Time the event occurred.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Event.trigger","title":"<code>trigger: TriggerCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Initiator of the event.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode","title":"<code>EventTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Type of event related to a platform, instrument, or sensor.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class EventTypeCode(Enum):\n    \"\"\"Type of event related to a platform, instrument, or sensor.\"\"\"\n\n    ANNOUNCEMENT = \"announcement\"\n    \"\"\"\n    Announcementannouncement about future events relevant to the\n    platform/instrument/sensor.\n    \"\"\"\n\n    CALIBRATION = \"calibration\"\n    \"\"\"Calibration event for the platform/instrument/sensor.\"\"\"\n\n    CALIBRATION_COEFFICIENT_UPDATE = \"calibrationCoefficientUpdate\"\n    \"\"\"Update of calibration information for the platform/instrument/sensor.\"\"\"\n\n    DATA_LOSS = \"dataLoss\"\n    \"\"\"Event related to data loss.\"\"\"\n\n    FATAL = \"fatal\"\n    \"\"\"Event that renders the platform/instrument/sensor unusable.\"\"\"\n\n    MANOEUVRE = \"manoeuvre\"\n    \"\"\"Event related to a manoeuvre of the platform/instrument/sensor.\"\"\"\n\n    MISSING_DATA = \"missingData\"\n    \"\"\"Event related to missing data from the platform/instrument/sensor.\"\"\"\n\n    NOTICE = \"notice\"\n    \"\"\"Notice about events related to the platform/instrument/sensor.\"\"\"\n\n    PRELAUNCH = \"prelaunch\"\n    \"\"\"Event related to prelaunch period for the platform/instrument/sensor.\"\"\"\n\n    SEVERE = \"severe\"\n    \"\"\"\n    Event with significant impact on the performance of the platform/\n    instrument/sensor.\n    \"\"\"\n\n    SWITCH_OFF = \"switchOff\"\n    \"\"\"Event related to switching off platform/instrument/sensor.\"\"\"\n\n    SWITCH_ON = \"switchOn\"\n    \"\"\"Event related to switching on platform/instrument/sensor.\"\"\"\n\n    CLEAN = \"clean\"\n    \"\"\"Event related to cleaning the platform/instrument/sensor.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.ANNOUNCEMENT","title":"<code>ANNOUNCEMENT = 'announcement'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Announcementannouncement about future events relevant to the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.CALIBRATION","title":"<code>CALIBRATION = 'calibration'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Calibration event for the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.CALIBRATION_COEFFICIENT_UPDATE","title":"<code>CALIBRATION_COEFFICIENT_UPDATE = 'calibrationCoefficientUpdate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Update of calibration information for the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.CLEAN","title":"<code>CLEAN = 'clean'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to cleaning the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.DATA_LOSS","title":"<code>DATA_LOSS = 'dataLoss'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to data loss.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.FATAL","title":"<code>FATAL = 'fatal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event that renders the platform/instrument/sensor unusable.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.MANOEUVRE","title":"<code>MANOEUVRE = 'manoeuvre'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to a manoeuvre of the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.MISSING_DATA","title":"<code>MISSING_DATA = 'missingData'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to missing data from the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.NOTICE","title":"<code>NOTICE = 'notice'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Notice about events related to the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.PRELAUNCH","title":"<code>PRELAUNCH = 'prelaunch'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to prelaunch period for the platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.SEVERE","title":"<code>SEVERE = 'severe'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event with significant impact on the performance of the platform/ instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.SWITCH_OFF","title":"<code>SWITCH_OFF = 'switchOff'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to switching off platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.EventTypeCode.SWITCH_ON","title":"<code>SWITCH_ON = 'switchOn'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event related to switching on platform/instrument/sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.GeometryTypeCode","title":"<code>GeometryTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Geometric description of the collection.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class GeometryTypeCode(Enum):\n    \"\"\"Geometric description of the collection.\"\"\"\n\n    POINT = \"point\"\n    \"\"\"Single geographic point of interest.\"\"\"\n\n    LINEAR = \"linear\"\n    \"\"\"Extended collection in a single vector.\"\"\"\n\n    AREAL = \"areal\"\n    \"\"\"Collection of a geographic area defined by a polygon (coverage).\"\"\"\n\n    STRIP = \"strip\"\n    \"\"\"Series of linear collections grouped by way points.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.GeometryTypeCode.AREAL","title":"<code>AREAL = 'areal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Collection of a geographic area defined by a polygon (coverage).</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.GeometryTypeCode.LINEAR","title":"<code>LINEAR = 'linear'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Extended collection in a single vector.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.GeometryTypeCode.POINT","title":"<code>POINT = 'point'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Single geographic point of interest.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.GeometryTypeCode.STRIP","title":"<code>STRIP = 'strip'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Series of linear collections grouped by way points.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument","title":"<code>Instrument</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Designations for the measuring instruments.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Instrument(ABC):\n    \"\"\"Designations for the measuring instruments.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Complete citation of the instrument.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"Unique identification of the instrument.\"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; str:\n        \"\"\"\n        Name of the type of instrument. Examples: framing, line-scan,\n        push-broom, pan-frame.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Textual description of the instrument.\"\"\"\n\n    @property\n    @abstractmethod\n    def mounted_on(self) -&gt; Optional['Platform']:\n        \"\"\"Platform on which the instrument is mounted\"\"\"\n\n    @property\n    @abstractmethod\n    def sensor(self) -&gt; Optional[Sequence['Sensor']]:\n        \"\"\"Instrument has a sensor.\"\"\"\n\n    @property\n    @abstractmethod\n    def history(self) -&gt; Optional['InstrumentEventList']:\n        \"\"\"List of events associated with the instrument.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.citation","title":"<code>citation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Complete citation of the instrument.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Textual description of the instrument.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.history","title":"<code>history: Optional[InstrumentEventList]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>List of events associated with the instrument.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique identification of the instrument.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.mounted_on","title":"<code>mounted_on: Optional[Platform]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Platform on which the instrument is mounted</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.sensor","title":"<code>sensor: Optional[Sequence[Sensor]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instrument has a sensor.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Instrument.type","title":"<code>type: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the type of instrument. Examples: framing, line-scan, push-broom, pan-frame.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent","title":"<code>InstrumentEvent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>An event related to a platform, instrument, or sensor.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class InstrumentEvent(ABC):\n    \"\"\"An event related to a platform, instrument, or sensor.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Citation to the `InstrumentEvent`.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"Description of the `InstumentEvent`.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Sequence[Extent]]:\n        \"\"\"Extent of the `InstrumentEvent`.\"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; EventTypeCode:\n        \"\"\"Type of the `InstrumentEvent`.\"\"\"\n\n    @property\n    @abstractmethod\n    def revision_history(self) -&gt; Optional[Sequence[Revision]]:\n        \"\"\"History of the revisions of the `InstrumentEvent`.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent.citation","title":"<code>citation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation to the <code>InstrumentEvent</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the <code>InstumentEvent</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent.extent","title":"<code>extent: Optional[Sequence[Extent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Extent of the <code>InstrumentEvent</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent.revision_history","title":"<code>revision_history: Optional[Sequence[Revision]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>History of the revisions of the <code>InstrumentEvent</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEvent.type","title":"<code>type: EventTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of the <code>InstrumentEvent</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList","title":"<code>InstrumentEventList</code>","text":"<p>               Bases: <code>ABC</code></p> <p>List of events relaed to platform, instrument, or sensor.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class InstrumentEventList(ABC):\n    \"\"\"List of events relaed to platform, instrument, or sensor.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Citation to the `InstrumentEventList`.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"\n        Description of the language and character set used for the\n        `InstrumentationEventList`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def locale(self) -&gt; Optional[str]:\n        \"\"\"\n        Description of the language and character set used for the\n        `InstrumentationEventList`. A string conforming to IETF BCP 47.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def constraints(self) -&gt; Optional[Sequence[Constraints]]:\n        \"\"\"Use and access constraints.\"\"\"\n\n    @property\n    @abstractmethod\n    def instrumentation_event(self) -&gt; Optional[Sequence[InstrumentEvent]]:\n        \"\"\"Events(s) in the list of events.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList.citation","title":"<code>citation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation to the <code>InstrumentEventList</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList.constraints","title":"<code>constraints: Optional[Sequence[Constraints]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Use and access constraints.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the language and character set used for the <code>InstrumentationEventList</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList.instrumentation_event","title":"<code>instrumentation_event: Optional[Sequence[InstrumentEvent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Events(s) in the list of events.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.InstrumentEventList.locale","title":"<code>locale: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the language and character set used for the <code>InstrumentationEventList</code>. A string conforming to IETF BCP 47.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective","title":"<code>Objective</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Describes the characteristics, spatial and temporal extent of the intended object to be observed.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Objective(ABC):\n    \"\"\"\n    Describes the characteristics, spatial and temporal extent of the intended\n    object to be observed.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Sequence[Identifier]:\n        \"\"\"Registered code used to identify the objective.\"\"\"\n\n    @property\n    @abstractmethod\n    def priority(self) -&gt; Optional[str]:\n        \"\"\"Priority applied to the target.\"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; Optional[Sequence[ObjectiveTypeCode]]:\n        \"\"\"Collection technique for the objective.\"\"\"\n\n    @property\n    @abstractmethod\n    def function(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"Function performed by or at the objective.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Sequence[Extent]]:\n        \"\"\"\n        Extent information including the bounding box, bounding polygon,\n        vertical and temporal extent of the objective.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def objective_occurence(self) -&gt; Optional[Sequence[Event]]:\n        \"\"\"Event or events associated with objective completion.\"\"\"\n\n    @property\n    @abstractmethod\n    def platform_pass(self) -&gt; Optional[Sequence[PlatformPass]]:\n        \"\"\"Pass of the platform over the objective.\"\"\"\n\n    @property\n    @abstractmethod\n    def sensing_instrument(self) -&gt; Optional[Sequence[Instrument]]:\n        \"\"\"Instrument which senses the objective data.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.extent","title":"<code>extent: Optional[Sequence[Extent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Extent information including the bounding box, bounding polygon, vertical and temporal extent of the objective.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.function","title":"<code>function: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Function performed by or at the objective.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.identifier","title":"<code>identifier: Sequence[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Registered code used to identify the objective.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.objective_occurence","title":"<code>objective_occurence: Optional[Sequence[Event]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Event or events associated with objective completion.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.platform_pass","title":"<code>platform_pass: Optional[Sequence[PlatformPass]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Pass of the platform over the objective.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.priority","title":"<code>priority: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Priority applied to the target.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.sensing_instrument","title":"<code>sensing_instrument: Optional[Sequence[Instrument]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instrument which senses the objective data.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Objective.type","title":"<code>type: Optional[Sequence[ObjectiveTypeCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Collection technique for the objective.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ObjectiveTypeCode","title":"<code>ObjectiveTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Temporal persistence of collection objective.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class ObjectiveTypeCode(Enum):\n    \"\"\"Temporal persistence of collection objective.\"\"\"\n\n    INSTANTANEOUS_COLLECTION = \"instantaneousCollection\"\n    \"\"\"Single instance of collection.\"\"\"\n\n    PERSISTENT_VIEW = \"persistentView\"\n    \"\"\"Multiple instances of collection.\"\"\"\n\n    SURVEY = \"survey\"\n    \"\"\"Collection over specified domain.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ObjectiveTypeCode.INSTANTANEOUS_COLLECTION","title":"<code>INSTANTANEOUS_COLLECTION = 'instantaneousCollection'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Single instance of collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ObjectiveTypeCode.PERSISTENT_VIEW","title":"<code>PERSISTENT_VIEW = 'persistentView'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Multiple instances of collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.ObjectiveTypeCode.SURVEY","title":"<code>SURVEY = 'survey'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Collection over specified domain.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation","title":"<code>Operation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Designations for the operation used to acquire the dataset.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Operation(ABC):\n    \"\"\"Designations for the operation used to acquire the dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"\n        Description of the mission on which the platform observations are part\n        and the objectives of that mission.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Citation]:\n        \"\"\"Identification of the mission.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Optional[Identifier]:\n        \"\"\"Unique identification of the operation.\"\"\"\n\n    @property\n    @abstractmethod\n    def status(self) -&gt; ProgressCode:\n        \"\"\"Status of the data acquisition.\"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; Optional[OperationTypeCode]:\n        \"\"\"Collection technique for the operation.\"\"\"\n\n    @property\n    @abstractmethod\n    def other_property(self) -&gt; Optional[Record]:\n        \"\"\"Instance of other property type not included in `Sensor`.\"\"\"\n\n    @property\n    @abstractmethod\n    def other_property_type(self) -&gt; Optional[RecordType]:\n        \"\"\"Type of other property description.\"\"\"\n\n    @property\n    @abstractmethod\n    def child_operation(self) -&gt; Optional[Sequence['Operation']]:\n        \"\"\"Sub-missions that make up part of a larger mission.\"\"\"\n\n    @property\n    @abstractmethod\n    def objective(self) -&gt; Optional[Sequence[Objective]]:\n        \"\"\"Object(s) or area(s) of interest to be sensed.\"\"\"\n\n    @property\n    @abstractmethod\n    def parent_operation(self) -&gt; 'Operation':\n        \"\"\"Heritage of the operation.\"\"\"\n\n    @property\n    @abstractmethod\n    def plan(self) -&gt; Optional['Plan']:\n        \"\"\"Plan satisfied by th operation.\"\"\"\n\n    @property\n    @abstractmethod\n    def platform(self) -&gt; Optional[Sequence[Platform]]:\n        \"\"\"Platform (or platforms) used in the operation.\"\"\"\n\n    @property\n    @abstractmethod\n    def significant_event(self) -&gt; Optional[Sequence[Event]]:\n        \"\"\"Record of an event occuring during an operation.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.child_operation","title":"<code>child_operation: Optional[Sequence[Operation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Sub-missions that make up part of a larger mission.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.citation","title":"<code>citation: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of the mission.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the mission on which the platform observations are part and the objectives of that mission.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.identifier","title":"<code>identifier: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique identification of the operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.objective","title":"<code>objective: Optional[Sequence[Objective]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Object(s) or area(s) of interest to be sensed.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.other_property","title":"<code>other_property: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instance of other property type not included in <code>Sensor</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.other_property_type","title":"<code>other_property_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of other property description.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.parent_operation","title":"<code>parent_operation: Operation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Heritage of the operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.plan","title":"<code>plan: Optional[Plan]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Plan satisfied by th operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.platform","title":"<code>platform: Optional[Sequence[Platform]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Platform (or platforms) used in the operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.significant_event","title":"<code>significant_event: Optional[Sequence[Event]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Record of an event occuring during an operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.status","title":"<code>status: ProgressCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Status of the data acquisition.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Operation.type","title":"<code>type: Optional[OperationTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Collection technique for the operation.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.OperationTypeCode","title":"<code>OperationTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Code indicating whether the data contained in this packet is real (originates from live-fly or other non-simulated operational sources), simulated (originates from target simulator sources), or synthesized (a mix of real and simulated data).</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class OperationTypeCode(Enum):\n    \"\"\"\n    Code indicating whether the data contained in this packet is real\n    (originates from live-fly or other non-simulated operational sources),\n    simulated (originates from target simulator sources), or synthesized\n    (a mix of real and simulated data).\n    \"\"\"\n\n    REAL = \"real\"\n    \"\"\"Originates from live-fly or other non-simulated operational source.\"\"\"\n\n    SIMULATED = \"simulated\"\n    \"\"\"Originates from target simulator sources.\"\"\"\n\n    SYNTHESIZED = \"synthesized\"\n    \"\"\"Mix of real and simulated data.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.OperationTypeCode.REAL","title":"<code>REAL = 'real'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Originates from live-fly or other non-simulated operational source.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.OperationTypeCode.SIMULATED","title":"<code>SIMULATED = 'simulated'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Originates from target simulator sources.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.OperationTypeCode.SYNTHESIZED","title":"<code>SYNTHESIZED = 'synthesized'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Mix of real and simulated data.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan","title":"<code>Plan</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Designations for the planning information related to meeting requirements.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Plan(ABC):\n    \"\"\"\n    Designations for the planning information related to meeting requirements.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; Optional[GeometryTypeCode]:\n        \"\"\"\n        Manner of sampling geometry the planner expects for collection of the\n        objective data.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def status(self) -&gt; ProgressCode:\n        \"\"\"Current status of the plan (pending, completed, etc.).\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Citation:\n        \"\"\"Identification of authority requesting target collection.\"\"\"\n\n    @property\n    @abstractmethod\n    def operation(self) -&gt; Optional[Sequence[Operation]]:\n        \"\"\"Identification of the activity or activities that satisfy a plan.\"\"\"\n\n    @property\n    @abstractmethod\n    def satisfied_requirement(self) -&gt; Optional[Sequence[Requirement]]:\n        \"\"\"Requirement satisfied by the plan.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan.citation","title":"<code>citation: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of authority requesting target collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan.operation","title":"<code>operation: Optional[Sequence[Operation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of the activity or activities that satisfy a plan.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan.satisfied_requirement","title":"<code>satisfied_requirement: Optional[Sequence[Requirement]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Requirement satisfied by the plan.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan.status","title":"<code>status: ProgressCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Current status of the plan (pending, completed, etc.).</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Plan.type","title":"<code>type: Optional[GeometryTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Manner of sampling geometry the planner expects for collection of the objective data.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform","title":"<code>Platform</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Designations for the platform used to acquire the dataset.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Platform(ABC):\n    \"\"\"Designations for the platform used to acquire the dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Citation]:\n        \"\"\"Complete citation of the platform.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"Unique identification of the platform.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"Narrative description of the platform supporting the instrument.\"\"\"\n\n    @property\n    @abstractmethod\n    def sponsor(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Organisation responsible for building, launch, or operation of the\n        platform.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_property(self) -&gt; Optional[Record]:\n        \"\"\"Instance of other property type not included in `Sensor`.\"\"\"\n\n    @property\n    @abstractmethod\n    def other_property_type(self) -&gt; Optional[RecordType]:\n        \"\"\"Type of other property description.\"\"\"\n\n    @property\n    @abstractmethod\n    def instrument(self) -&gt; Sequence[Instrument]:\n        \"\"\"Instrument(s) mounted on a platform\"\"\"\n\n    @property\n    @abstractmethod\n    def history(self) -&gt; Optional[Sequence[InstrumentEventList]]:\n        \"\"\"List of events affecting a platform.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.citation","title":"<code>citation: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Complete citation of the platform.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Narrative description of the platform supporting the instrument.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.history","title":"<code>history: Optional[Sequence[InstrumentEventList]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>List of events affecting a platform.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique identification of the platform.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.instrument","title":"<code>instrument: Sequence[Instrument]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instrument(s) mounted on a platform</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.other_property","title":"<code>other_property: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instance of other property type not included in <code>Sensor</code>.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.other_property_type","title":"<code>other_property_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of other property description.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Platform.sponsor","title":"<code>sponsor: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Organisation responsible for building, launch, or operation of the platform.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PlatformPass","title":"<code>PlatformPass</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Identification of collection coverage. Identifies a particular pass made by the platform during data acquisition. A platform pass is used to provide supporting identifying information for an event and for data acquisition of a particular objective.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class PlatformPass(ABC):\n    \"\"\"Identification of collection coverage. Identifies a particular pass\n    made by the platform during data acquisition. A platform pass is used to\n    provide supporting identifying information for an event and for data\n    acquisition of a particular objective.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"Unique name of the pass.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Extent]:\n        \"\"\"Temporal and spatial extent of the pass.\"\"\"\n\n    @property\n    @abstractmethod\n    def related_event(self) -&gt; Optional[Sequence['Event']]:\n        \"\"\"Occurrence of one or more events for a pass.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PlatformPass.extent","title":"<code>extent: Optional[Extent]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Temporal and spatial extent of the pass.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PlatformPass.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique name of the pass.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PlatformPass.related_event","title":"<code>related_event: Optional[Sequence[Event]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Occurrence of one or more events for a pass.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PriorityCode","title":"<code>PriorityCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Ordered list of priorities.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class PriorityCode(Enum):\n    \"\"\"Ordered list of priorities.\"\"\"\n\n    CRITICAL = \"critical\"\n    \"\"\"Of decisive importance.\"\"\"\n\n    HIGH_IMPORTANCE = \"highImportance\"\n    \"\"\"Requires resources to be made available.\"\"\"\n\n    MEDIUM_IMPORTANCE = \"mediumImportance\"\n    \"\"\"Normal operation priority.\"\"\"\n\n    LOW_IMPORTANCE = \"lowImportance\"\n    \"\"\"To be completed when resources are available.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PriorityCode.CRITICAL","title":"<code>CRITICAL = 'critical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Of decisive importance.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PriorityCode.HIGH_IMPORTANCE","title":"<code>HIGH_IMPORTANCE = 'highImportance'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Requires resources to be made available.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PriorityCode.LOW_IMPORTANCE","title":"<code>LOW_IMPORTANCE = 'lowImportance'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>To be completed when resources are available.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.PriorityCode.MEDIUM_IMPORTANCE","title":"<code>MEDIUM_IMPORTANCE = 'mediumImportance'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Normal operation priority.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.RequestedDate","title":"<code>RequestedDate</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Range of date validity.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class RequestedDate(ABC):\n    \"\"\"Range of date validity.\"\"\"\n\n    @property\n    @abstractmethod\n    def requested_date_of_collection(self) -&gt; datetime:\n        \"\"\"Preferred date and time of collection.\"\"\"\n\n    @property\n    @abstractmethod\n    def latest_acceptable_date(self) -&gt; datetime:\n        \"\"\"Latest date and time collection must be completed.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.RequestedDate.latest_acceptable_date","title":"<code>latest_acceptable_date: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Latest date and time collection must be completed.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.RequestedDate.requested_date_of_collection","title":"<code>requested_date_of_collection: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Preferred date and time of collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement","title":"<code>Requirement</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Requirement to be satisfied by the planned data acquisition.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Requirement(ABC):\n    \"\"\"Requirement to be satisfied by the planned data acquisition.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Identification of reference or guidance material for the requirement.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"Unique name, or code, for the requirement.\"\"\"\n\n    @property\n    @abstractmethod\n    def requestor(self) -&gt; Sequence[Responsibility]:\n        \"\"\"Origin of requirement.\"\"\"\n\n    @property\n    @abstractmethod\n    def recipient(self) -&gt; Sequence[Responsibility]:\n        \"\"\"Person(s), or body(ies), to receive results of requirement.\"\"\"\n\n    @property\n    @abstractmethod\n    def priority(self) -&gt; PriorityCode:\n        \"\"\"Relative ordered importance, or urgency, of the requirement.\"\"\"\n\n    @property\n    @abstractmethod\n    def requested_date(self) -&gt; RequestedDate:\n        \"\"\"Required or preferred acquisition date and time.\"\"\"\n\n    @property\n    @abstractmethod\n    def expiry_date(self) -&gt; datetime:\n        \"\"\"Date and time after which collection is no longer valid.\"\"\"\n\n    @property\n    @abstractmethod\n    def satisfied_plan(self) -&gt; Optional[Sequence['Plan']]:\n        \"\"\"Plan that identifies solution to satisfy the requirement.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.citation","title":"<code>citation: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of reference or guidance material for the requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.expiry_date","title":"<code>expiry_date: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date and time after which collection is no longer valid.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique name, or code, for the requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.priority","title":"<code>priority: PriorityCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Relative ordered importance, or urgency, of the requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.recipient","title":"<code>recipient: Sequence[Responsibility]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Person(s), or body(ies), to receive results of requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.requested_date","title":"<code>requested_date: RequestedDate</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Required or preferred acquisition date and time.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.requestor","title":"<code>requestor: Sequence[Responsibility]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Origin of requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Requirement.satisfied_plan","title":"<code>satisfied_plan: Optional[Sequence[Plan]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Plan that identifies solution to satisfy the requirement.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Revision","title":"<code>Revision</code>","text":"<p>               Bases: <code>ABC</code></p> <p>History of the revision of an event</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Revision(ABC):\n    \"\"\"History of the revision of an event\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"Description of the revision.\"\"\"\n\n    @property\n    @abstractmethod\n    def responsible_party(self) -&gt; Sequence[Responsibility]:\n        \"\"\"Individual or organisation responsible for the revision.\"\"\"\n\n    @property\n    @abstractmethod\n    def date_info(self) -&gt; Sequence[date]:\n        \"\"\"Information about dates related to the revision.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Revision.date_info","title":"<code>date_info: Sequence[date]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about dates related to the revision.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Revision.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the revision.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Revision.responsible_party","title":"<code>responsible_party: Sequence[Responsibility]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Individual or organisation responsible for the revision.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Sensor","title":"<code>Sensor</code>","text":"<p>               Bases: <code>Instrument</code></p> <p>Specific type of instrument</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class Sensor(Instrument):\n    \"\"\"Specific type of instrument\"\"\"\n\n    @property\n    @abstractmethod\n    def hosted(self) -&gt; Optional[Instrument]:\n        \"\"\"Instrument on which the sensor is hosted\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.Sensor.hosted","title":"<code>hosted: Optional[Instrument]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instrument on which the sensor is hosted</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.SequenceCode","title":"<code>SequenceCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Temporal relation of activation.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class SequenceCode(Enum):\n    \"\"\"Temporal relation of activation.\"\"\"\n\n    START = \"start\"\n    \"\"\"Beginning of collection.\"\"\"\n\n    END = \"end\"\n    \"\"\"End of collection.\"\"\"\n\n    INSTANTANEOUS = \"instantaneous\"\n    \"\"\"Collection without a significant duration.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.SequenceCode.END","title":"<code>END = 'end'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>End of collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.SequenceCode.INSTANTANEOUS","title":"<code>INSTANTANEOUS = 'instantaneous'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Collection without a significant duration.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.SequenceCode.START","title":"<code>START = 'start'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Beginning of collection.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.TriggerCode","title":"<code>TriggerCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Mechanism of activation.</p> Source code in <code>opengis/metadata/acquisition.py</code> <pre><code>class TriggerCode(Enum):\n    \"\"\"Mechanism of activation.\"\"\"\n\n    AUTOMATIC = \"automatic\"\n    \"\"\"Event due to external stimuli.\"\"\"\n\n    MANUAL = \"manual\"\n    \"\"\"Event manually instigated.\"\"\"\n\n    PRE_PROGRAMMED = \"preProgrammed\"\n    \"\"\"Event instaigated by planned internal stimuli.\"\"\"\n</code></pre>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.TriggerCode.AUTOMATIC","title":"<code>AUTOMATIC = 'automatic'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event due to external stimuli.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.TriggerCode.MANUAL","title":"<code>MANUAL = 'manual'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event manually instigated.</p>"},{"location":"metadata/acquisition/#opengis.metadata.acquisition.TriggerCode.PRE_PROGRAMMED","title":"<code>PRE_PROGRAMMED = 'preProgrammed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Event instaigated by planned internal stimuli.</p>"},{"location":"metadata/base/","title":"<code>base</code> module","text":"<p>This is the <code>base</code> module.</p> <p>This subpackage contains geographic metadata structures regarding data acquisition that are derived from theISO 19115-1:2014 and ISO 19115-2:2019 international standards.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata","title":"<code>Metadata</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Root entity which defines metadata about a resource or resources.</p> Source code in <code>opengis/metadata/base.py</code> <pre><code>class Metadata(ABC):\n    \"\"\"Root entity which defines metadata about a resource or resources.\"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_identifier(self) -&gt; Optional[Identifier]:\n        \"\"\"Unique identifier for this metadata record.\"\"\"\n\n    @property\n    @abstractmethod\n    def default_locale(self) -&gt; Optional[str]:\n        \"\"\"\n        Language and character set used for documenting metadata.\n        A string conforming to IETF BCP 47.\n\n        MANDATORY: if UTF-8 not used and not defined in encoding.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def parent_metadata(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Identification of the parent metadata record.\n\n        MANDATORY: if there is an upper level object.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contact(self) -&gt; Sequence[Responsibility]:\n        \"\"\"Party responsible for the metadata information.\"\"\"\n\n    @property\n    @abstractmethod\n    def date_info(self) -&gt; Sequence[Date]:\n        \"\"\"\n        Date(s) associated with the metadata.\n\n        NOTE: 'Creation' date must be provided, others can also be provided.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_standard(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Citation for the standards to which the metadata conforms.\n\n        NOTE: Metadata standard citations should include an identifier.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_profile(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Citation(s) for the profile(s) of the metadata standard to which the\n        metadata conform.\n\n        NOTE: Metadata citations should include an identifier.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def alternative_metadata_reference(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Reference to alternative metadata,e.g., Dublin Core, FGDC, or metadata\n        in a non-ISO standard for the same resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_locale(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Provides information about an alternatively used localized character\n        strings. A string conforming to IETF BCP 47.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_linkage(self) -&gt; Optional[Sequence[OnlineResource]]:\n        \"\"\"Online location where the metadata is available.\"\"\"\n\n    @property\n    @abstractmethod\n    def spatial_representation_info(self) -&gt; Optional[Sequence[\n        SpatialRepresentation\n    ]]:\n        \"\"\"Digital representation of spatial information in the dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def reference_system_info(self) -&gt; Optional[Sequence[ReferenceSystem]]:\n        \"\"\"\n        Description of the spatial and temporal reference systems used in\n        the dataset.\n\n        The reference system may be:\n        - An ISO 19111 object such as `CoordinateReferenceSystem`.\n        - A `ReferenceSystem` with the `identifier` property (from\n            ISO 19111) sets to a list of `Identifier` values such as\n            `[\"EPSG::4326\"]`.\n        - An object with the `referenceSystemIdentifier` property (from\n            ISO 19115) sets to a single `Identifier` value such as\n                `\"EPSG::4326\"`,\n        The ReferenceSystem object may optionally have a\n            `reference_system_type_code` property set to a value such as\n            `geodeticGeographic2D` or `compoundProjectedTemporal`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_extension_info(self) -&gt; Optional[Sequence[\n        MetadataExtensionInformation\n    ]]:\n        \"\"\"Information describing metadata extensions.\"\"\"\n\n    @property\n    @abstractmethod\n    def identification_info(self) -&gt; Sequence[Identification]:\n        \"\"\"\n        Basic information about the resource(s) to which the metadata applies.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def content_info(self) -&gt; Optional[Sequence[ContentInformation]]:\n        \"\"\"Information about the feature and coverage characteristics.\"\"\"\n\n    @property\n    @abstractmethod\n    def distribution_info(self) -&gt; Optional[Sequence[Distribution]]:\n        \"\"\"\n        Information about the distributor of and options for obtaining the\n        resource(s).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def data_quality_info(self) -&gt; Optional[Sequence[DataQuality]]:\n        \"\"\"Overall assessment of quality of a resource(s).\"\"\"\n\n    @property\n    @abstractmethod\n    def portrayal_catalogue_info(self) -&gt; Optional[Sequence[\n        PortrayalCatalogueReference\n    ]]:\n        \"\"\"\n        Information about the catalogue of rules defined for the portrayal of\n        a resource(s).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_constraints(self) -&gt; Optional[Sequence[Constraints]]:\n        \"\"\"Restrictions on the access and use of metadata.\"\"\"\n\n    @property\n    @abstractmethod\n    def application_schema_info(self) -&gt; Optional[Sequence[\n        ApplicationSchemaInformation\n    ]]:\n        \"\"\"Information about the conceptual schema of a dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_maintenance(self) -&gt; Optional[MaintenanceInformation]:\n        \"\"\"\n        Information about the frequency of metadata updates, and the scope of\n        those updates.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource_lineage(self) -&gt; Optional[Sequence[Lineage]]:\n        \"\"\"\n        Information about the provenance, sources and/or the production\n        processes applied to the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_scope(self) -&gt; Optional[Sequence[MetadataScope]]:\n        \"\"\"\n        The scope or type of resource for which metadata is provided.\n\n        MANDATORY: if `Metadata` is about a resource other than a dataset.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def acquisition_information(self) -&gt; Optional[\n        Sequence[AcquisitionInformation]\n    ]:\n        \"\"\"Information about the acquisition of the data.\"\"\"\n</code></pre>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.acquisition_information","title":"<code>acquisition_information: Optional[Sequence[AcquisitionInformation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the acquisition of the data.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.alternative_metadata_reference","title":"<code>alternative_metadata_reference: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to alternative metadata,e.g., Dublin Core, FGDC, or metadata in a non-ISO standard for the same resource.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.application_schema_info","title":"<code>application_schema_info: Optional[Sequence[ApplicationSchemaInformation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the conceptual schema of a dataset.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.contact","title":"<code>contact: Sequence[Responsibility]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Party responsible for the metadata information.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.content_info","title":"<code>content_info: Optional[Sequence[ContentInformation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the feature and coverage characteristics.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.data_quality_info","title":"<code>data_quality_info: Optional[Sequence[DataQuality]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Overall assessment of quality of a resource(s).</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.date_info","title":"<code>date_info: Sequence[Date]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date(s) associated with the metadata.</p> <p>NOTE: 'Creation' date must be provided, others can also be provided.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.default_locale","title":"<code>default_locale: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Language and character set used for documenting metadata. A string conforming to IETF BCP 47.</p> <p>MANDATORY: if UTF-8 not used and not defined in encoding.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.distribution_info","title":"<code>distribution_info: Optional[Sequence[Distribution]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the distributor of and options for obtaining the resource(s).</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.identification_info","title":"<code>identification_info: Sequence[Identification]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Basic information about the resource(s) to which the metadata applies.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_constraints","title":"<code>metadata_constraints: Optional[Sequence[Constraints]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Restrictions on the access and use of metadata.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_extension_info","title":"<code>metadata_extension_info: Optional[Sequence[MetadataExtensionInformation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information describing metadata extensions.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_identifier","title":"<code>metadata_identifier: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique identifier for this metadata record.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_linkage","title":"<code>metadata_linkage: Optional[Sequence[OnlineResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Online location where the metadata is available.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_maintenance","title":"<code>metadata_maintenance: Optional[MaintenanceInformation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the frequency of metadata updates, and the scope of those updates.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_profile","title":"<code>metadata_profile: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation(s) for the profile(s) of the metadata standard to which the metadata conform.</p> <p>NOTE: Metadata citations should include an identifier.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_scope","title":"<code>metadata_scope: Optional[Sequence[MetadataScope]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The scope or type of resource for which metadata is provided.</p> <p>MANDATORY: if <code>Metadata</code> is about a resource other than a dataset.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.metadata_standard","title":"<code>metadata_standard: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation for the standards to which the metadata conforms.</p> <p>NOTE: Metadata standard citations should include an identifier.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.other_locale","title":"<code>other_locale: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about an alternatively used localized character strings. A string conforming to IETF BCP 47.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.parent_metadata","title":"<code>parent_metadata: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of the parent metadata record.</p> <p>MANDATORY: if there is an upper level object.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.portrayal_catalogue_info","title":"<code>portrayal_catalogue_info: Optional[Sequence[PortrayalCatalogueReference]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the catalogue of rules defined for the portrayal of a resource(s).</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.reference_system_info","title":"<code>reference_system_info: Optional[Sequence[ReferenceSystem]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the spatial and temporal reference systems used in the dataset.</p> <p>The reference system may be: - An ISO 19111 object such as <code>CoordinateReferenceSystem</code>. - A <code>ReferenceSystem</code> with the <code>identifier</code> property (from     ISO 19111) sets to a list of <code>Identifier</code> values such as     <code>[\"EPSG::4326\"]</code>. - An object with the <code>referenceSystemIdentifier</code> property (from     ISO 19115) sets to a single <code>Identifier</code> value such as         <code>\"EPSG::4326\"</code>, The ReferenceSystem object may optionally have a     <code>reference_system_type_code</code> property set to a value such as     <code>geodeticGeographic2D</code> or <code>compoundProjectedTemporal</code>.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.resource_lineage","title":"<code>resource_lineage: Optional[Sequence[Lineage]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the provenance, sources and/or the production processes applied to the resource.</p>"},{"location":"metadata/base/#opengis.metadata.base.Metadata.spatial_representation_info","title":"<code>spatial_representation_info: Optional[Sequence[SpatialRepresentation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Digital representation of spatial information in the dataset.</p>"},{"location":"metadata/base/#opengis.metadata.base.MetadataScope","title":"<code>MetadataScope</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the scope of the resource.</p> Source code in <code>opengis/metadata/base.py</code> <pre><code>class MetadataScope(ABC):\n    \"\"\"Information about the scope of the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def resource_scope(self) -&gt; ScopeCode:\n        \"\"\"Code for the scope. Default = 'dataset'.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[str]:\n        \"\"\"Description of the scope.\"\"\"\n</code></pre>"},{"location":"metadata/base/#opengis.metadata.base.MetadataScope.name","title":"<code>name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the scope.</p>"},{"location":"metadata/base/#opengis.metadata.base.MetadataScope.resource_scope","title":"<code>resource_scope: ScopeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code for the scope. Default = 'dataset'.</p>"},{"location":"metadata/base/#opengis.metadata.base.PortrayalCatalogueReference","title":"<code>PortrayalCatalogueReference</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information identifying the portrayal catalogue used.</p> Source code in <code>opengis/metadata/base.py</code> <pre><code>class PortrayalCatalogueReference(ABC):\n    \"\"\"Information identifying the portrayal catalogue used.\"\"\"\n\n    @property\n    @abstractmethod\n    def portrayal_catalogue_citation(self) -&gt; Sequence[Citation]:\n        \"\"\"Bibliographic reference to the portrayal catalogue cited.\"\"\"\n</code></pre>"},{"location":"metadata/base/#opengis.metadata.base.PortrayalCatalogueReference.portrayal_catalogue_citation","title":"<code>portrayal_catalogue_citation: Sequence[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Bibliographic reference to the portrayal catalogue cited.</p>"},{"location":"metadata/citation/","title":"<code>citation</code> module","text":"<p>This is the <code>citation</code> module.</p> <p>This module contains geographic metadata structures regarding metadata citations derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address","title":"<code>Address</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Location of the responsible individual or organisation.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Address(ABC):\n    \"\"\"Location of the responsible individual or organisation.\"\"\"\n\n    @property\n    @abstractmethod\n    def delivery_point(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Address line for the location (as described in ISO 11180, Annex A).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def city(self) -&gt; Optional[str]:\n        \"\"\"City of the location.\"\"\"\n\n    @property\n    @abstractmethod\n    def administrative_area(self) -&gt; Optional[str]:\n        \"\"\"State, province of the location.\"\"\"\n\n    @property\n    @abstractmethod\n    def postal_code(self) -&gt; Optional[str]:\n        \"\"\"ZIP or other postal code.\"\"\"\n\n    @property\n    @abstractmethod\n    def country(self) -&gt; Optional[str]:\n        \"\"\"Country of the physical address.\"\"\"\n\n    @property\n    @abstractmethod\n    def electronic_mail_address(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Address of the electronic mailbox of the responsible organisation or\n        individual.\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.administrative_area","title":"<code>administrative_area: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>State, province of the location.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.city","title":"<code>city: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>City of the location.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.country","title":"<code>country: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Country of the physical address.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.delivery_point","title":"<code>delivery_point: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Address line for the location (as described in ISO 11180, Annex A).</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.electronic_mail_address","title":"<code>electronic_mail_address: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Address of the electronic mailbox of the responsible organisation or individual.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Address.postal_code","title":"<code>postal_code: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>ZIP or other postal code.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation","title":"<code>Citation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Standardized resource reference.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Citation(ABC):\n    \"\"\"Standardized resource reference.\"\"\"\n\n    @property\n    @abstractmethod\n    def title(self) -&gt; str:\n        \"\"\"Name by which the cited resource is known.\"\"\"\n\n    @property\n    @abstractmethod\n    def alternate_title(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Short name or other language name by which the cited information is\n        known.\n\n        Example: 'DCW' as an alternative title for Digital Chart of the\n        World.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def date(self) -&gt; Optional[Sequence[Date]]:\n        \"\"\"Reference date for the cited resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def edition(self) -&gt; Optional[str]:\n        \"\"\"Version of the cited resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def edition_date(self) -&gt; Optional[datetime]:\n        \"\"\"Date of the edition.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Optional[Sequence['Identifier']]:\n        \"\"\"Value uniquely identifying an object within a namespace.\"\"\"\n\n    @property\n    @abstractmethod\n    def cited_responsible_party(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Name and position information for an individual or organisation that\n        is responsible for the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def presentation_form(self) -&gt; Optional[Sequence[PresentationFormCode]]:\n        \"\"\"Mode in which the resource is represented.\"\"\"\n\n    @property\n    @abstractmethod\n    def series(self) -&gt; Optional[Series]:\n        \"\"\"\n        Information about the series, or aggregate resource, of which the\n        resource is a part.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_citation_details(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Other information required to complete the citation that is not\n        recorded elsewhere.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def isbn(self) -&gt; Optional[str]:\n        \"\"\"International Standard Book Number.\"\"\"\n\n    @property\n    @abstractmethod\n    def issn(self) -&gt; Optional[str]:\n        \"\"\"International Standard Serial Number.\"\"\"\n\n    @property\n    @abstractmethod\n    def online_resource(self) -&gt; Optional[Sequence[OnlineResource]]:\n        \"\"\"Online reference to the cited resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def graphic(self) -&gt; Optional[Sequence['BrowseGraphic']]:\n        \"\"\"Citation graphic or logo for cited party.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.alternate_title","title":"<code>alternate_title: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Short name or other language name by which the cited information is known.</p> <p>Example: 'DCW' as an alternative title for Digital Chart of the World.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.cited_responsible_party","title":"<code>cited_responsible_party: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name and position information for an individual or organisation that is responsible for the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.date","title":"<code>date: Optional[Sequence[Date]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference date for the cited resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.edition","title":"<code>edition: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Version of the cited resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.edition_date","title":"<code>edition_date: Optional[datetime]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date of the edition.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.graphic","title":"<code>graphic: Optional[Sequence[BrowseGraphic]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation graphic or logo for cited party.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.identifier","title":"<code>identifier: Optional[Sequence[Identifier]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value uniquely identifying an object within a namespace.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.isbn","title":"<code>isbn: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>International Standard Book Number.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.issn","title":"<code>issn: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>International Standard Serial Number.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.online_resource","title":"<code>online_resource: Optional[Sequence[OnlineResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Online reference to the cited resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.other_citation_details","title":"<code>other_citation_details: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Other information required to complete the citation that is not recorded elsewhere.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.presentation_form","title":"<code>presentation_form: Optional[Sequence[PresentationFormCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Mode in which the resource is represented.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.series","title":"<code>series: Optional[Series]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the series, or aggregate resource, of which the resource is a part.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Citation.title","title":"<code>title: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name by which the cited resource is known.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact","title":"<code>Contact</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information required to enable contact with the responsible person and/or organisation.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Contact(ABC):\n    \"\"\"\n    Information required to enable contact with the responsible person and/or\n    organisation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def phone(self) -&gt; Optional[Sequence[Telephone]]:\n        \"\"\"\n        Telephone numbers at which the organisation or individual may be\n        contacted.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def address(self) -&gt; Optional[Sequence[Address]]:\n        \"\"\"\n        Physical and email address at which the organisation or individual may\n        be contacted.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def online_resource(self) -&gt; Optional[Sequence[OnlineResource]]:\n        \"\"\"\n        On-line information that can be used to contact the individual or\n        organisation.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def hours_of_service(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Time period (including time zone) when individuals can contact the\n        organisation or individual.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contact_instructions(self) -&gt; Optional[str]:\n        \"\"\"\n        Supplemental instructions on how or when to contact the individual or\n        organisation.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contact_type(self) -&gt; Optional[str]:\n        \"\"\"Type of the contact.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.address","title":"<code>address: Optional[Sequence[Address]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Physical and email address at which the organisation or individual may be contacted.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.contact_instructions","title":"<code>contact_instructions: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Supplemental instructions on how or when to contact the individual or organisation.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.contact_type","title":"<code>contact_type: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of the contact.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.hours_of_service","title":"<code>hours_of_service: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Time period (including time zone) when individuals can contact the organisation or individual.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.online_resource","title":"<code>online_resource: Optional[Sequence[OnlineResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>On-line information that can be used to contact the individual or organisation.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Contact.phone","title":"<code>phone: Optional[Sequence[Telephone]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Telephone numbers at which the organisation or individual may be contacted.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Date","title":"<code>Date</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Reference date and event used to describe it.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Date(ABC):\n    \"\"\"Reference date and event used to describe it.\"\"\"\n\n    @property\n    @abstractmethod\n    def date(self) -&gt; datetime:\n        \"\"\"Reference date for the cited resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def date_type(self) -&gt; DateTypeCode:\n        \"\"\"Event used for reference date.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Date.date","title":"<code>date: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference date for the cited resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Date.date_type","title":"<code>date_type: DateTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Event used for reference date.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode","title":"<code>DateTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Identification of when a given event occurred.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class DateTypeCode(Enum):\n    \"\"\"Identification of when a given event occurred.\"\"\"\n\n    CREATION = \"creation\"\n    \"\"\"Date identifies when the resource was brought into existence.\"\"\"\n\n    PUBLICATION = \"publication\"\n    \"\"\"Date identifies when the resource was issued.\"\"\"\n\n    REVISION = \"revision\"\n    \"\"\"\n    Date identifies when the resource was examined or rexamined and improved\n    or amended.\n    \"\"\"\n\n    EXPIRY = \"expiry\"\n    \"\"\"Date identifies when resource expires.\"\"\"\n\n    LAST_UPDATE = \"lastUpdate\"\n    \"\"\"Date identifies when resource was last updated.\"\"\"\n\n    LAST_REVISION = \"lastRevision\"\n    \"\"\"Date identifies when resource was last reviewed.\"\"\"\n\n    NEXT_UPDATE = \"nextUpdate\"\n    \"\"\"Date identifies when resource will be next updated.\"\"\"\n\n    UNAVAILABLE = \"unavailable\"\n    \"\"\"Date identifies when resource became not available or obtainable.\"\"\"\n\n    IN_FORCE = \"inForce\"\n    \"\"\"Date identifies when resource became in force.\"\"\"\n\n    ADOPTED = \"adopted\"\n    \"\"\"Date identifies when resource was adopted.\"\"\"\n\n    DEPRECATED = \"deprecated\"\n    \"\"\"Date identifies when resource was deprecated.\"\"\"\n\n    SUPERSEDED = \"superseded\"\n    \"\"\"\n    Date identifies when resource was superceded or replaced by another\n    resource.\n    \"\"\"\n\n    VALIDITY_BEGINS = \"validityBegins\"\n    \"\"\"\n    Time at which the data are considered to become valid.\n\n    NOTE: There could be quite a delay between creation and validity begins.\n    \"\"\"\n\n    VALIDITY_EXPIRES = \"validityExpires\"\n    \"\"\"Time at which the data are no longer considered to be valid.\"\"\"\n\n    RELEASED = \"released\"\n    \"\"\"The date that the resource shall be released for public access.\"\"\"\n\n    DISTRIBUTION = \"distribution\"\n    \"\"\"Date identifies when an instance of the resource was distributed.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.ADOPTED","title":"<code>ADOPTED = 'adopted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource was adopted.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.CREATION","title":"<code>CREATION = 'creation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when the resource was brought into existence.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.DEPRECATED","title":"<code>DEPRECATED = 'deprecated'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource was deprecated.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.DISTRIBUTION","title":"<code>DISTRIBUTION = 'distribution'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when an instance of the resource was distributed.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.EXPIRY","title":"<code>EXPIRY = 'expiry'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource expires.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.IN_FORCE","title":"<code>IN_FORCE = 'inForce'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource became in force.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.LAST_REVISION","title":"<code>LAST_REVISION = 'lastRevision'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource was last reviewed.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.LAST_UPDATE","title":"<code>LAST_UPDATE = 'lastUpdate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource was last updated.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.NEXT_UPDATE","title":"<code>NEXT_UPDATE = 'nextUpdate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource will be next updated.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.PUBLICATION","title":"<code>PUBLICATION = 'publication'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when the resource was issued.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.RELEASED","title":"<code>RELEASED = 'released'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The date that the resource shall be released for public access.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.REVISION","title":"<code>REVISION = 'revision'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when the resource was examined or rexamined and improved or amended.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.SUPERSEDED","title":"<code>SUPERSEDED = 'superseded'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource was superceded or replaced by another resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.UNAVAILABLE","title":"<code>UNAVAILABLE = 'unavailable'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Date identifies when resource became not available or obtainable.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.VALIDITY_BEGINS","title":"<code>VALIDITY_BEGINS = 'validityBegins'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Time at which the data are considered to become valid.</p> <p>NOTE: There could be quite a delay between creation and validity begins.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.DateTypeCode.VALIDITY_EXPIRES","title":"<code>VALIDITY_EXPIRES = 'validityExpires'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Time at which the data are no longer considered to be valid.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier","title":"<code>Identifier</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Value uniquely identifying an object within a namespace.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Identifier(ABC):\n    \"\"\"Value uniquely identifying an object within a namespace.\"\"\"\n\n    @property\n    @abstractmethod\n    def authority(self) -&gt; Optional[Citation]:\n        \"\"\"\n        The person or party responsible for maintenance of the namespace.\n\n        Citation for the code namespace and optionally the person or party\n        responsible for maintenance of that namespace.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def code(self) -&gt; str:\n        \"\"\"\n        Alphanumeric value identifying an instance in the namespace.\n\n        NOTE: Avoid characters that are not legal in URLs.\n\n        Example: EPSG::4326.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def code_space(self) -&gt; Optional[str]:\n        \"\"\"Identifier or namespace in which the code is valid.\"\"\"\n\n    @property\n    @abstractmethod\n    def version(self) -&gt; Optional[str]:\n        \"\"\"Version identifier for the namespace.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"\n        Natural language description of the meaning of the code value.\n\n        Example: for code_space = EPSG, code = 4326, description = WGS-84.\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier.authority","title":"<code>authority: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The person or party responsible for maintenance of the namespace.</p> <p>Citation for the code namespace and optionally the person or party responsible for maintenance of that namespace.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier.code","title":"<code>code: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Alphanumeric value identifying an instance in the namespace.</p> <p>NOTE: Avoid characters that are not legal in URLs.</p> <p>Example: EPSG::4326.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier.code_space","title":"<code>code_space: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier or namespace in which the code is valid.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Natural language description of the meaning of the code value.</p> <p>Example: for code_space = EPSG, code = 4326, description = WGS-84.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Identifier.version","title":"<code>version: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Version identifier for the namespace.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Individual","title":"<code>Individual</code>","text":"<p>               Bases: <code>Party</code></p> <p>Information about the party if the party is an individual.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Individual(Party):\n    \"\"\"Information about the party if the party is an individual.\"\"\"\n\n    @property\n    @abstractmethod\n    def position_name(self) -&gt; Optional[str]:\n        \"\"\"\n        Position of the individual in an organisation.\n\n        MANDATORY: if `name` and `logo` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Individual.position_name","title":"<code>position_name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Position of the individual in an organisation.</p> <p>MANDATORY: if <code>name</code> and <code>logo</code> are <code>None</code>.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode","title":"<code>OnLineFunctionCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Function performed by the resource.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class OnLineFunctionCode(Enum):\n    \"\"\"Function performed by the resource.\"\"\"\n\n    DOWNLOAD = \"download\"\n    \"\"\"\n    Online instructions for transferring data from one storage device or\n    system to another.\n    \"\"\"\n    INFORMATION = \"information\"\n    \"\"\"Online information about the resource.\"\"\"\n\n    OFFLINE_ACCESS = \"offlineAccess\"\n    \"\"\"Online instructions for requesting the resource from the provider.\"\"\"\n\n    ORDER = \"order\"\n    \"\"\"Online order process for obtaining the resource.\"\"\"\n\n    SEARCH = \"search\"\n    \"\"\"\n    Online search interface for seeking out information about the resource.\n    \"\"\"\n\n    COMPLETE_METADATA = \"completeMetadata\"\n    \"\"\"Complete metadata provided.\"\"\"\n\n    BROWSE_GRAPHIC = \"browseGraphic\"\n    \"\"\"Browse graphic provided.\"\"\"\n\n    UPLOAD = \"upload\"\n    \"\"\"Online resource upload capability provided.\"\"\"\n\n    EMAIL_SERVICE = \"emailService\"\n    \"\"\"Online email service provided.\"\"\"\n\n    BROWSING = \"browsing\"\n    \"\"\"Online browsing provided.\"\"\"\n\n    FILE_ACCESS = \"fileAccess\"\n    \"\"\"Online file access provided.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.BROWSE_GRAPHIC","title":"<code>BROWSE_GRAPHIC = 'browseGraphic'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Browse graphic provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.BROWSING","title":"<code>BROWSING = 'browsing'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online browsing provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.COMPLETE_METADATA","title":"<code>COMPLETE_METADATA = 'completeMetadata'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Complete metadata provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.DOWNLOAD","title":"<code>DOWNLOAD = 'download'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online instructions for transferring data from one storage device or system to another.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.EMAIL_SERVICE","title":"<code>EMAIL_SERVICE = 'emailService'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online email service provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.FILE_ACCESS","title":"<code>FILE_ACCESS = 'fileAccess'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online file access provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.INFORMATION","title":"<code>INFORMATION = 'information'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online information about the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.OFFLINE_ACCESS","title":"<code>OFFLINE_ACCESS = 'offlineAccess'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online instructions for requesting the resource from the provider.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.ORDER","title":"<code>ORDER = 'order'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online order process for obtaining the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.SEARCH","title":"<code>SEARCH = 'search'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online search interface for seeking out information about the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnLineFunctionCode.UPLOAD","title":"<code>UPLOAD = 'upload'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Online resource upload capability provided.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource","title":"<code>OnlineResource</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about on-line sources from which the resource, specification, or community profile name and extended metadata elements can be obtained.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class OnlineResource(ABC):\n    \"\"\"\n    Information about on-line sources from which the resource, specification,\n    or community profile name and extended metadata elements can be obtained.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def linkage(self) -&gt; str:\n        \"\"\"\n        Location (address) for on-line access using a Uniform Resource Locator/\n        Uniform Resource Identifier address or similar addressing scheme such\n        as http://www.statkart.no/isotc211.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def protocol(self) -&gt; Optional[str]:\n        \"\"\"Connection protocol to be used e.g. http, ftp, file.\"\"\"\n\n    @property\n    @abstractmethod\n    def application_profile(self) -&gt; Optional[str]:\n        \"\"\"\n        Name of an application profile that can be used with the online\n        resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[str]:\n        \"\"\"Name of the online resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Detailed text description of what the online resource is/does.\"\"\"\n\n    @property\n    @abstractmethod\n    def function(self) -&gt; Optional[OnLineFunctionCode]:\n        \"\"\"Code for function performed by the online resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def protocol_request(self) -&gt; Optional[str]:\n        \"\"\"\n        Request used to access the resource depending on the protocol\n        (to be used mainly for POST requests)\n\n        Protocol used by the accessed resource.\n\n        Example POST/XML:\n\n        ```\n        &lt;Ge tFeatures service = \"WFS\"\n                     version=\"2.0.0\"\n                     outputFormat=\"application/gml+xml; version=3.2\"\n                     xmlns=http://www.opengis.net/wfs/2.0\n                     xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance\n                     xsi:schemaLocation=\"http://www.opengis.net/wfs/2.0\n                        http://schemas.opengis.net/wfs/2.0.0/wfs.xsd\"&gt;\n        &lt;Query typeNames=\"Roads\" /&gt;\n        &lt;/GetFeatures&gt;\n        ```\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.application_profile","title":"<code>application_profile: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of an application profile that can be used with the online resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Detailed text description of what the online resource is/does.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.function","title":"<code>function: Optional[OnLineFunctionCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code for function performed by the online resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.linkage","title":"<code>linkage: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Location (address) for on-line access using a Uniform Resource Locator/ Uniform Resource Identifier address or similar addressing scheme such as http://www.statkart.no/isotc211.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.name","title":"<code>name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the online resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.protocol","title":"<code>protocol: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Connection protocol to be used e.g. http, ftp, file.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.OnlineResource.protocol_request","title":"<code>protocol_request: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Request used to access the resource depending on the protocol (to be used mainly for POST requests)</p> <p>Protocol used by the accessed resource.</p> <p>Example POST/XML:</p> <pre><code>&lt;Ge tFeatures service = \"WFS\"\n             version=\"2.0.0\"\n             outputFormat=\"application/gml+xml; version=3.2\"\n             xmlns=http://www.opengis.net/wfs/2.0\n             xmlns:xsi=http://www.w3.org/2001/XMLSchema-instance\n             xsi:schemaLocation=\"http://www.opengis.net/wfs/2.0\n                http://schemas.opengis.net/wfs/2.0.0/wfs.xsd\"&gt;\n&lt;Query typeNames=\"Roads\" /&gt;\n&lt;/GetFeatures&gt;\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Organisation","title":"<code>Organisation</code>","text":"<p>               Bases: <code>Party</code></p> <p>Information about the party if the party is an organisation.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Organisation(Party):\n    \"\"\"Information about the party if the party is an organisation.\"\"\"\n\n    @property\n    @abstractmethod\n    def logo(self) -&gt; Sequence[BrowseGraphic]:\n        \"\"\"\n        Graphic identifying organisation.\n\n        MANDATORY: if `name` and `position_name`are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def individual(self) -&gt; Optional[Sequence[Individual]]:\n        \"\"\"Individuals belonging to the Organisation.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Organisation.individual","title":"<code>individual: Optional[Sequence[Individual]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Individuals belonging to the Organisation.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Organisation.logo","title":"<code>logo: Sequence[BrowseGraphic]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Graphic identifying organisation.</p> <p>MANDATORY: if <code>name</code> and <code>position_name</code>are <code>None</code>.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Party","title":"<code>Party</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the individual and/or organisation of the party.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Party(ABC):\n    \"\"\"Information about the individual and/or organisation of the party.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[str]:\n        \"\"\"\n        Name of the party.\n\n        MANDATORY: if `logo` and `position_name`are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contact_info(self) -&gt; Sequence[Contact]:\n        \"\"\"Contact information for the party.\"\"\"\n\n    @property\n    @abstractmethod\n    def party_identifier(self) -&gt; Optional[Sequence['Identifier']]:\n        \"\"\"\n        Identifier of the party.\n\n        MANDATORY: if `name` and `logo` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Party.contact_info","title":"<code>contact_info: Sequence[Contact]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Contact information for the party.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Party.name","title":"<code>name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the party.</p> <p>MANDATORY: if <code>logo</code> and <code>position_name</code>are <code>None</code>.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Party.party_identifier","title":"<code>party_identifier: Optional[Sequence[Identifier]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier of the party.</p> <p>MANDATORY: if <code>name</code> and <code>logo</code> are <code>None</code>.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode","title":"<code>PresentationFormCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Mode in which the data are represented.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class PresentationFormCode(Enum):\n    \"\"\"Mode in which the data are represented.\"\"\"\n\n    DOCUMENT_DIGITAL = \"documentDigital\"\n    \"\"\"\n    Digital representation of a primarily textual item (can contain\n    illustrations also).\n    \"\"\"\n\n    DOCUMENT_HARDCOPY = \"documentHardcopy\"\n    \"\"\"\n    Representaiton of a primarily textual item (can contain illustrations\n    also) on paper, photographic material, or other media.\n    \"\"\"\n\n    IMAGE_DIGITAL = \"imageDigital\"\n    \"\"\"\n    Likeness of natural or man-made features, objects, and activities acquired\n    through the sensing of visual or any other segment of the electronic\n    spectrum by sensors, such as thermal infrared and high resolution radar,\n    and stored in digital format.\n    \"\"\"\n\n    IMAGE_HARDCOPY = \"imageHardcopy\"\n    \"\"\"\n    Likeness of natural or man-made features, objects, and activities acquired\n    through the sensing of visual or any other segment of the electronic\n    spectrum by sensors, such as thermal infrared and high resolution radar,\n    and stored on paper, photographic material, or other media for use\n    directly by the human user.\n    \"\"\"\n\n    MAP_DIGITAL = \"mapDigital\"\n    \"\"\"Map represented in raster or vector form.\"\"\"\n\n    MAP_HARDCOPY = \"mapHardcopy\"\n    \"\"\"\n    Map printed on paper, photographic material, or other media for use\n    directly by the human user.\n    \"\"\"\n\n    MODEL_DIGITAL = \"modelDigital\"\n    \"\"\"Multi-dimensional digital representation of a feature, process, etc.\"\"\"\n\n    MODEL_HARDCOPY = \"modelHardcopy\"\n    \"\"\"3-dimensional, physical model.\"\"\"\n\n    PROFILE_DIGITAL = \"profileDigital\"\n    \"\"\"Vertical cross-section in digital form.\"\"\"\n\n    PROFILE_HARDCOPY = \"profileHardcopy\"\n    \"\"\"Vertical cross-section on paper, etc.\"\"\"\n\n    TABLE_DIGITAL = \"tableDigital\"\n    \"\"\"\"\n    Digital representation of facts or figures systematically displayed,\n    especially in columns.\n    \"\"\"\n\n    TABLE_HARDCOPY = \"tableHardcopy\"\n    \"\"\"\"\n    Representation of facts or figures systematically displayed, especially in\n    columns, printed on paper, photographic material, or other media.\n    \"\"\"\n\n    VIDEO_DIGITAL = \"videoDigital\"\n    \"\"\"Digital video recording.\"\"\"\n\n    VIDEO_HARDCOPY = \"videoHardcopy\"\n    \"\"\"Video recording on film.\"\"\"\n\n    AUDIO_DIGITAL = \"audioDigital\"\n    \"\"\"Digital audio recording.\"\"\"\n\n    AUDIO_HARDCOPY = \"audioHardcopy\"\n    \"\"\"Audio recroding delivered by analog media, such as a magnetic tape.\"\"\"\n\n    MULTIMEDIA_DIGITAL = \"multimediaDigital\"\n    \"\"\"\n    Information representation using simultaneously various digital modes\n    text, sound, image.\n    \"\"\"\n\n    MULTIMEDIA_HARDCOPY = \"multimediaHardcopy\"\n    \"\"\"\n    Information representation using simultaneously various analog modes\n    text, sound, image.\n    \"\"\"\n\n    PHYSICAL_OBJECT = \"physicalObject\"\n    \"\"\"\n    A physical object.\n\n    EXAMPLE: Rock or mineral sample, microscope slide.\n    \"\"\"\n\n    DIAGRAM_DIGITAL = \"diagramDigital\"\n    \"\"\"\n    Information represented graphically by charts such as pie chart,\n    bar chart, and other type of diagrms and recorded in digital format.\n    \"\"\"\n\n    DIAGRAM_HARDCOPY = \"diagramHardcopy\"\n    \"\"\"\n    Information represented graphically by charts such as pie chart,\n    bar chart, and other type of diagrams and printed on paper, photographic\n    material, or other media.\n    \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.AUDIO_DIGITAL","title":"<code>AUDIO_DIGITAL = 'audioDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Digital audio recording.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.AUDIO_HARDCOPY","title":"<code>AUDIO_HARDCOPY = 'audioHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Audio recroding delivered by analog media, such as a magnetic tape.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.DIAGRAM_DIGITAL","title":"<code>DIAGRAM_DIGITAL = 'diagramDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information represented graphically by charts such as pie chart, bar chart, and other type of diagrms and recorded in digital format.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.DIAGRAM_HARDCOPY","title":"<code>DIAGRAM_HARDCOPY = 'diagramHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information represented graphically by charts such as pie chart, bar chart, and other type of diagrams and printed on paper, photographic material, or other media.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.DOCUMENT_DIGITAL","title":"<code>DOCUMENT_DIGITAL = 'documentDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Digital representation of a primarily textual item (can contain illustrations also).</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.DOCUMENT_HARDCOPY","title":"<code>DOCUMENT_HARDCOPY = 'documentHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Representaiton of a primarily textual item (can contain illustrations also) on paper, photographic material, or other media.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.IMAGE_DIGITAL","title":"<code>IMAGE_DIGITAL = 'imageDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Likeness of natural or man-made features, objects, and activities acquired through the sensing of visual or any other segment of the electronic spectrum by sensors, such as thermal infrared and high resolution radar, and stored in digital format.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.IMAGE_HARDCOPY","title":"<code>IMAGE_HARDCOPY = 'imageHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Likeness of natural or man-made features, objects, and activities acquired through the sensing of visual or any other segment of the electronic spectrum by sensors, such as thermal infrared and high resolution radar, and stored on paper, photographic material, or other media for use directly by the human user.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MAP_DIGITAL","title":"<code>MAP_DIGITAL = 'mapDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Map represented in raster or vector form.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MAP_HARDCOPY","title":"<code>MAP_HARDCOPY = 'mapHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Map printed on paper, photographic material, or other media for use directly by the human user.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MODEL_DIGITAL","title":"<code>MODEL_DIGITAL = 'modelDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Multi-dimensional digital representation of a feature, process, etc.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MODEL_HARDCOPY","title":"<code>MODEL_HARDCOPY = 'modelHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>3-dimensional, physical model.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MULTIMEDIA_DIGITAL","title":"<code>MULTIMEDIA_DIGITAL = 'multimediaDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information representation using simultaneously various digital modes text, sound, image.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.MULTIMEDIA_HARDCOPY","title":"<code>MULTIMEDIA_HARDCOPY = 'multimediaHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information representation using simultaneously various analog modes text, sound, image.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.PHYSICAL_OBJECT","title":"<code>PHYSICAL_OBJECT = 'physicalObject'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A physical object.</p> <p>EXAMPLE: Rock or mineral sample, microscope slide.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.PROFILE_DIGITAL","title":"<code>PROFILE_DIGITAL = 'profileDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Vertical cross-section in digital form.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.PROFILE_HARDCOPY","title":"<code>PROFILE_HARDCOPY = 'profileHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Vertical cross-section on paper, etc.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.TABLE_DIGITAL","title":"<code>TABLE_DIGITAL = 'tableDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>\" Digital representation of facts or figures systematically displayed, especially in columns.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.TABLE_HARDCOPY","title":"<code>TABLE_HARDCOPY = 'tableHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>\" Representation of facts or figures systematically displayed, especially in columns, printed on paper, photographic material, or other media.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.VIDEO_DIGITAL","title":"<code>VIDEO_DIGITAL = 'videoDigital'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Digital video recording.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.PresentationFormCode.VIDEO_HARDCOPY","title":"<code>VIDEO_HARDCOPY = 'videoHardcopy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Video recording on film.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Responsibility","title":"<code>Responsibility</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the party and their role.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Responsibility(ABC):\n    \"\"\"Information about the party and their role.\"\"\"\n\n    @property\n    @abstractmethod\n    def role(self) -&gt; RoleCode:\n        \"\"\"Function performed by the responsible party.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Sequence['Extent']]:\n        \"\"\"Spatial or temporal extent of the role.\"\"\"\n\n    @property\n    @abstractmethod\n    def party(self) -&gt; Sequence[Party]:\n        \"\"\"Information about the Party.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Responsibility.extent","title":"<code>extent: Optional[Sequence[Extent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Spatial or temporal extent of the role.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Responsibility.party","title":"<code>party: Sequence[Party]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the Party.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Responsibility.role","title":"<code>role: RoleCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Function performed by the responsible party.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode","title":"<code>RoleCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Function performed by the responsible party.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class RoleCode(Enum):\n    \"\"\"Function performed by the responsible party.\"\"\"\n\n    RESOURCE_PROVIDER = \"resourceProvider\"\n    \"\"\"Party that supplies the resource.\"\"\"\n\n    CUSTODIAN = \"custodian\"\n    \"\"\"\n    Party that accepts accountability and responsibility for the resource and\n    ensures appropriate care an maintenance of the resource.\n    \"\"\"\n\n    OWNER = \"owner\"\n    \"\"\"Party that owns the resource.\"\"\"\n\n    USER = \"user\"\n    \"\"\"Party who uses the resource.\"\"\"\n\n    DISTRIBUTOR = \"distributor\"\n    \"\"\"Party who distributes the resource.\"\"\"\n\n    ORIGINATOR = \"originator\"\n    \"\"\"Party who created the resource.\"\"\"\n\n    POINT_OF_CONTACT = \"pointOfContact\"\n    \"\"\"\n    Party who can be contactedfor acquiring knowledge about or acquisition of\n    the resource.\n    \"\"\"\n\n    PRINCIPAL_INVESTIGATOR = \"principalInvestigator\"\n    \"\"\"\n    Key party responsible for gathering information and conducting research.\n    \"\"\"\n\n    PROCESSOR = \"processor\"\n    \"\"\"\n    Party who has processed the data in a manner such that the resource has\n    been modified.\n    \"\"\"\n\n    PUBLISHER = \"publisher\"\n    \"\"\"Party who published resource.\"\"\"\n\n    AUTHOR = \"author\"\n    \"\"\"Party who authored the resource.\"\"\"\n\n    SPONSOR = \"sponsor\"\n    \"\"\"Party who speaks for the resource.\"\"\"\n\n    CO_AUTHOR = \"coAuthor\"\n    \"\"\"Party who jointly authors the resource.\"\"\"\n\n    COLLABORATOR = \"collaborator\"\n    \"\"\"\n    Party who assists with the generation of the resource other than the\n    principal investigator.\n    \"\"\"\n\n    EDITOR = \"editor\"\n    \"\"\"\n    Party who reviewed or modified the resource to improve the content.\n    \"\"\"\n\n    MEDIATOR = \"mediator\"\n    \"\"\"\n    A class of entity that mediates access to the resource and for whom the\n    resource is intended or useful.\n    \"\"\"\n\n    RIGHTS_HOLDER = \"rightsHolder\"\n    \"\"\"Party owning or managing the rights over the resource.\"\"\"\n\n    CONTRIBUTOR = \"contributor\"\n    \"\"\"Party contributing to the resource.\"\"\"\n\n    FUNDER = \"funder\"\n    \"\"\"Party providing monetary support for the resource.\"\"\"\n\n    STAKEHOLDER = \"stakeholder\"\n    \"\"\"Party who has an interest in the resource or the use of the resource.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.AUTHOR","title":"<code>AUTHOR = 'author'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who authored the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.COLLABORATOR","title":"<code>COLLABORATOR = 'collaborator'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who assists with the generation of the resource other than the principal investigator.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.CONTRIBUTOR","title":"<code>CONTRIBUTOR = 'contributor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party contributing to the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.CO_AUTHOR","title":"<code>CO_AUTHOR = 'coAuthor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who jointly authors the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.CUSTODIAN","title":"<code>CUSTODIAN = 'custodian'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party that accepts accountability and responsibility for the resource and ensures appropriate care an maintenance of the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.DISTRIBUTOR","title":"<code>DISTRIBUTOR = 'distributor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who distributes the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.EDITOR","title":"<code>EDITOR = 'editor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who reviewed or modified the resource to improve the content.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.FUNDER","title":"<code>FUNDER = 'funder'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party providing monetary support for the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.MEDIATOR","title":"<code>MEDIATOR = 'mediator'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A class of entity that mediates access to the resource and for whom the resource is intended or useful.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.ORIGINATOR","title":"<code>ORIGINATOR = 'originator'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who created the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.OWNER","title":"<code>OWNER = 'owner'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party that owns the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.POINT_OF_CONTACT","title":"<code>POINT_OF_CONTACT = 'pointOfContact'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who can be contactedfor acquiring knowledge about or acquisition of the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.PRINCIPAL_INVESTIGATOR","title":"<code>PRINCIPAL_INVESTIGATOR = 'principalInvestigator'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Key party responsible for gathering information and conducting research.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.PROCESSOR","title":"<code>PROCESSOR = 'processor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who has processed the data in a manner such that the resource has been modified.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.PUBLISHER","title":"<code>PUBLISHER = 'publisher'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who published resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.RESOURCE_PROVIDER","title":"<code>RESOURCE_PROVIDER = 'resourceProvider'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party that supplies the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.RIGHTS_HOLDER","title":"<code>RIGHTS_HOLDER = 'rightsHolder'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party owning or managing the rights over the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.SPONSOR","title":"<code>SPONSOR = 'sponsor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who speaks for the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.STAKEHOLDER","title":"<code>STAKEHOLDER = 'stakeholder'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who has an interest in the resource or the use of the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.RoleCode.USER","title":"<code>USER = 'user'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Party who uses the resource.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Series","title":"<code>Series</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the series, or aggregate resource, to which a resource belongs.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Series(ABC):\n    \"\"\"\n    Information about the series, or aggregate resource, to which a resource\n    belongs.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[str]:\n        \"\"\"\n        Name of the series, or aggregate resource, of which the resource is a\n        part.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def issue_identification(self) -&gt; Optional[str]:\n        \"\"\"Information identifying the issue of the series.\"\"\"\n\n    @property\n    @abstractmethod\n    def page(self) -&gt; Optional[str]:\n        \"\"\"\n        Details on which pages of the publication the article was published.\n        \"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Series.issue_identification","title":"<code>issue_identification: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information identifying the issue of the series.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Series.name","title":"<code>name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the series, or aggregate resource, of which the resource is a part.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Series.page","title":"<code>page: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Details on which pages of the publication the article was published.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Telephone","title":"<code>Telephone</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Telephone numbers for contacting the responsible individual or organisation.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class Telephone(ABC):\n    \"\"\"\n    Telephone numbers for contacting the responsible individual or\n    organisation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def number(self) -&gt; str:\n        \"\"\"\n        Telephone number by which individuals can contact responsible\n        organisation or individual.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def number_type(self) -&gt; Optional[TelephoneTypeCode]:\n        \"\"\"Type of telephone responsible organisation or individual.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.Telephone.number","title":"<code>number: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Telephone number by which individuals can contact responsible organisation or individual.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.Telephone.number_type","title":"<code>number_type: Optional[TelephoneTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of telephone responsible organisation or individual.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.TelephoneTypeCode","title":"<code>TelephoneTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Type of telephone.</p> Source code in <code>opengis/metadata/citation.py</code> <pre><code>class TelephoneTypeCode(Enum):\n    \"\"\"Type of telephone.\"\"\"\n\n    VOICE = \"voice\"\n    \"\"\"Telephone provides voice service.\"\"\"\n\n    FACSIMILE = \"facsimile\"\n    \"\"\"Telephone provides facsimile service.\"\"\"\n\n    SMS = \"sms\"\n    \"\"\"Telephone provides sms service.\"\"\"\n</code></pre>"},{"location":"metadata/citation/#opengis.metadata.citation.TelephoneTypeCode.FACSIMILE","title":"<code>FACSIMILE = 'facsimile'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Telephone provides facsimile service.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.TelephoneTypeCode.SMS","title":"<code>SMS = 'sms'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Telephone provides sms service.</p>"},{"location":"metadata/citation/#opengis.metadata.citation.TelephoneTypeCode.VOICE","title":"<code>VOICE = 'voice'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Telephone provides voice service.</p>"},{"location":"metadata/constraints/","title":"<code>constraints</code> module","text":"<p>This is the <code>constraints</code> module.</p> <p>This module contains geographic metadata structures regarding data constraints derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode","title":"<code>ClassificationCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Name of the handling restrictions on the resource.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class ClassificationCode(Enum):\n    \"\"\"Name of the handling restrictions on the resource.\"\"\"\n\n    UNCLASSIFIED = \"unclassified\"\n    \"\"\"Available for general disclosure.\"\"\"\n\n    RESTRICTED = \"restricted\"\n    \"\"\"Not for general disclosure.\"\"\"\n\n    CONFIDENTIAL = \"confidential\"\n    \"\"\"Available for someone who can be entrusted with information.\"\"\"\n\n    SECRET = \"secret\"\n    \"\"\"\n    Kept or meant to be kept private, unknown, or hidden from all but a select\n    group of people.\n    \"\"\"\n\n    TOP_SECRET = \"topSecret\"\n    \"\"\"Of the highest secrecy.\"\"\"\n\n    SENSITIVE_BUT_UNCLASSIFIED = \"sensitiveButUnclassified\"\n    \"\"\"\n    Although unclassified, requries strict controls over its distribution.\n    \"\"\"\n\n    FOR_OFFICIAL_USE_ONLY = \"forOfficialUseOnly\"\n    \"\"\"\n    Unclassified information that is to be used only for official purposes\n    determined by the designating body.\n    \"\"\"\n\n    PROTECTED = \"protected\"\n    \"\"\"Compromise of the information could cause damage.\"\"\"\n\n    LIMITED_DISTRIBUTION = \"limitedDistribution\"\n    \"\"\"Destination limited by designating body.\"\"\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.CONFIDENTIAL","title":"<code>CONFIDENTIAL = 'confidential'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Available for someone who can be entrusted with information.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.FOR_OFFICIAL_USE_ONLY","title":"<code>FOR_OFFICIAL_USE_ONLY = 'forOfficialUseOnly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unclassified information that is to be used only for official purposes determined by the designating body.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.LIMITED_DISTRIBUTION","title":"<code>LIMITED_DISTRIBUTION = 'limitedDistribution'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Destination limited by designating body.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.PROTECTED","title":"<code>PROTECTED = 'protected'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compromise of the information could cause damage.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.RESTRICTED","title":"<code>RESTRICTED = 'restricted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Not for general disclosure.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.SECRET","title":"<code>SECRET = 'secret'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Kept or meant to be kept private, unknown, or hidden from all but a select group of people.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.SENSITIVE_BUT_UNCLASSIFIED","title":"<code>SENSITIVE_BUT_UNCLASSIFIED = 'sensitiveButUnclassified'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Although unclassified, requries strict controls over its distribution.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.TOP_SECRET","title":"<code>TOP_SECRET = 'topSecret'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Of the highest secrecy.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.ClassificationCode.UNCLASSIFIED","title":"<code>UNCLASSIFIED = 'unclassified'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Available for general disclosure.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints","title":"<code>Constraints</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Restrictions on the access and use of a resource or metadata.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class Constraints(ABC):\n    \"\"\"Restrictions on the access and use of a resource or metadata.\"\"\"\n\n    @property\n    @abstractmethod\n    def use_limitation(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Limitation affecting the fitness for use of the resource or metadata.\n        For example, \"not to be used for navigation\".\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def constraint_application_scope(self) -&gt; Optional[Scope]:\n        \"\"\"\n        Spatial and temporal extent of the application of the constraint\n        restrictions.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def graphic(self) -&gt; Optional[Sequence[BrowseGraphic]]:\n        \"\"\"Graphic /symbol indicating the constraint Eg.\"\"\"\n\n    @property\n    @abstractmethod\n    def reference(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Citation/URL for the limitation or constraint,\n        e.g., copyright statement, license agreement, etc.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def releasability(self) -&gt; Optional[Releasability]:\n        \"\"\"\n        Information concerning the parties to whom the resource can or cannot\n        be released and the party responsible for determining the\n        releasibility.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def responsible_party(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"Party responsible for the resource constraints.\"\"\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.constraint_application_scope","title":"<code>constraint_application_scope: Optional[Scope]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Spatial and temporal extent of the application of the constraint restrictions.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.graphic","title":"<code>graphic: Optional[Sequence[BrowseGraphic]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Graphic /symbol indicating the constraint Eg.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.reference","title":"<code>reference: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation/URL for the limitation or constraint, e.g., copyright statement, license agreement, etc.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.releasability","title":"<code>releasability: Optional[Releasability]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information concerning the parties to whom the resource can or cannot be released and the party responsible for determining the releasibility.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.responsible_party","title":"<code>responsible_party: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Party responsible for the resource constraints.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Constraints.use_limitation","title":"<code>use_limitation: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Limitation affecting the fitness for use of the resource or metadata. For example, \"not to be used for navigation\".</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.LegalConstraints","title":"<code>LegalConstraints</code>","text":"<p>               Bases: <code>Constraints</code></p> <p>Restrictions and legal prerequisites for accessing and using the resource or metadata.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class LegalConstraints(Constraints):\n    \"\"\"\n    Restrictions and legal prerequisites for accessing and using the resource\n    or metadata.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def access_constraints(self) -&gt; Optional[Sequence[RestrictionCode]]:\n        \"\"\"\n        Access constraints applied to assure the protection of privacy or\n        intellectual property, and any special restrictions or limitations on\n        obtaining the resource or metadata.\n\n        MANDATORY: if `use_constraints`, `other_constrints`, `use_limitations`,\n            or `releasability` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def use_constraints(self) -&gt; Optional[Sequence[RestrictionCode]]:\n        \"\"\"\n        Constraints applied to assure the protection of privacy or\n        intellectual property, and any special restrictions or limitations or\n        warnings on using the resource or metadata.\n\n        MANDATORY: if `access_constraints`, `other_constrints`,\n            `use_limitations`, or `releasability` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_constraints(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Other restrictions and legal prerequisites for accessing and using the\n        resource or metadata.\n\n        MANDATORY: if `access_constraints`, `use_constrints`,\n            `use_limitations`, or `releasability` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.LegalConstraints.access_constraints","title":"<code>access_constraints: Optional[Sequence[RestrictionCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Access constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations on obtaining the resource or metadata.</p> if <code>use_constraints</code>, <code>other_constrints</code>, <code>use_limitations</code>, <p>or <code>releasability</code> are <code>None</code>.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.LegalConstraints.other_constraints","title":"<code>other_constraints: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Other restrictions and legal prerequisites for accessing and using the resource or metadata.</p> if <code>access_constraints</code>, <code>use_constrints</code>, <p><code>use_limitations</code>, or <code>releasability</code> are <code>None</code>.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.LegalConstraints.use_constraints","title":"<code>use_constraints: Optional[Sequence[RestrictionCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Constraints applied to assure the protection of privacy or intellectual property, and any special restrictions or limitations or warnings on using the resource or metadata.</p> if <code>access_constraints</code>, <code>other_constrints</code>, <p><code>use_limitations</code>, or <code>releasability</code> are <code>None</code>.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Releasability","title":"<code>Releasability</code>","text":"<p>               Bases: <code>ABC</code></p> <p>State, nation or organisation to which resource can be released, e.g., NATO unclassified releasable to PfP.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class Releasability(ABC):\n    \"\"\"\n    State, nation or organisation to which resource can be released,\n    e.g., NATO unclassified releasable to PfP.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def addressee(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Party to which the release statement applies.\n\n        MANDATORY: if `statement` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def statement(self) -&gt; Optional[str]:\n        \"\"\"\n        Release statement.\n\n        MANDATORY: if `addressee` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def dissemination_constraints(self) -&gt; Optional[Sequence[RestrictionCode]]:\n        \"\"\"Component in determining releasability.\"\"\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Releasability.addressee","title":"<code>addressee: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Party to which the release statement applies.</p> <p>MANDATORY: if <code>statement</code> is <code>None</code>.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Releasability.dissemination_constraints","title":"<code>dissemination_constraints: Optional[Sequence[RestrictionCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Component in determining releasability.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.Releasability.statement","title":"<code>statement: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Release statement.</p> <p>MANDATORY: if <code>addressee</code> is <code>None</code>.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode","title":"<code>RestrictionCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Limitation(s) placed upon the access or use of the data.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class RestrictionCode(Enum):\n    \"\"\"Limitation(s) placed upon the access or use of the data.\"\"\"\n\n    COPYRIGHT = \"copyright\"\n    \"\"\"\n    Exclusive right tot he publication, production, or sale of the rights to a\n    literary, dramatic, musical, or artistic work, or to the use of a\n    commercial print or label, granted by law for a specified period of time\n    to an author, composer, artist, distributor.\n    \"\"\"\n\n    PATENT = \"patent\"\n    \"\"\"\n    Government has granted exclusive right to make, sell, use or license an\n    invention or discovery.\n    \"\"\"\n\n    PATENT_PENDING = \"patentPending\"\n    \"\"\"Produced or sold information awaiting a patent.\"\"\"\n\n    TRADEMARK = \"trademark\"\n    \"\"\"\n    A name, symbol, or other device identifying a product, officially\n    registered and legally restricted to the use of the owner or manufacturer.\n    \"\"\"\n\n    LICENCE = \"licence\"\n    \"\"\"Formal permission to do something.\"\"\"\n\n    INTELLECTUAL_PROPERTY_RIGHTS = \"intellectualPropertyRights\"\n    \"\"\"\n    Rights to financial benefit from and control of distribution of\n    non-tangible property that is a result of creativity.\n    \"\"\"\n\n    RESTRICTED = \"restricted\"\n    \"\"\"Withheld from general circulation or disclosure.\"\"\"\n\n    OTHER_RESTRICTIONS = \"otherRestrictions\"\n    \"\"\"Limitation not listed.\"\"\"\n\n    UNRESTRICTED = \"unrestricted\"\n    \"\"\"No constraints exist.\"\"\"\n\n    LICENCE_UNRESTRICTED = \"licenceUnrestricted\"\n    \"\"\"Formal permission not required to use resource.\"\"\"\n\n    LICENCE_END_USER = \"licenceEndUser\"\n    \"\"\"\n    Fromal permission required for a person pr an entity to use the resource\n    and that may differ from the person that orders or purchases it.\n    \"\"\"\n\n    LICENCE_DISTRIBUTOR = \"licenceDistributor\"\n    \"\"\"\n    Formal permission required for a person or entity to commercialize or\n    distribute the resource.\n    \"\"\"\n\n    PRIVATE = \"private\"\n    \"\"\"\n    Protects rights of individual or organisations from observation,\n    intrusion, or attention of others.\n    \"\"\"\n\n    STATUTORY = \"statutory\"\n    \"\"\"Prescribed by law.\"\"\"\n\n    CONFIDENTIAL = \"confidential\"\n    \"\"\"\n    Not available to the public.\n\n    NOTE: Contains information that could be prejudicial to a commercial,\n    industrial, or national interest.\n    \"\"\"\n\n    SENSITIVE_BUT_UNCLASSIFIED = \"sensitiveButUnclassified\"\n    \"\"\"\n    Although unclassified, requires strict controls over its distribution.\n    \"\"\"\n\n    IN_CONFIDENCE = \"in-confidence\"\n    \"With trust.\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.CONFIDENTIAL","title":"<code>CONFIDENTIAL = 'confidential'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Not available to the public.</p> <p>NOTE: Contains information that could be prejudicial to a commercial, industrial, or national interest.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.COPYRIGHT","title":"<code>COPYRIGHT = 'copyright'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Exclusive right tot he publication, production, or sale of the rights to a literary, dramatic, musical, or artistic work, or to the use of a commercial print or label, granted by law for a specified period of time to an author, composer, artist, distributor.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.INTELLECTUAL_PROPERTY_RIGHTS","title":"<code>INTELLECTUAL_PROPERTY_RIGHTS = 'intellectualPropertyRights'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rights to financial benefit from and control of distribution of non-tangible property that is a result of creativity.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.IN_CONFIDENCE","title":"<code>IN_CONFIDENCE = 'in-confidence'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>With trust.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.LICENCE","title":"<code>LICENCE = 'licence'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Formal permission to do something.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.LICENCE_DISTRIBUTOR","title":"<code>LICENCE_DISTRIBUTOR = 'licenceDistributor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Formal permission required for a person or entity to commercialize or distribute the resource.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.LICENCE_END_USER","title":"<code>LICENCE_END_USER = 'licenceEndUser'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Fromal permission required for a person pr an entity to use the resource and that may differ from the person that orders or purchases it.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.LICENCE_UNRESTRICTED","title":"<code>LICENCE_UNRESTRICTED = 'licenceUnrestricted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Formal permission not required to use resource.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.OTHER_RESTRICTIONS","title":"<code>OTHER_RESTRICTIONS = 'otherRestrictions'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Limitation not listed.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.PATENT","title":"<code>PATENT = 'patent'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Government has granted exclusive right to make, sell, use or license an invention or discovery.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.PATENT_PENDING","title":"<code>PATENT_PENDING = 'patentPending'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Produced or sold information awaiting a patent.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.PRIVATE","title":"<code>PRIVATE = 'private'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Protects rights of individual or organisations from observation, intrusion, or attention of others.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.RESTRICTED","title":"<code>RESTRICTED = 'restricted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Withheld from general circulation or disclosure.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.SENSITIVE_BUT_UNCLASSIFIED","title":"<code>SENSITIVE_BUT_UNCLASSIFIED = 'sensitiveButUnclassified'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Although unclassified, requires strict controls over its distribution.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.STATUTORY","title":"<code>STATUTORY = 'statutory'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Prescribed by law.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.TRADEMARK","title":"<code>TRADEMARK = 'trademark'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A name, symbol, or other device identifying a product, officially registered and legally restricted to the use of the owner or manufacturer.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.RestrictionCode.UNRESTRICTED","title":"<code>UNRESTRICTED = 'unrestricted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>No constraints exist.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.SecurityConstraints","title":"<code>SecurityConstraints</code>","text":"<p>               Bases: <code>Constraints</code></p> <p>Handling restrictions imposed on the resource or metadata for national security or similar security concerns.</p> Source code in <code>opengis/metadata/constraints.py</code> <pre><code>class SecurityConstraints(Constraints):\n    \"\"\"\n    Handling restrictions imposed on the resource or metadata for national\n    security or similar security concerns.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def classification(self) -&gt; ClassificationCode:\n        \"\"\"Name of the handling restrictions on the resource or metadata.\"\"\"\n\n    @property\n    @abstractmethod\n    def user_note(self) -&gt; Optional[str]:\n        \"\"\"\n        Explanation of the application of the legal constraints or other\n        restrictions and legal prerequisites for obtaining and using the\n        resource or metadata.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def classification_system(self) -&gt; Optional[str]:\n        \"\"\"Name of the classification system.\"\"\"\n\n    @property\n    @abstractmethod\n    def handling_description(self) -&gt; Optional[str]:\n        \"\"\"\n        Additional information about the restrictions on handling the resource\n        or metadata.\n        \"\"\"\n</code></pre>"},{"location":"metadata/constraints/#opengis.metadata.constraints.SecurityConstraints.classification","title":"<code>classification: ClassificationCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the handling restrictions on the resource or metadata.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.SecurityConstraints.classification_system","title":"<code>classification_system: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the classification system.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.SecurityConstraints.handling_description","title":"<code>handling_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Additional information about the restrictions on handling the resource or metadata.</p>"},{"location":"metadata/constraints/#opengis.metadata.constraints.SecurityConstraints.user_note","title":"<code>user_note: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Explanation of the application of the legal constraints or other restrictions and legal prerequisites for obtaining and using the resource or metadata.</p>"},{"location":"metadata/content/","title":"<code>content</code> module","text":"<p>This is the <code>content</code> module.</p> <p>This module contains geographic metadata structures regarding data content derived from the ISO 19115-1:2014 and ISO 19115-2:2019 international standards.</p>"},{"location":"metadata/content/#opengis.metadata.content.AttributeGroup","title":"<code>AttributeGroup</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the <code>content_type</code> for groups of attributes for a specific <code>RangeDimension</code>.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class AttributeGroup(ABC):\n    \"\"\"\n    Information about the `content_type` for groups of attributes for a\n    specific `RangeDimension`.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def content_type(self) -&gt; Sequence[CoverageContentTypeCode]:\n        \"\"\"Type of information represented by the value.\"\"\"\n\n    @property\n    @abstractmethod\n    def attribute(self) -&gt; Optional[Sequence[RangeDimension]]:\n        \"\"\"Information on an attribute of the resource.\"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.AttributeGroup.attribute","title":"<code>attribute: Optional[Sequence[RangeDimension]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information on an attribute of the resource.</p>"},{"location":"metadata/content/#opengis.metadata.content.AttributeGroup.content_type","title":"<code>content_type: Sequence[CoverageContentTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of information represented by the value.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band","title":"<code>Band</code>","text":"<p>               Bases: <code>SampleDimension</code></p> <p>Range of wavelengths in the electromagnetic spectrum.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class Band(SampleDimension):\n    \"\"\"Range of wavelengths in the electromagnetic spectrum.\"\"\"\n\n    @property\n    @abstractmethod\n    def bound_max(self) -&gt; Optional[float]:\n        \"\"\"\n        Bounding maximum. The longest wavelength that the sensor is capable of\n        collecting within a designated band.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def bound_min(self) -&gt; Optional[float]:\n        \"\"\"\n        Bounding minimum. The shortest wavelength that the sensor is capable of\n        collecting within a designated band.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def bound_unit(self) -&gt; Optional[UomLength]:\n        \"\"\"\n        Bounding units. The units in which the sensor wavelengths are\n        expressed.\n\n        MANDATORY if `bound_max` or `bound_min` is specified.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def peak_response(self) -&gt; Optional[float]:\n        \"\"\"Wavelength at which the response is the highest.\"\"\"\n\n    @property\n    @abstractmethod\n    def tone_gradation(self) -&gt; Optional[int]:\n        \"\"\"Number of discrete numerical values in the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def band_boundary_definition(self) -&gt; Optional[BandDefinition]:\n        \"\"\"\n        Designation of criterion for defining maximum and minimum wavelengths\n        for a spectral band.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def transmitted_polarisation(self) -&gt; \\\n            Optional[PolarisationOrientationCode]:\n        \"\"\"Polarisation of the transmitter or detector.\"\"\"\n\n    @property\n    @abstractmethod\n    def detected_polarisation(self) -&gt; Optional[PolarisationOrientationCode]:\n        \"\"\"Polarisation of the transmitter or detector.\"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.Band.band_boundary_definition","title":"<code>band_boundary_definition: Optional[BandDefinition]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Designation of criterion for defining maximum and minimum wavelengths for a spectral band.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.bound_max","title":"<code>bound_max: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Bounding maximum. The longest wavelength that the sensor is capable of collecting within a designated band.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.bound_min","title":"<code>bound_min: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Bounding minimum. The shortest wavelength that the sensor is capable of collecting within a designated band.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.bound_unit","title":"<code>bound_unit: Optional[UomLength]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Bounding units. The units in which the sensor wavelengths are expressed.</p> <p>MANDATORY if <code>bound_max</code> or <code>bound_min</code> is specified.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.detected_polarisation","title":"<code>detected_polarisation: Optional[PolarisationOrientationCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Polarisation of the transmitter or detector.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.peak_response","title":"<code>peak_response: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Wavelength at which the response is the highest.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.tone_gradation","title":"<code>tone_gradation: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number of discrete numerical values in the data.</p>"},{"location":"metadata/content/#opengis.metadata.content.Band.transmitted_polarisation","title":"<code>transmitted_polarisation: Optional[PolarisationOrientationCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Polarisation of the transmitter or detector.</p>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition","title":"<code>BandDefinition</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Designation of the criterion for defining wavelengths of a spectral band.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class BandDefinition(Enum):\n    \"\"\"\n    Designation of the criterion for defining wavelengths of a spectral band.\n    \"\"\"\n\n    THREE_DB = \"3dB\"\n    \"\"\"\n    Width of a distribution equal to the distance between the outer two points\\\n    on the distribution having power level half of that at the peak.\n    \"\"\"\n\n    HALF_MAXIMUM = \"halfMaximum\"\n    \"\"\"\n    Width of a distribution equal to the distance between the outer two points\n    on the distribution having power level half of that at the peak.\n    \"\"\"\n\n    FIFTY_PERCENT = \"fiftyPercent\"\n    \"\"\"\n    Full spectral width of a spectral power density measured at 50 % of its\n    peak height.\n    \"\"\"\n\n    ONE_OVER_E = \"oneOverE\"\n    \"\"\"\n    Width of a distribution equal to the distance between the outer two points\n    on the distribution having power level 1/e that of the peak.\n    \"\"\"\n\n    EQUIVALENT_WIDTH = \"equivalentWidth\"\n    \"\"\"\n    Width of a band with full sensitivity or absorption at every wavelength\n    that detects or absorbs the same amount of energy as the band described.\n    \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition.EQUIVALENT_WIDTH","title":"<code>EQUIVALENT_WIDTH = 'equivalentWidth'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Width of a band with full sensitivity or absorption at every wavelength that detects or absorbs the same amount of energy as the band described.</p>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition.FIFTY_PERCENT","title":"<code>FIFTY_PERCENT = 'fiftyPercent'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Full spectral width of a spectral power density measured at 50 % of its peak height.</p>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition.HALF_MAXIMUM","title":"<code>HALF_MAXIMUM = 'halfMaximum'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Width of a distribution equal to the distance between the outer two points on the distribution having power level half of that at the peak.</p>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition.ONE_OVER_E","title":"<code>ONE_OVER_E = 'oneOverE'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Width of a distribution equal to the distance between the outer two points on the distribution having power level 1/e that of the peak.</p>"},{"location":"metadata/content/#opengis.metadata.content.BandDefinition.THREE_DB","title":"<code>THREE_DB = '3dB'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Width of a distribution equal to the distance between the outer two points    on the distribution having power level half of that at the peak.</p>"},{"location":"metadata/content/#opengis.metadata.content.ContentInformation","title":"<code>ContentInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of the content of a resource.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class ContentInformation(ABC):\n    \"\"\"Description of the content of a resource.\"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode","title":"<code>CoverageContentTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Transformation function to be used when scaling a physical value of a given element.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class CoverageContentTypeCode(Enum):\n    \"\"\"\n    Transformation function to be used when scaling a physical value of a\n    given element.\n    \"\"\"\n\n    IMAGE = \"image\"\n    \"\"\"\n    Meaningful numerical representation of a physical parameter that is not\n    the actual value of the physical parameter.\n    \"\"\"\n\n    THEMATIC_CLASSIFICATION = \"thematicClassification\"\n    \"\"\"\n    Code value with no quantitative meaning, used to represent a\n    physical quantity.\n    \"\"\"\n\n    PHYSICAL_MEASUREMENT = \"physicalMeasurement\"\n    \"\"\"Value in physical units of the quantity being measured.\"\"\"\n\n    AUXILLARY_INFORMATION = \"auxillaryInformation\"\n    \"\"\"\n    Data, usually a physical measurement, used to support the calculation\n    of the primary PHYSICAL_MEASUREMENT coverages in the dataset.\n\n    EXAMPLE: Grid of aerosol optical thickness used in the calculation of a\n    sea surface temperature product.\n    \"\"\"\n\n    QUALITY_INFORMATION = \"qualityInformation\"\n    \"\"\"\n    Data used to characterize the quality of the PHYSICAL_MEASUREMENT coverages\n    in the dataset.\n\n    NOTE: Typically included in a gmi:QE_CoverageResult.\n    \"\"\"\n\n    REFERENCE_INFORMATION = \"referenceInformation\"\n    \"\"\"\n    Reference information used to support the calculation or use of the\n    PHYSICAL_MEASUREMENT coverages in the dataset.\n\n    EXAMPLE: Grids of latitude/longitude used to geolocate\n    the physical measurements.\n    \"\"\"\n\n    MODEL_RESULT = \"modelResult\"\n    \"\"\"\n    Resources with values that are calculated using a model rather than being\n    observed or calculated from observations.\n    \"\"\"\n\n    COORDINATE = \"coordinate\"\n    \"\"\"Data used to provide coordinate axis values.\"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.AUXILLARY_INFORMATION","title":"<code>AUXILLARY_INFORMATION = 'auxillaryInformation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Data, usually a physical measurement, used to support the calculation of the primary PHYSICAL_MEASUREMENT coverages in the dataset.</p> <p>EXAMPLE: Grid of aerosol optical thickness used in the calculation of a sea surface temperature product.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.COORDINATE","title":"<code>COORDINATE = 'coordinate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Data used to provide coordinate axis values.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.IMAGE","title":"<code>IMAGE = 'image'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Meaningful numerical representation of a physical parameter that is not the actual value of the physical parameter.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.MODEL_RESULT","title":"<code>MODEL_RESULT = 'modelResult'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resources with values that are calculated using a model rather than being observed or calculated from observations.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.PHYSICAL_MEASUREMENT","title":"<code>PHYSICAL_MEASUREMENT = 'physicalMeasurement'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Value in physical units of the quantity being measured.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.QUALITY_INFORMATION","title":"<code>QUALITY_INFORMATION = 'qualityInformation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Data used to characterize the quality of the PHYSICAL_MEASUREMENT coverages in the dataset.</p> <p>NOTE: Typically included in a gmi:QE_CoverageResult.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.REFERENCE_INFORMATION","title":"<code>REFERENCE_INFORMATION = 'referenceInformation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference information used to support the calculation or use of the PHYSICAL_MEASUREMENT coverages in the dataset.</p> <p>EXAMPLE: Grids of latitude/longitude used to geolocate the physical measurements.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageContentTypeCode.THEMATIC_CLASSIFICATION","title":"<code>THEMATIC_CLASSIFICATION = 'thematicClassification'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Code value with no quantitative meaning, used to represent a physical quantity.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageDescription","title":"<code>CoverageDescription</code>","text":"<p>               Bases: <code>ContentInformation</code></p> <p>Details about the content of a resource.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class CoverageDescription(ContentInformation):\n    \"\"\"Details about the content of a resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def attribute_description(self) -&gt; RecordType:\n        \"\"\"Description of the attribute described by the measurement value.\"\"\"\n\n    @property\n    @abstractmethod\n    def processing_level_code(self) -&gt; Optional[Identifier]:\n        \"\"\"\n        Code and codespace that identifies the level of processing that has\n        been applied to the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def attribute_group(self) -&gt; Optional[Sequence[AttributeGroup]]:\n        \"\"\"\n        Information on the group(s) of related attributes of the resource\n        with the same type.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def range_element_description(self) -&gt; Optional[Sequence[\n        RangeElementDescription\n    ]]:\n        \"\"\"\n        Provides the description of the specific range elements of a coverage.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.CoverageDescription.attribute_description","title":"<code>attribute_description: RecordType</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the attribute described by the measurement value.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageDescription.attribute_group","title":"<code>attribute_group: Optional[Sequence[AttributeGroup]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information on the group(s) of related attributes of the resource with the same type.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageDescription.processing_level_code","title":"<code>processing_level_code: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code and codespace that identifies the level of processing that has been applied to the resource.</p>"},{"location":"metadata/content/#opengis.metadata.content.CoverageDescription.range_element_description","title":"<code>range_element_description: Optional[Sequence[RangeElementDescription]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides the description of the specific range elements of a coverage.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription","title":"<code>FeatureCatalogueDescription</code>","text":"<p>               Bases: <code>ContentInformation</code></p> <p>Information identifying the feature catalogue or the conceptual schema.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class FeatureCatalogueDescription(ContentInformation):\n    \"\"\"\n    Information identifying the feature catalogue or the conceptual schema.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def compliance_code(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not the cited feature catalogue complies with\n        ISO 19110.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def locale(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Language(s) and character set(s) used within the catalogue. A string\n        conforming to IETF BCP 47.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def included_with_dataset(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not the feature catalogue is included with\n        the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def feature_types(self) -&gt; Optional[Sequence[FeatureTypeInfo]]:\n        \"\"\"\n        Subset of feature types from cited feature catalogue occurring in\n        dataset.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def feature_catalogue_citation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Complete bibliographic reference to one or more external feature\n        catalogues.\n\n        MANADTORY: if a Feature Catalogue is not provided with the resource\n            and `FeatureCatalogue` is `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription.compliance_code","title":"<code>compliance_code: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not the cited feature catalogue complies with ISO 19110.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription.feature_catalogue_citation","title":"<code>feature_catalogue_citation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Complete bibliographic reference to one or more external feature catalogues.</p> if a Feature Catalogue is not provided with the resource <p>and <code>FeatureCatalogue</code> is <code>None</code>.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription.feature_types","title":"<code>feature_types: Optional[Sequence[FeatureTypeInfo]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Subset of feature types from cited feature catalogue occurring in dataset.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription.included_with_dataset","title":"<code>included_with_dataset: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not the feature catalogue is included with the resource.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureCatalogueDescription.locale","title":"<code>locale: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Language(s) and character set(s) used within the catalogue. A string conforming to IETF BCP 47.</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureTypeInfo","title":"<code>FeatureTypeInfo</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the occurring feature type.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class FeatureTypeInfo(ABC):\n    \"\"\"Information about the occurring feature type.\"\"\"\n\n    @property\n    @abstractmethod\n    def feature_type_name(self) -&gt; GenericName:\n        \"\"\"Name of the feature type.\"\"\"\n\n    @property\n    @abstractmethod\n    def feature_instance_count(self) -&gt; Optional[int]:\n        \"\"\"\n        Number of occurences of feature instances for this type.\n\n        Domain: &gt; 0\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.FeatureTypeInfo.feature_instance_count","title":"<code>feature_instance_count: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number of occurences of feature instances for this type.</p> <p>Domain: &gt; 0</p>"},{"location":"metadata/content/#opengis.metadata.content.FeatureTypeInfo.feature_type_name","title":"<code>feature_type_name: GenericName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the feature type.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription","title":"<code>ImageDescription</code>","text":"<p>               Bases: <code>CoverageDescription</code></p> <p>Information about an image's suitability for use.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class ImageDescription(CoverageDescription):\n    \"\"\"Information about an image's suitability for use.\"\"\"\n\n    @property\n    @abstractmethod\n    def illumination_elevation_angle(self) -&gt; Optional[float]:\n        \"\"\"\n        Illumination elevation measured in degrees clockwise from the target\n        plane at intersection of the optical line of sight with the Earth's\n        surface.\n\n        NOTE: For images from a scanning device, refer to the centre pixel\n        of the image.\n\n        Domain: -90 - 90\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def illumination_azimuth_angle(self) -&gt; Optional[float]:\n        \"\"\"\n        Illumination azimuth measured in degrees clockwise from true north at\n        the time the image is taken.\n\n        NOTE: For images from a scanning device, refer to the centre pixel of\n        the image.\n\n        Domain: 0.00 - 360\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def imaging_condition(self) -&gt; Optional[ImagingConditionCode]:\n        \"\"\"Conditions that affected the image.\"\"\"\n\n    @property\n    @abstractmethod\n    def image_quality_code(self) -&gt; Optional[Identifier]:\n        \"\"\"Code in producer's code space that specifies the image quality.\"\"\"\n\n    @property\n    @abstractmethod\n    def cloud_cover_percentage(self) -&gt; Optional[float]:\n        \"\"\"\n        Area of the dataset obscured by clouds, expressed as a percentage of\n        the spatial extent.\n\n        Domain: 0.0 - 100.0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def compression_generation_quantity(self) -&gt; Optional[int]:\n        \"\"\"\n        Count of the number of lossy compression cycles performed on the image.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def triangulation_indicator(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not triangulation has been performed upon the\n        image.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def radiometric_calibration_data_availability(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not the radiometric calibration information\n        for generating the radiometrically calibrated standard data product is\n        available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def camera_calibration_information_availability(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not constants are available which allow for\n        camera calibration corrections.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def film_distortion_information_availability(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not Calibration Reseau information is\n        available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def lens_distortion_information_availability(self) -&gt; Optional[bool]:\n        \"\"\"\n        Indication of whether or not lens aberration correction information is\n        available.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.camera_calibration_information_availability","title":"<code>camera_calibration_information_availability: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not constants are available which allow for camera calibration corrections.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.cloud_cover_percentage","title":"<code>cloud_cover_percentage: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Area of the dataset obscured by clouds, expressed as a percentage of the spatial extent.</p> <p>Domain: 0.0 - 100.0</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.compression_generation_quantity","title":"<code>compression_generation_quantity: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Count of the number of lossy compression cycles performed on the image.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.film_distortion_information_availability","title":"<code>film_distortion_information_availability: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not Calibration Reseau information is available.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.illumination_azimuth_angle","title":"<code>illumination_azimuth_angle: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Illumination azimuth measured in degrees clockwise from true north at the time the image is taken.</p> <p>NOTE: For images from a scanning device, refer to the centre pixel of the image.</p> <p>Domain: 0.00 - 360</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.illumination_elevation_angle","title":"<code>illumination_elevation_angle: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Illumination elevation measured in degrees clockwise from the target plane at intersection of the optical line of sight with the Earth's surface.</p> <p>NOTE: For images from a scanning device, refer to the centre pixel of the image.</p> <p>Domain: -90 - 90</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.image_quality_code","title":"<code>image_quality_code: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code in producer's code space that specifies the image quality.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.imaging_condition","title":"<code>imaging_condition: Optional[ImagingConditionCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Conditions that affected the image.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.lens_distortion_information_availability","title":"<code>lens_distortion_information_availability: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not lens aberration correction information is available.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.radiometric_calibration_data_availability","title":"<code>radiometric_calibration_data_availability: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not the radiometric calibration information for generating the radiometrically calibrated standard data product is available.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImageDescription.triangulation_indicator","title":"<code>triangulation_indicator: Optional[bool]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not triangulation has been performed upon the image.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode","title":"<code>ImagingConditionCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Code which indicates conditions which may affect the image.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class ImagingConditionCode(Enum):\n    \"\"\"\n    Code which indicates conditions which may affect the image.\n    \"\"\"\n\n    BLURRED_IMAGE = \"blurredImage\"\n    \"\"\"Portion of the image is blurred.\"\"\"\n\n    CLOUD = \"cloud\"\n    \"\"\"Portion of the image is partially obscured by cloud cover.\"\"\"\n\n    DEGRADING_OBLIQUITY = \"degradingObliquity\"\n    \"\"\"\n    Acute angle between the plane of the ecliptic (the plane of the Earth's\n    orbit) and the plane of the celestial equator.\n    \"\"\"\n\n    FOG = \"fog\"\n    \"\"\"Portion of the image is partially obscured by fog.\"\"\"\n\n    HEAVY_SMOKE_OR_DUST = \"heavySmokeOrDust\"\n    \"\"\"Portion of the image is partially obscured by heavy smoke or dust.\"\"\"\n\n    NIGHT = \"night\"\n    \"\"\"Image was taken at night.\"\"\"\n\n    RAIN = \"rain\"\n    \"\"\"Image was taken during rainfall.\"\"\"\n\n    SEMI_DARKNESS = \"semiDarkness\"\n    \"\"\"\n    Image was taken during semi-dark conditions - twilight conditions.\n    \"\"\"\n    SHADOW = \"shadow\"\n    \"\"\"Portion of the image is obscured by shadow.\"\"\"\n\n    SNOW = \"snow\"\n    \"\"\"Portion of the image is obscured by snow.\"\"\"\n\n    TERRAIN_MASKING = \"terrainMasking\"\n    \"\"\"\n    The absence of collection data of a given point or area caused by the\n    relative location of topographic features which obstruct the collection\n    path between the collector(s) and the subject(s) of interes.\n    \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.BLURRED_IMAGE","title":"<code>BLURRED_IMAGE = 'blurredImage'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is blurred.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.CLOUD","title":"<code>CLOUD = 'cloud'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is partially obscured by cloud cover.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.DEGRADING_OBLIQUITY","title":"<code>DEGRADING_OBLIQUITY = 'degradingObliquity'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Acute angle between the plane of the ecliptic (the plane of the Earth's orbit) and the plane of the celestial equator.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.FOG","title":"<code>FOG = 'fog'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is partially obscured by fog.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.HEAVY_SMOKE_OR_DUST","title":"<code>HEAVY_SMOKE_OR_DUST = 'heavySmokeOrDust'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is partially obscured by heavy smoke or dust.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.NIGHT","title":"<code>NIGHT = 'night'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image was taken at night.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.RAIN","title":"<code>RAIN = 'rain'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image was taken during rainfall.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.SEMI_DARKNESS","title":"<code>SEMI_DARKNESS = 'semiDarkness'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image was taken during semi-dark conditions - twilight conditions.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.SHADOW","title":"<code>SHADOW = 'shadow'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is obscured by shadow.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.SNOW","title":"<code>SNOW = 'snow'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Portion of the image is obscured by snow.</p>"},{"location":"metadata/content/#opengis.metadata.content.ImagingConditionCode.TERRAIN_MASKING","title":"<code>TERRAIN_MASKING = 'terrainMasking'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The absence of collection data of a given point or area caused by the relative location of topographic features which obstruct the collection path between the collector(s) and the subject(s) of interes.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode","title":"<code>PolarisationOrientationCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Polarization of the antenna in relation to the wave form.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class PolarisationOrientationCode(Enum):\n    \"\"\"Polarization of the antenna in relation to the wave form.\"\"\"\n\n    HORIZONTAL = \"horizontal\"\n    \"\"\"\n    Polarization of the sensor oriented in the horizontal plane in relation to\n    swathe direction.\n    \"\"\"\n\n    VERTICAL = \"vertical\"\n    \"\"\"\n    Polarization of the sensor oriented in the vertical plane in relation to\n    swathe direction.\n    \"\"\"\n\n    LEFT_CIRCULAR = \"leftCircular\"\n    \"\"\"\n    Polarization of the sensor oriented in the left circular plane in relation\n    to swathe direction.\n    \"\"\"\n\n    RIGHT_CIRCULAR = \"rightCircular\"\n    \"\"\"\n    Polarization of the sensor oriented in the right circular plane in relation\n    to swathe direction.\n    \"\"\"\n\n    THETA = \"theta\"\n    \"\"\"\n    Polarization of the sensor oriented in the angle between +90\u00b0 and 0\u00b0\n    parallel to swathe direction.\n    \"\"\"\n\n    PHI = \"phi\"\n    \"\"\"\n    Polarization of the sensor oriented in the +90\u00b0 and 0\u00b0 perpendicular to\n    swathe direction.\n    \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.HORIZONTAL","title":"<code>HORIZONTAL = 'horizontal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the horizontal plane in relation to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.LEFT_CIRCULAR","title":"<code>LEFT_CIRCULAR = 'leftCircular'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the left circular plane in relation to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.PHI","title":"<code>PHI = 'phi'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the +90\u00b0 and 0\u00b0 perpendicular to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.RIGHT_CIRCULAR","title":"<code>RIGHT_CIRCULAR = 'rightCircular'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the right circular plane in relation to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.THETA","title":"<code>THETA = 'theta'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the angle between +90\u00b0 and 0\u00b0 parallel to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.PolarisationOrientationCode.VERTICAL","title":"<code>VERTICAL = 'vertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Polarization of the sensor oriented in the vertical plane in relation to swathe direction.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeDimension","title":"<code>RangeDimension</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information on the range of attribute values.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class RangeDimension(ABC):\n    \"\"\"Information on the range of attribute values.\"\"\"\n\n    @property\n    @abstractmethod\n    def sequence_identifier(self) -&gt; Optional[MemberName]:\n        \"\"\"\n        Number that uniquely identifies instances of bands of wavelengths on\n        which a sensor operates.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Description of the range of a cell measurement value.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[Sequence[Identifier]]:\n        \"\"\"\n        Identifiers for each attribute included in the resource.\n\n        NOTE: These identifiers can be used to provide names for the\n        resource's attribute from a standard set of names.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.RangeDimension.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the range of a cell measurement value.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeDimension.name","title":"<code>name: Optional[Sequence[Identifier]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifiers for each attribute included in the resource.</p> <p>NOTE: These identifiers can be used to provide names for the resource's attribute from a standard set of names.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeDimension.sequence_identifier","title":"<code>sequence_identifier: Optional[MemberName]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number that uniquely identifies instances of bands of wavelengths on which a sensor operates.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeElementDescription","title":"<code>RangeElementDescription</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of specific range elements.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class RangeElementDescription(ABC):\n    \"\"\"Description of specific range elements.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; str:\n        \"\"\"Designation associated with a set of range elements.\"\"\"\n\n    @property\n    @abstractmethod\n    def definition(self) -&gt; str:\n        \"\"\"Description of a set of specific range elements.\"\"\"\n\n    @property\n    @abstractmethod\n    def range_element(self) -&gt; Sequence[Record]:\n        \"\"\"\n        Specific range elements, i.e. range elements associated with a name\n        and their definition.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.RangeElementDescription.definition","title":"<code>definition: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of a set of specific range elements.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeElementDescription.name","title":"<code>name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Designation associated with a set of range elements.</p>"},{"location":"metadata/content/#opengis.metadata.content.RangeElementDescription.range_element","title":"<code>range_element: Sequence[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Specific range elements, i.e. range elements associated with a name and their definition.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension","title":"<code>SampleDimension</code>","text":"<p>               Bases: <code>RangeDimension</code></p> <p>The characteristics of each dimension (layer) included in the resource.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class SampleDimension(RangeDimension):\n    \"\"\"\n    The characteristics of each dimension (layer) included in the resource.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def max_value(self) -&gt; Optional[float]:\n        \"\"\"\n        Maximum value of data values in each dimension included in the\n        resource.\n\n        NOTE: Restricted to UomLength in the `Band` class.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def min_value(self) -&gt; Optional[float]:\n        \"\"\"\n        Minimum value of data values in each dimension included in the\n        resource.\n\n        Restricted to `UomLength` in the `Band` class.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def units(self) -&gt; Optional[UnitOfMeasure]:\n        \"\"\"\n        Units of data in each dimension included in the resource.\n\n        NOTE: that the type of this is `UnitOfMeasure` and that it is\n        restricted further for the `Band` class to being of type `UomLength`.\n\n        MANDATORY if `max_value` or `min_value` is specified.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scale_factor(self) -&gt; Optional[float]:\n        \"\"\"Scale factor which has been applied to the cell value.\"\"\"\n\n    @property\n    @abstractmethod\n    def offset(self) -&gt; Optional[float]:\n        \"\"\"The physical value corresponding to a cell value of zero.\"\"\"\n\n    @property\n    @abstractmethod\n    def mean_value(self) -&gt; Optional[float]:\n        \"\"\"\n        Mean value of data values in each dimension included in the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def number_of_values(self) -&gt; Optional[int]:\n        \"\"\"\n        This gives the number of values used in a thematicClassification\n        resource, e.g., the number of classes in a Land Cover Type coverage or\n        the number of cells with data in other types of coverages.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def standard_deviation(self) -&gt; Optional[float]:\n        \"\"\"\n        Standard deviation of data values in each dimension included in the\n        resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_property_type(self) -&gt; Optional[RecordType]:\n        \"\"\"\n        Type of other attribute description (i.e. netcdf/variable in ncml.xsd).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_property(self) -&gt; Optional[Record]:\n        \"\"\"\n        Instance of otherAttributeType that defines attributes not explicitly\n        included in `CoverageType`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def bits_per_value(self) -&gt; Optional[int]:\n        \"\"\"\n        Maximum number of significant bits in the uncompressed representation\n        for the value in each band of each pixel.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def transfer_function_type(self) -&gt; Optional[TransferFunctionTypeCode]:\n        \"\"\"\n        Type of transfer function to be used when scaling a physical value for\n        a given element.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def range_element_description(self) -&gt; Sequence[RangeElementDescription]:\n        \"\"\"\n        Provides the description and values of the specific range elements of\n        a sample dimension.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def nominal_spatial_resolution(self) -&gt; Optional[float]:\n        \"\"\"\n        Smallest distance between which separate points can be distinguished,\n        as specified in instrument design.\n        \"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.bits_per_value","title":"<code>bits_per_value: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maximum number of significant bits in the uncompressed representation for the value in each band of each pixel.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.max_value","title":"<code>max_value: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maximum value of data values in each dimension included in the resource.</p> <p>NOTE: Restricted to UomLength in the <code>Band</code> class.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.mean_value","title":"<code>mean_value: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Mean value of data values in each dimension included in the resource.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.min_value","title":"<code>min_value: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Minimum value of data values in each dimension included in the resource.</p> <p>Restricted to <code>UomLength</code> in the <code>Band</code> class.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.nominal_spatial_resolution","title":"<code>nominal_spatial_resolution: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Smallest distance between which separate points can be distinguished, as specified in instrument design.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.number_of_values","title":"<code>number_of_values: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>This gives the number of values used in a thematicClassification resource, e.g., the number of classes in a Land Cover Type coverage or the number of cells with data in other types of coverages.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.offset","title":"<code>offset: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The physical value corresponding to a cell value of zero.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.other_property","title":"<code>other_property: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instance of otherAttributeType that defines attributes not explicitly included in <code>CoverageType</code>.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.other_property_type","title":"<code>other_property_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of other attribute description (i.e. netcdf/variable in ncml.xsd).</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.range_element_description","title":"<code>range_element_description: Sequence[RangeElementDescription]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides the description and values of the specific range elements of a sample dimension.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.scale_factor","title":"<code>scale_factor: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Scale factor which has been applied to the cell value.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.standard_deviation","title":"<code>standard_deviation: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Standard deviation of data values in each dimension included in the resource.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.transfer_function_type","title":"<code>transfer_function_type: Optional[TransferFunctionTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of transfer function to be used when scaling a physical value for a given element.</p>"},{"location":"metadata/content/#opengis.metadata.content.SampleDimension.units","title":"<code>units: Optional[UnitOfMeasure]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Units of data in each dimension included in the resource.</p> <p>NOTE: that the type of this is <code>UnitOfMeasure</code> and that it is restricted further for the <code>Band</code> class to being of type <code>UomLength</code>.</p> <p>MANDATORY if <code>max_value</code> or <code>min_value</code> is specified.</p>"},{"location":"metadata/content/#opengis.metadata.content.TransferFunctionTypeCode","title":"<code>TransferFunctionTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Transform function to be used when scaling a physical value for a given element.</p> Source code in <code>opengis/metadata/content.py</code> <pre><code>class TransferFunctionTypeCode(Enum):\n    \"\"\"\n    Transform function to be used when scaling a physical value for a given\n    element.\n    \"\"\"\n\n    LINEAR = \"linear\"\n    \"\"\"Function used when transformation is first order polynomial.\"\"\"\n\n    LOGARITHMIC = \"logarithmic\"\n    \"\"\"Function used when transformation is logartihmic.\"\"\"\n\n    EXPONENTIAL = \"exponential\"\n    \"\"\"Function used when transformation is exponential.\"\"\"\n</code></pre>"},{"location":"metadata/content/#opengis.metadata.content.TransferFunctionTypeCode.EXPONENTIAL","title":"<code>EXPONENTIAL = 'exponential'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Function used when transformation is exponential.</p>"},{"location":"metadata/content/#opengis.metadata.content.TransferFunctionTypeCode.LINEAR","title":"<code>LINEAR = 'linear'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Function used when transformation is first order polynomial.</p>"},{"location":"metadata/content/#opengis.metadata.content.TransferFunctionTypeCode.LOGARITHMIC","title":"<code>LOGARITHMIC = 'logarithmic'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Function used when transformation is logartihmic.</p>"},{"location":"metadata/distribution/","title":"<code>distribution</code> module","text":"<p>This is the <code>distribution</code> module.</p> <p>This module contains geographic metadata structures regarding data distribution derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DataFile","title":"<code>DataFile</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of a transfer data file.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class DataFile(ABC):\n    \"\"\"Description of a transfer data file.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_name(self):\n        \"\"\"Name of the file that contains the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_description(self) -&gt; str:\n        \"\"\"Text description of the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_type(self) -&gt; str:\n        \"\"\"Format in which the data is encoded.\"\"\"\n\n    @property\n    @abstractmethod\n    def feature_types(self) -&gt; Sequence[GenericName]:\n        \"\"\"\n        Provides the list of feature types concerned by the transfer data file.\n        \"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DataFile.feature_types","title":"<code>feature_types: Sequence[GenericName]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides the list of feature types concerned by the transfer data file.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DataFile.file_description","title":"<code>file_description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Text description of the data.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DataFile.file_name","title":"<code>file_name</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the file that contains the data.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DataFile.file_type","title":"<code>file_type: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Format in which the data is encoded.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions","title":"<code>DigitalTransferOptions</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Technical means and media by which a resource is obtained from the distributor.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class DigitalTransferOptions(ABC):\n    \"\"\"\n    Technical means and media by which a resource is obtained from the\n    distributor.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def units_of_distribution(self) -&gt; Optional[str]:\n        \"\"\"\n        Tiles, layers, geographic areas, etc., in which data is available.\n\n        NOTE: units_of_distribution applies to both onLine and offLine\n        distributions.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def transfer_size(self) -&gt; Optional[float]:\n        \"\"\"\n        Estimated size of a unit in the specified transfer format, expressed\n        in megabytes.\n\n        NOTE: The transfer size is &gt; 0.0.\n\n        Domain: &gt; 0.0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def on_line(self) -&gt; Optional[Sequence[OnlineResource]]:\n        \"\"\"\n        Information about online sources from which the resource can be\n        obtained.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def off_line(self) -&gt; Optional[Sequence[Medium]]:\n        \"\"\"\n        Information about offline media on which the resource can be obtained.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def transfer_frequency(self) -&gt; Optional[timedelta]:\n        \"\"\"Rate of occurrence of distribution.\"\"\"\n\n    @property\n    @abstractmethod\n    def distribution_format(self) -&gt; Optional[Sequence[Format]]:\n        \"\"\"Format of distribution.\"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.distribution_format","title":"<code>distribution_format: Optional[Sequence[Format]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Format of distribution.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.off_line","title":"<code>off_line: Optional[Sequence[Medium]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about offline media on which the resource can be obtained.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.on_line","title":"<code>on_line: Optional[Sequence[OnlineResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about online sources from which the resource can be obtained.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.transfer_frequency","title":"<code>transfer_frequency: Optional[timedelta]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Rate of occurrence of distribution.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.transfer_size","title":"<code>transfer_size: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Estimated size of a unit in the specified transfer format, expressed in megabytes.</p> <p>NOTE: The transfer size is &gt; 0.0.</p> <p>Domain: &gt; 0.0</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.DigitalTransferOptions.units_of_distribution","title":"<code>units_of_distribution: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Tiles, layers, geographic areas, etc., in which data is available.</p> <p>NOTE: units_of_distribution applies to both onLine and offLine distributions.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distribution","title":"<code>Distribution</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the distributor of and options for obtaining the resource.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class Distribution(ABC):\n    \"\"\"\n    Information about the distributor of and options for obtaining the\n    resource.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Brief description of a set of distribution options.\"\"\"\n\n    @property\n    @abstractmethod\n    def distribution_format(self) -&gt; Optional[Sequence[Format]]:\n        \"\"\"\n        Provides the description of the format of the data to be distributed.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def distributor(self) -&gt; Optional[Sequence[Distributor]]:\n        \"\"\"Provides information about the distributor.\"\"\"\n\n    @property\n    @abstractmethod\n    def transfer_options(self) -&gt; Optional[Sequence['DigitalTransferOptions']]:\n        \"\"\"\n        Provides information about technical means and media by which a\n        resource is obtained from the distributor.\n        \"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distribution.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Brief description of a set of distribution options.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distribution.distribution_format","title":"<code>distribution_format: Optional[Sequence[Format]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides the description of the format of the data to be distributed.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distribution.distributor","title":"<code>distributor: Optional[Sequence[Distributor]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the distributor.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distribution.transfer_options","title":"<code>transfer_options: Optional[Sequence[DigitalTransferOptions]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about technical means and media by which a resource is obtained from the distributor.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distributor","title":"<code>Distributor</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the distributor.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class Distributor(ABC):\n    \"\"\"Information about the distributor.\"\"\"\n\n    @property\n    @abstractmethod\n    def distributor_contact(self) -&gt; Responsibility:\n        \"\"\"\n        Party from whom the resource may be obtained. This list need not be\n        exhaustive.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def distribution_order_process(self) -&gt; Optional[Sequence[\n        StandardOrderProcess\n    ]]:\n        \"\"\"\n        Provides information abouthowthe resource may be obtained and related\n        instructions and fee information.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def distributor_format(self) -&gt; Optional[Sequence[Format]]:\n        \"\"\"Provides information about the format used by the distributor.\"\"\"\n\n    @property\n    @abstractmethod\n    def distributor_transfer_options(self) -&gt; Optional[Sequence[\n        'DigitalTransferOptions'\n    ]]:\n        \"\"\"\n        Provides information about the technical means and media used by\n        the distributor.\n        \"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distributor.distribution_order_process","title":"<code>distribution_order_process: Optional[Sequence[StandardOrderProcess]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information abouthowthe resource may be obtained and related instructions and fee information.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distributor.distributor_contact","title":"<code>distributor_contact: Responsibility</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Party from whom the resource may be obtained. This list need not be exhaustive.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distributor.distributor_format","title":"<code>distributor_format: Optional[Sequence[Format]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the format used by the distributor.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Distributor.distributor_transfer_options","title":"<code>distributor_transfer_options: Optional[Sequence[DigitalTransferOptions]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the technical means and media used by the distributor.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format","title":"<code>Format</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of the computer language construct that specifies the representation of data objects in a record, file, message, storage device or transmission channel.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class Format(ABC):\n    \"\"\"\n    Description of the computer language construct that specifies the\n    representation of data objects in a record, file, message, storage device\n    or transmission channel.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def format_specification_citation(self) -&gt; Citation:\n        \"\"\"Citation/URL of the specification for the format.\"\"\"\n\n    @property\n    @abstractmethod\n    def amendment_number(self) -&gt; Optional[str]:\n        \"\"\"Amendment number of the format version.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_decompression_technique(self) -&gt; Optional[str]:\n        \"\"\"\n        Recommendations of algorithms or processes that can be applied to read\n        or expand resources to which compression techniques have been applied.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def medium(self) -&gt; Optional[Sequence[Medium]]:\n        \"\"\"Medium used by the format.\"\"\"\n\n    @property\n    @abstractmethod\n    def format_distributor(self) -&gt; Optional[Sequence['Distributor']]:\n        \"\"\"Provides information about the distributor of the format.\"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format.amendment_number","title":"<code>amendment_number: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Amendment number of the format version.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format.file_decompression_technique","title":"<code>file_decompression_technique: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Recommendations of algorithms or processes that can be applied to read or expand resources to which compression techniques have been applied.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format.format_distributor","title":"<code>format_distributor: Optional[Sequence[Distributor]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the distributor of the format.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format.format_specification_citation","title":"<code>format_specification_citation: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation/URL of the specification for the format.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Format.medium","title":"<code>medium: Optional[Sequence[Medium]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Medium used by the format.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium","title":"<code>Medium</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the media on which the resource can be distributed.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class Medium(ABC):\n    \"\"\"Information about the media on which the resource can be distributed.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[Citation]:\n        \"\"\"Name of the medium on which the resource can be received.\"\"\"\n\n    @property\n    @abstractmethod\n    def density(self) -&gt; Optional[float]:\n        \"\"\"\n        Density at which the data is recorded.\n\n        Domain: &gt; 0.0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def density_units(self) -&gt; Optional[str]:\n        \"\"\"Units of measure for the recording density.\"\"\"\n\n    @property\n    @abstractmethod\n    def volumes(self) -&gt; Optional[int]:\n        \"\"\"\n        Number of items in the media identified.\n\n        Domain: &gt; 0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def medium_format(self) -&gt; Optional[Sequence[MediumFormatCode]]:\n        \"\"\"Method used to write to the medium.\"\"\"\n\n    @property\n    @abstractmethod\n    def medium_note(self) -&gt; Optional[str]:\n        \"\"\"\n        Description of other limitations or requirements for using the medium.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Optional[Identifier]:\n        \"\"\"Unique identifier for an instance of the `Medium`.\"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.density","title":"<code>density: Optional[float]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Density at which the data is recorded.</p> <p>Domain: &gt; 0.0</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.density_units","title":"<code>density_units: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Units of measure for the recording density.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.identifier","title":"<code>identifier: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Unique identifier for an instance of the <code>Medium</code>.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.medium_format","title":"<code>medium_format: Optional[Sequence[MediumFormatCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Method used to write to the medium.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.medium_note","title":"<code>medium_note: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of other limitations or requirements for using the medium.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.name","title":"<code>name: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the medium on which the resource can be received.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.Medium.volumes","title":"<code>volumes: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number of items in the media identified.</p> <p>Domain: &gt; 0</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode","title":"<code>MediumFormatCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Method used to write to the medium.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class MediumFormatCode(Enum):\n    \"\"\"Method used to write to the medium.\"\"\"\n\n    CPIO = \"cpio\"\n    \"\"\"Copy In / Out (UNIX file format and command).\"\"\"\n\n    TAR = \"tar\"\n    \"\"\"Tape Archive.\"\"\"\n\n    HIGH_SIERRA = \"highSierra\"\n    \"\"\"High sierra file system.\"\"\"\n\n    ISO_9660 = \"iso9660\"\n    \"\"\"Information processing - volume and file structure of CD-ROM.\"\"\"\n\n    ISO_9660_ROCK_RIDGE = \"iso9660RockRidge\"\n    \"\"\"Rock ridge interchange protocol (UNIX).\"\"\"\n\n    ISO_9660_APPLE_HFS = \"iso9660AppleHFS\"\n    \"\"\"Hierarchical file system (Macintosh).\"\"\"\n\n    UDF = \"udf\"\n    \"\"\"Universal disk format.\"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.CPIO","title":"<code>CPIO = 'cpio'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Copy In / Out (UNIX file format and command).</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.HIGH_SIERRA","title":"<code>HIGH_SIERRA = 'highSierra'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>High sierra file system.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.ISO_9660","title":"<code>ISO_9660 = 'iso9660'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information processing - volume and file structure of CD-ROM.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.ISO_9660_APPLE_HFS","title":"<code>ISO_9660_APPLE_HFS = 'iso9660AppleHFS'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Hierarchical file system (Macintosh).</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.ISO_9660_ROCK_RIDGE","title":"<code>ISO_9660_ROCK_RIDGE = 'iso9660RockRidge'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rock ridge interchange protocol (UNIX).</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.TAR","title":"<code>TAR = 'tar'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tape Archive.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.MediumFormatCode.UDF","title":"<code>UDF = 'udf'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Universal disk format.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess","title":"<code>StandardOrderProcess</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Common ways in which the resource may be obtained or received, and related instructions and fee information.</p> Source code in <code>opengis/metadata/distribution.py</code> <pre><code>class StandardOrderProcess(ABC):\n    \"\"\"\n    Common ways in which the resource may be obtained or received, and related\n    instructions and fee information.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def fees(self) -&gt; Optional[str]:\n        \"\"\"\n        Fees and terms for retrieving the resource. Include monetary units\n        (as specified in ISO 4217).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def planned_available_date_time(self) -&gt; Optional[datetime]:\n        \"\"\"Date and time when the resource will be available.\"\"\"\n\n    @property\n    @abstractmethod\n    def ordering_instructions(self) -&gt; Optional[str]:\n        \"\"\"\n        General instructions, terms and services provided by the distributor.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def turnaround(self) -&gt; Optional[str]:\n        \"\"\"Typical turnaround time for the filling of an order.\"\"\"\n\n    @property\n    @abstractmethod\n    def order_options_type(self) -&gt; Optional[RecordType]:\n        \"\"\"Description of the order options record.\"\"\"\n\n    @property\n    @abstractmethod\n    def order_options(self) -&gt; Optional[Record]:\n        \"\"\"Request/purchase choices.\"\"\"\n</code></pre>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.fees","title":"<code>fees: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Fees and terms for retrieving the resource. Include monetary units (as specified in ISO 4217).</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.order_options","title":"<code>order_options: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Request/purchase choices.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.order_options_type","title":"<code>order_options_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the order options record.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.ordering_instructions","title":"<code>ordering_instructions: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General instructions, terms and services provided by the distributor.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.planned_available_date_time","title":"<code>planned_available_date_time: Optional[datetime]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date and time when the resource will be available.</p>"},{"location":"metadata/distribution/#opengis.metadata.distribution.StandardOrderProcess.turnaround","title":"<code>turnaround: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Typical turnaround time for the filling of an order.</p>"},{"location":"metadata/extension/","title":"<code>extension</code> module","text":"<p>This is the <code>extension</code> module.</p> <p>This module contains geographic metadata structures for metadata elements that are not contained in the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation","title":"<code>ApplicationSchemaInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the application schema used to build the dataset.</p> Source code in <code>opengis/metadata/extension.py</code> <pre><code>class ApplicationSchemaInformation(ABC):\n    \"\"\"Information about the application schema used to build the dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Citation:\n        \"\"\"Name of the application schema used.\"\"\"\n\n    @property\n    @abstractmethod\n    def schema_language(self) -&gt; str:\n        \"\"\"Identification of the schema language used.\"\"\"\n\n    @property\n    @abstractmethod\n    def constraint_language(self) -&gt; str:\n        \"\"\"Formal language used in Application Schema.\"\"\"\n\n    @property\n    @abstractmethod\n    def schema_ascii(self) -&gt; Optional[str]:\n        \"\"\"Full application schema given as an ASCII file.\"\"\"\n\n    @property\n    @abstractmethod\n    def graphics_file(self) -&gt; Optional[OnlineResource]:\n        \"\"\"Full application schema given as a graphics file.\"\"\"\n\n    @property\n    @abstractmethod\n    def software_development_file(self) -&gt; Optional[OnlineResource]:\n        \"\"\"Full application schema given as a software development file.\"\"\"\n\n    @property\n    @abstractmethod\n    def software_development_file_format(self) -&gt; Optional[str]:\n        \"\"\"\n        Software dependent format used for the application schema software\n        dependent file.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.constraint_language","title":"<code>constraint_language: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Formal language used in Application Schema.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.graphics_file","title":"<code>graphics_file: Optional[OnlineResource]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Full application schema given as a graphics file.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.name","title":"<code>name: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the application schema used.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.schema_ascii","title":"<code>schema_ascii: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Full application schema given as an ASCII file.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.schema_language","title":"<code>schema_language: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of the schema language used.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.software_development_file","title":"<code>software_development_file: Optional[OnlineResource]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Full application schema given as a software development file.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ApplicationSchemaInformation.software_development_file_format","title":"<code>software_development_file_format: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Software dependent format used for the application schema software dependent file.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode","title":"<code>DatatypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Datatype of element or entity.</p> Source code in <code>opengis/metadata/extension.py</code> <pre><code>class DatatypeCode(Enum):\n    \"\"\"Datatype of element or entity.\"\"\"\n\n    CLASS = \"class\"\n    \"\"\"\n    Descriptor of a set of objects that share the same attributes, operations,\n    methods, relationships, and behaviour.\n    \"\"\"\n\n    CODE_LIST = \"codelist\"\n    \"\"\"\n    Flexible enumeration useful for expressing a long list of values, can be\n    extended.\n    \"\"\"\n\n    ENUMERATION = \"enumeration\"\n    \"\"\"\n    Data type whose instances form a list of named literal values, not\n    extendable.\n    \"\"\"\n\n    CODE_LIST_ELEMENT = \"codelistElement\"\n    \"\"\"Permissible value for a codelist or enumeration.\"\"\"\n\n    ABSTRACT_CLASS = \"abstractClass\"\n    \"\"\"Class that cannot be directly instantiated\"\"\"\n\n    AGGREGATE_CLASS = \"aggregateClass\"\n    \"\"\"\n    Class that is composed of classes it is connected to by an aggregate\n    relationship.\n    \"\"\"\n\n    SPECIFIED_CLASS = \"specifiedClass\"\n    \"\"\"Subclass that may be substituted for its superclass.\"\"\"\n\n    DATATYPE_CLASS = \"datatypeClass\"\n    \"\"\"\n    Class  with few or no operations whose primary purpose is to hold the\n    abstract state of another class for transmittal, storage, encoding, or\n    persistent storage.\n    \"\"\"\n\n    INTERFACE_CLASS = \"interfaceClass\"\n    \"\"\"\n    Named set of operations that characterize the bahaviour of an element.\n    \"\"\"\n\n    UNION_CLASS = \"unionClass\"\n    \"\"\"Class describing a selection of one of the specified types.\"\"\"\n\n    META_CLASS = \"metaClass\"\n    \"\"\"Class whose instances are classes.\"\"\"\n\n    TYPE_CLASS = \"typeClass\"\n    \"\"\"\n    Class used for specification of a domain of instances (objects), together\n    with the operations applicable to the objects. A type may have attributes\n    and associations.\n    \"\"\"\n\n    CHARACTER_STRING = \"characterString\"\n    \"\"\"Textual infromation.\"\"\"\n\n    INTEGER = \"integer\"\n    \"\"\"Numerical field.\"\"\"\n\n    ASSOCIATION = \"association\"\n    \"\"\"\n    Semantic relationship between two classes that involves connections among\n    their instances.\n    \"\"\"\n</code></pre>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.ABSTRACT_CLASS","title":"<code>ABSTRACT_CLASS = 'abstractClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class that cannot be directly instantiated</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.AGGREGATE_CLASS","title":"<code>AGGREGATE_CLASS = 'aggregateClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class that is composed of classes it is connected to by an aggregate relationship.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.ASSOCIATION","title":"<code>ASSOCIATION = 'association'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Semantic relationship between two classes that involves connections among their instances.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.CHARACTER_STRING","title":"<code>CHARACTER_STRING = 'characterString'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Textual infromation.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.CLASS","title":"<code>CLASS = 'class'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Descriptor of a set of objects that share the same attributes, operations, methods, relationships, and behaviour.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.CODE_LIST","title":"<code>CODE_LIST = 'codelist'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Flexible enumeration useful for expressing a long list of values, can be extended.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.CODE_LIST_ELEMENT","title":"<code>CODE_LIST_ELEMENT = 'codelistElement'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Permissible value for a codelist or enumeration.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.DATATYPE_CLASS","title":"<code>DATATYPE_CLASS = 'datatypeClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class  with few or no operations whose primary purpose is to hold the abstract state of another class for transmittal, storage, encoding, or persistent storage.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.ENUMERATION","title":"<code>ENUMERATION = 'enumeration'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Data type whose instances form a list of named literal values, not extendable.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.INTEGER","title":"<code>INTEGER = 'integer'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Numerical field.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.INTERFACE_CLASS","title":"<code>INTERFACE_CLASS = 'interfaceClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Named set of operations that characterize the bahaviour of an element.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.META_CLASS","title":"<code>META_CLASS = 'metaClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class whose instances are classes.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.SPECIFIED_CLASS","title":"<code>SPECIFIED_CLASS = 'specifiedClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Subclass that may be substituted for its superclass.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.TYPE_CLASS","title":"<code>TYPE_CLASS = 'typeClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class used for specification of a domain of instances (objects), together with the operations applicable to the objects. A type may have attributes and associations.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.DatatypeCode.UNION_CLASS","title":"<code>UNION_CLASS = 'unionClass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Class describing a selection of one of the specified types.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation","title":"<code>ExtendedElementInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>New metadata element, not found in ISO 19115, which is required to describe geographic data.</p> Source code in <code>opengis/metadata/extension.py</code> <pre><code>class ExtendedElementInformation(ABC):\n    \"\"\"\n    New metadata element, not found in ISO 19115, which is required to\n    describe geographic data.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[str]:\n        \"\"\"\n        Name of the extended metadata element.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def definition(self) -&gt; str:\n        \"\"\"Definition of the extended element.\"\"\"\n\n    @property\n    @abstractmethod\n    def obligation(self) -&gt; Optional[ObligationCode]:\n        \"\"\"\n        Obligation of the extended element.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def condition(self) -&gt; Optional[str]:\n        \"\"\"\n        Condition under which the extended element is mandatory.\n\n        MANDATORY: if `obligation` == .\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def data_type(self) -&gt; DatatypeCode:\n        \"\"\"\n        Code which identifies the kind of value provided in the extended\n        element.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def maximum_occurrence(self) -&gt; Optional[int]:\n        \"\"\"\n        Maximum occurrence of the extended element.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def domain_value(self) -&gt; Optional[str]:\n        \"\"\"\n        Valid values that can be assigned to the extended element.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def parent_entity(self) -&gt; Sequence[str]:\n        \"\"\"\n        Name of the metadata entity(s) under which this extended metadata\n        element may appear. The name(s) may be standard metadata element(s) or\n        other extended metadata element(s).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def rule(self) -&gt; str:\n        \"\"\"\n        Specifies how the extended element relates to other existing elements\n        and entities.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def rationale(self) -&gt; Optional[str]:\n        \"\"\"Reason for creating the extended element.\"\"\"\n\n    @property\n    @abstractmethod\n    def source(self) -&gt; Sequence[Responsibility]:\n        \"\"\"Name of the person or organisation creating the extended element.\"\"\"\n\n    @property\n    @abstractmethod\n    def concept_name(self) -&gt; Optional[str]:\n        \"\"\"\n        The name of the item.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def code(self) -&gt; Optional[str]:\n        \"\"\"Language neutral identifier.\n\n        MANDATORY: if `data_type` != CODE_LIST and `datatype` != ENUMERATION\n            and `data_type` != CODE_LIST_ELEMENT.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.code","title":"<code>code: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Language neutral identifier.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.concept_name","title":"<code>concept_name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name of the item.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.condition","title":"<code>condition: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Condition under which the extended element is mandatory.</p> <p>MANDATORY: if <code>obligation</code> == .</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.data_type","title":"<code>data_type: DatatypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code which identifies the kind of value provided in the extended element.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.definition","title":"<code>definition: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Definition of the extended element.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.domain_value","title":"<code>domain_value: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Valid values that can be assigned to the extended element.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.maximum_occurrence","title":"<code>maximum_occurrence: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maximum occurrence of the extended element.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.name","title":"<code>name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the extended metadata element.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.obligation","title":"<code>obligation: Optional[ObligationCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Obligation of the extended element.</p> if <code>data_type</code> != CODE_LIST and <code>datatype</code> != ENUMERATION <p>and <code>data_type</code> != CODE_LIST_ELEMENT.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.parent_entity","title":"<code>parent_entity: Sequence[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the metadata entity(s) under which this extended metadata element may appear. The name(s) may be standard metadata element(s) or other extended metadata element(s).</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.rationale","title":"<code>rationale: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reason for creating the extended element.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.rule","title":"<code>rule: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Specifies how the extended element relates to other existing elements and entities.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ExtendedElementInformation.source","title":"<code>source: Sequence[Responsibility]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the person or organisation creating the extended element.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.MetadataExtensionInformation","title":"<code>MetadataExtensionInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information describing metadata extensions.</p> Source code in <code>opengis/metadata/extension.py</code> <pre><code>class MetadataExtensionInformation(ABC):\n    \"\"\"Information describing metadata extensions.\"\"\"\n\n    @property\n    @abstractmethod\n    def extension_on_line_resource(self) -&gt; Optional[OnlineResource]:\n        \"\"\"\n        Information about on-line sources containing the community profile\n        name and the extended metadata elements and information for all new\n        metadata elements about on-line sources containing the community\n        profile name, the extended metadata elements and information about all\n        new metadata elements.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def extended_element_information(self) -&gt; Sequence[\n        ExtendedElementInformation\n    ]:\n        \"\"\"\n        Provides information about a new metadata element, not found\n        in ISO 19115, which is required to describe the resource.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extension/#opengis.metadata.extension.MetadataExtensionInformation.extended_element_information","title":"<code>extended_element_information: Sequence[ExtendedElementInformation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about a new metadata element, not found in ISO 19115, which is required to describe the resource.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.MetadataExtensionInformation.extension_on_line_resource","title":"<code>extension_on_line_resource: Optional[OnlineResource]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about on-line sources containing the community profile name and the extended metadata elements and information for all new metadata elements about on-line sources containing the community profile name, the extended metadata elements and information about all new metadata elements.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ObligationCode","title":"<code>ObligationCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Obligation of the element or entity.</p> Source code in <code>opengis/metadata/extension.py</code> <pre><code>class ObligationCode(Enum):\n    \"\"\"Obligation of the element or entity.\"\"\"\n\n    MANDATORY = \"mandatory\"\n    \"\"\"Element is always required.\"\"\"\n\n    OPTIONAL = \"optional\"\n    \"\"\"Element is not required.\"\"\"\n\n    CONDITIONAL = \"conditional\"\n    \"\"\"element is required when a specific condition is met.\"\"\"\n\n    FORBIDDEN = None\n    \"\"\"\n    The element should always be `None`. This obligation code is used only\n    when a sub-class overrides an association and force it to a `None`\n    value. An example is\n    `opengis.referencing.datum.TemporalDatum.anchor_point`.\n    \"\"\"\n</code></pre>"},{"location":"metadata/extension/#opengis.metadata.extension.ObligationCode.CONDITIONAL","title":"<code>CONDITIONAL = 'conditional'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>element is required when a specific condition is met.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ObligationCode.FORBIDDEN","title":"<code>FORBIDDEN = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The element should always be <code>None</code>. This obligation code is used only when a sub-class overrides an association and force it to a <code>None</code> value. An example is <code>opengis.referencing.datum.TemporalDatum.anchor_point</code>.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ObligationCode.MANDATORY","title":"<code>MANDATORY = 'mandatory'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Element is always required.</p>"},{"location":"metadata/extension/#opengis.metadata.extension.ObligationCode.OPTIONAL","title":"<code>OPTIONAL = 'optional'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Element is not required.</p>"},{"location":"metadata/extent/","title":"<code>extent</code> module","text":"<p>This is the <code>extent</code> module.</p> <p>This module contains geographic metadata structures regarding data extent derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.BoundingPolygon","title":"<code>BoundingPolygon</code>","text":"<p>               Bases: <code>GeographicExtent</code></p> <p>Encosing geometric onject which locates the resource, expressed as a set of (x,y) coordinate(s).</p> <p>NOTE 1: If a polygon is used it should be closed (i.e. the last point replicates the first point).</p> <p>NOTE 2: This type can be used to represent geometries other than polygons, e.g., points, lines.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class BoundingPolygon(GeographicExtent):\n    \"\"\"\n    Encosing geometric onject which locates the resource, expressed as a set\n    of (x,y) coordinate(s).\n\n    NOTE 1: If a polygon is used it should be closed (i.e. the last point\n    replicates the first point).\n\n    NOTE 2: This type can be used to represent geometries other than polygons,\n    e.g., points, lines.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def polygon(self) -&gt; Sequence[Geometry]:\n        \"\"\"\n        Sets of points defining the bounding polygon or any other `Geometry`\n        object (point, line, or polygon).\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.BoundingPolygon.polygon","title":"<code>polygon: Sequence[Geometry]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Sets of points defining the bounding polygon or any other <code>Geometry</code> object (point, line, or polygon).</p>"},{"location":"metadata/extent/#opengis.metadata.extent.Extent","title":"<code>Extent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Extent of the resource.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class Extent(ABC):\n    \"\"\"Extent of the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"\n        Extent of the referring object.\n\n        Sets of points defining the bounding polygon or any other\n        geometry (point, line or polygon).\n\n        MANDATORY: if `geographic_element`, `temproal_element`,\n            and `vertical_element` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def geographic_element(self) -&gt; Optional[Sequence['GeographicExtent']]:\n        \"\"\"\n        Provides spatial component of the extent of the referring object.\n\n        MANDATORY: if `description`, `temproal_element`,\n            and `vertical_element` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def temporal_element(self) -&gt; Optional[Sequence['TemporalExtent']]:\n        \"\"\"\n        Provides temporal component of the extent of the referring object.\n\n        MANDATORY: if `description`, `geographic_element`,\n            and `vertical_element` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def vertical_element(self) -&gt; Optional[Sequence[VerticalExtent]]:\n        \"\"\"\n        Provides vertical component of the extent of the referring object.\n\n        MANDATORY: if `description`, `geographic_element`,\n            and `temporal_element` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.Extent.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Extent of the referring object.</p> <p>Sets of points defining the bounding polygon or any other geometry (point, line or polygon).</p> if <code>geographic_element</code>, <code>temproal_element</code>, <p>and <code>vertical_element</code> are <code>None</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.Extent.geographic_element","title":"<code>geographic_element: Optional[Sequence[GeographicExtent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides spatial component of the extent of the referring object.</p> if <code>description</code>, <code>temproal_element</code>, <p>and <code>vertical_element</code> are <code>None</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.Extent.temporal_element","title":"<code>temporal_element: Optional[Sequence[TemporalExtent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides temporal component of the extent of the referring object.</p> if <code>description</code>, <code>geographic_element</code>, <p>and <code>vertical_element</code> are <code>None</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.Extent.vertical_element","title":"<code>vertical_element: Optional[Sequence[VerticalExtent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides vertical component of the extent of the referring object.</p> if <code>description</code>, <code>geographic_element</code>, <p>and <code>temporal_element</code> are <code>None</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicBoundingBox","title":"<code>GeographicBoundingBox</code>","text":"<p>               Bases: <code>GeographicExtent</code></p> <p>Geographic position of the resource.</p> <p>NOTE: This is only an approximate reference so specifying the coordinate reference system is unnecessary and need only be provided with a precision of up to two decimal places.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class GeographicBoundingBox(GeographicExtent):\n    \"\"\"\n    Geographic position of the resource.\n\n    NOTE: This is only an approximate reference so specifying the coordinate\n    reference system is unnecessary and need only be provided with a precision\n    of up to two decimal places.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def west_bound_longitude(self) -&gt; float:\n        \"\"\"\n        Western-most coordinate of the limit of the resource extent, expressed\n        in longitude in decimal degrees (positive east).\n\n        Domain: -180.0 &lt;= West Bounding Logitude Value &lt;= 180.0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def east_bound_longitude(self) -&gt; float:\n        \"\"\"\n        Eastern-most coordinate of the limit of the resource extent, expressed\n        in longitude in decimal degrees (positive east).\n\n        Domain: -180.0 &lt;= East Bounding Logitude Value &lt;= 180.0\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def south_bound_latitude(self) -&gt; float:\n        \"\"\"\n        Southern-most coordinate of the limit of the resource extent,\n        expressed in latitude in decimal degrees (positive north).\n\n        Domain: -90.0 &lt;= South Bounding Latitude Value &lt;= 90.0;\n            South Bouding Latitude Value &lt;= North Bounding Latitude Value\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def north_bound_latitude(self) -&gt; float:\n        \"\"\"\n        Northern-most, coordinate of the limit of the resource extent\n        expressed in latitude in decimal degrees (positive north).\n\n        Domain: -90.0 &lt;= North Bounding Latitude Value &lt;= 90.0;\n            North Bouding Latitude Value &gt;= South Bounding Latitude Value\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicBoundingBox.east_bound_longitude","title":"<code>east_bound_longitude: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Eastern-most coordinate of the limit of the resource extent, expressed in longitude in decimal degrees (positive east).</p> <p>Domain: -180.0 &lt;= East Bounding Logitude Value &lt;= 180.0</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicBoundingBox.north_bound_latitude","title":"<code>north_bound_latitude: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Northern-most, coordinate of the limit of the resource extent expressed in latitude in decimal degrees (positive north).</p> -90.0 &lt;= North Bounding Latitude Value &lt;= 90.0; <p>North Bouding Latitude Value &gt;= South Bounding Latitude Value</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicBoundingBox.south_bound_latitude","title":"<code>south_bound_latitude: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Southern-most coordinate of the limit of the resource extent, expressed in latitude in decimal degrees (positive north).</p> -90.0 &lt;= South Bounding Latitude Value &lt;= 90.0; <p>South Bouding Latitude Value &lt;= North Bounding Latitude Value</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicBoundingBox.west_bound_longitude","title":"<code>west_bound_longitude: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Western-most coordinate of the limit of the resource extent, expressed in longitude in decimal degrees (positive east).</p> <p>Domain: -180.0 &lt;= West Bounding Logitude Value &lt;= 180.0</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicDescription","title":"<code>GeographicDescription</code>","text":"<p>               Bases: <code>GeographicExtent</code></p> <p>Description of the geographic area using identifiers.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class GeographicDescription(GeographicExtent):\n    \"\"\"Description of the geographic area using identifiers.\"\"\"\n\n    @property\n    @abstractmethod\n    def geographic_identifier(self) -&gt; 'Identifier':\n        \"\"\"\n        Identifier used to represent a geographic area.\n\n        NOTE: a geographic identifier as described in ISO 19112.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicDescription.geographic_identifier","title":"<code>geographic_identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier used to represent a geographic area.</p> <p>NOTE: a geographic identifier as described in ISO 19112.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicExtent","title":"<code>GeographicExtent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Spatial area of the resource.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class GeographicExtent(ABC):\n    \"\"\"Spatial area of the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent_type_code(self) -&gt; bool:\n        \"\"\"\n        Indication of whether the geographic element encompasses an area\n        covered by the data or an area where data is not present.\n\n        Default: `True`\n\n        Domain:\n            `False` = 0 = exclusion\n            `True`  = 1 = inclusion\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.GeographicExtent.extent_type_code","title":"<code>extent_type_code: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether the geographic element encompasses an area covered by the data or an area where data is not present.</p> <p>Default: <code>True</code></p> Domain <p><code>False</code> = 0 = exclusion <code>True</code>  = 1 = inclusion</p>"},{"location":"metadata/extent/#opengis.metadata.extent.SpatialTemporalExtent","title":"<code>SpatialTemporalExtent</code>","text":"<p>               Bases: <code>TemporalExtent</code></p> <p>Extent with respect to date/time and spatial boundaries.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class SpatialTemporalExtent(TemporalExtent):\n    \"\"\"Extent with respect to date/time and spatial boundaries.\"\"\"\n\n    @property\n    @abstractmethod\n    def vertical_extent(self) -&gt; VerticalExtent:\n        \"\"\"Vertical extent component.\"\"\"\n\n    @property\n    @abstractmethod\n    def spatial_extent(self) -&gt; Sequence[GeographicExtent]:\n        \"\"\"\n        Spatial extent component of a composite spatial and temporal extent.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.SpatialTemporalExtent.spatial_extent","title":"<code>spatial_extent: Sequence[GeographicExtent]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Spatial extent component of a composite spatial and temporal extent.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.SpatialTemporalExtent.vertical_extent","title":"<code>vertical_extent: VerticalExtent</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Vertical extent component.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.TemporalExtent","title":"<code>TemporalExtent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Time period covered by the content of the resource.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class TemporalExtent(ABC):\n    \"\"\"Time period covered by the content of the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; tuple[datetime, datetime]:\n        \"\"\"\n        Period for the content of the resource.\n\n        Returns a tuple with the first component being the beginning `datetime`\n        of the temporal period and the second component being the end\n        `datetime`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.TemporalExtent.extent","title":"<code>extent: tuple[datetime, datetime]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Period for the content of the resource.</p> <p>Returns a tuple with the first component being the beginning <code>datetime</code> of the temporal period and the second component being the end <code>datetime</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.VerticalExtent","title":"<code>VerticalExtent</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Vertical domain of resource.</p> Source code in <code>opengis/metadata/extent.py</code> <pre><code>class VerticalExtent(ABC):\n    \"\"\"Vertical domain of resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def minimum_value(self) -&gt; float:\n        \"\"\"Lowest vertical extent contained in the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def maximum_value(self) -&gt; float:\n        \"\"\"Highest vertical extent contained in the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def vertical_crs(self) -&gt; Optional['VerticalCRS']:\n        \"\"\"\n        Provides information about the vertical coordinate reference system\n        to which the maximum and minimum elevation values are measured.\n\n        Identifies the vertical coordinate reference system used for the\n        minimum and maximum values.\n\n        NOTE: The CRS information includes unit of measure.\n\n        MANDATORY: if vertical_crs_id is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def vertical_crs_id(self) -&gt; Optional['ReferenceSystem']:\n        \"\"\"\n        Identifies the vertical coordinate reference system used for the\n        minimum and maximum values.\n\n        MANDATORY: if vertical_crs is `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/extent/#opengis.metadata.extent.VerticalExtent.maximum_value","title":"<code>maximum_value: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Highest vertical extent contained in the resource.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.VerticalExtent.minimum_value","title":"<code>minimum_value: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Lowest vertical extent contained in the resource.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.VerticalExtent.vertical_crs","title":"<code>vertical_crs: Optional[VerticalCRS]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the vertical coordinate reference system to which the maximum and minimum elevation values are measured.</p> <p>Identifies the vertical coordinate reference system used for the minimum and maximum values.</p> <p>NOTE: The CRS information includes unit of measure.</p> <p>MANDATORY: if vertical_crs_id is <code>None</code>.</p>"},{"location":"metadata/extent/#opengis.metadata.extent.VerticalExtent.vertical_crs_id","title":"<code>vertical_crs_id: Optional[ReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifies the vertical coordinate reference system used for the minimum and maximum values.</p> <p>MANDATORY: if vertical_crs is <code>None</code>.</p>"},{"location":"metadata/identification/","title":"<code>identification</code> module","text":"<p>This is the <code>identification</code> module.</p> <p>This module contains geographic metadata structures regarding identification information codelists and common base classes derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociatedResource","title":"<code>AssociatedResource</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Associated resource information.</p> <p>NOTE: An associated resource is a dataset composed of a collection of datasets.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class AssociatedResource(ABC):\n    \"\"\"\n    Associated resource information.\n\n    NOTE: An associated resource is a dataset composed of a collection\n    of datasets.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Citation information about the associated resource.\n\n        MANDATORY: if `metadata_reference` not documented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def association_type(self) -&gt; AssociationTypeCode:\n        \"\"\"Type of relation between the resources.\"\"\"\n\n    @property\n    @abstractmethod\n    def initiative_type(self) -&gt; Optional[InitiativeTypeCode]:\n        \"\"\"\n        Type of initiative under which the associated resource was produced.\n\n        NOTE: the activity that resulted in the associated resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def metadata_reference(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Reference to the metadata of the associated resource.\n\n        MANDATORY: if `name` not documented.\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociatedResource.association_type","title":"<code>association_type: AssociationTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of relation between the resources.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociatedResource.initiative_type","title":"<code>initiative_type: Optional[InitiativeTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of initiative under which the associated resource was produced.</p> <p>NOTE: the activity that resulted in the associated resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociatedResource.metadata_reference","title":"<code>metadata_reference: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the metadata of the associated resource.</p> <p>MANDATORY: if <code>name</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociatedResource.name","title":"<code>name: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation information about the associated resource.</p> <p>MANDATORY: if <code>metadata_reference</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode","title":"<code>AssociationTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Justification for the correlation of two resources.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class AssociationTypeCode(Enum):\n    \"\"\"Justification for the correlation of two resources.\"\"\"\n\n    CROSS_REFERENCE = \"crossReference\"\n    \"\"\"Reference from one resource to another.\"\"\"\n\n    LARGER_WORK_CITATION = \"largerWorkCitation\"\n    \"\"\"Reference to a master resource of which this one is a part.\"\"\"\n\n    PART_OF_SEAMLESS_DATABASE = \"partOfSeamlessDatabase\"\n    \"\"\"Part of same structured set of data held in a computer.\"\"\"\n\n    # deprecated Removed in ISO 19115:2014.\n    # SOURCE = \"source\"\n    # \"\"\"\n    # Mapping and charting information from which the dataset content\n    # originates.\n    # \"\"\"\n\n    STEREO_MATE = \"stereoMate\"\n    \"\"\"\n    Part of a set of imagery that when used together, provides\n    three-dimensional images.\n    \"\"\"\n\n    IS_COMPOSED_OF = \"isComposedOf\"\n    \"\"\"Reference to resources that are parts of this resource.\"\"\"\n\n    COLLECTIVE_TITLE = \"collectiveTitle\"\n    \"\"\"\n    Common title for a collection of resources.\n\n    NOTE: Title identifies elements of a series collectively, combined with\n    information about what volumes are available at the source cite.\n    \"\"\"\n\n    SERIES = \"series\"\n    \"\"\"\n    Associated through a common heritage such as produced to a common product\n    specification.\n    \"\"\"\n\n    DEPENDENCY = \"dependency\"\n    \"\"\"Associated through a dependency.\"\"\"\n\n    REVISION_OF = \"revisionOf\"\n    \"\"\"Resource is a revision of associated resource.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.COLLECTIVE_TITLE","title":"<code>COLLECTIVE_TITLE = 'collectiveTitle'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Common title for a collection of resources.</p> <p>NOTE: Title identifies elements of a series collectively, combined with information about what volumes are available at the source cite.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.CROSS_REFERENCE","title":"<code>CROSS_REFERENCE = 'crossReference'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference from one resource to another.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.DEPENDENCY","title":"<code>DEPENDENCY = 'dependency'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Associated through a dependency.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.IS_COMPOSED_OF","title":"<code>IS_COMPOSED_OF = 'isComposedOf'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference to resources that are parts of this resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.LARGER_WORK_CITATION","title":"<code>LARGER_WORK_CITATION = 'largerWorkCitation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference to a master resource of which this one is a part.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.PART_OF_SEAMLESS_DATABASE","title":"<code>PART_OF_SEAMLESS_DATABASE = 'partOfSeamlessDatabase'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Part of same structured set of data held in a computer.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.REVISION_OF","title":"<code>REVISION_OF = 'revisionOf'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is a revision of associated resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.SERIES","title":"<code>SERIES = 'series'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Associated through a common heritage such as produced to a common product specification.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.AssociationTypeCode.STEREO_MATE","title":"<code>STEREO_MATE = 'stereoMate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Part of a set of imagery that when used together, provides three-dimensional images.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic","title":"<code>BrowseGraphic</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Graphic that provides an illustration of a resource/dataset</p> <p>NOTE: should include a legend for the graphic, if applicable.</p> <p>Example: A dataset, an organisation logo, security constraint, or citation graphic.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class BrowseGraphic(ABC):\n    \"\"\"\n    Graphic that provides an illustration of a resource/dataset\n\n    NOTE: should include a legend for the graphic, if applicable.\n\n    Example: A dataset, an organisation logo, security constraint, or citation\n    graphic.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def file_name(self) -&gt; str:\n        \"\"\"\n        Name of the file that contains a graphic that provides an illustration\n        of the resource/dataset.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def file_description(self) -&gt; Optional[str]:\n        \"\"\"Text description of the illustration.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_type(self) -&gt; Optional[str]:\n        \"\"\"\n        Format in which the illustration is encoded.\n\n        Example: EPS, GIF, JPEG, PBM, PS, TIFF, PDF.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def image_constraints(self) -&gt; Optional[Sequence[Constraints]]:\n        \"\"\"Restriction on access and/or use of browse graphic.\"\"\"\n\n    @property\n    @abstractmethod\n    def linkage(self) -&gt; Optional[Sequence[OnlineResource]]:\n        \"\"\"Link to browse graphic.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic.file_description","title":"<code>file_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Text description of the illustration.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic.file_name","title":"<code>file_name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the file that contains a graphic that provides an illustration of the resource/dataset.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic.file_type","title":"<code>file_type: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Format in which the illustration is encoded.</p> <p>Example: EPS, GIF, JPEG, PBM, PS, TIFF, PDF.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic.image_constraints","title":"<code>image_constraints: Optional[Sequence[Constraints]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Restriction on access and/or use of browse graphic.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.BrowseGraphic.linkage","title":"<code>linkage: Optional[Sequence[OnlineResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Link to browse graphic.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.DataIdentification","title":"<code>DataIdentification</code>","text":"<p>               Bases: <code>Identification</code></p> <p>Information required to identify a resource.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class DataIdentification(Identification):\n    \"\"\"Information required to identify a resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def default_locale(self) -&gt; Optional[str]:\n        \"\"\"\n        Language and character set used within the resource. A string\n        conforming to IETF BCP 47.\n\n        MANDATORY: if a language is used in the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_locale(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Alternate localised language(s) and character set(s) used within\n        the resource. A string conforming to IETF BCP 47.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def environment_description(self) -&gt; Optional[str]:\n        \"\"\"\n        Description of the resource in the producer's processing environment,\n        including items such as the software, the computer operating system,\n        file name, and the dataset size.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def supplemental_information(self) -&gt; Optional[str]:\n        \"\"\"Any other descriptive information about the resource.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.DataIdentification.default_locale","title":"<code>default_locale: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Language and character set used within the resource. A string conforming to IETF BCP 47.</p> <p>MANDATORY: if a language is used in the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.DataIdentification.environment_description","title":"<code>environment_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the resource in the producer's processing environment, including items such as the software, the computer operating system, file name, and the dataset size.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.DataIdentification.other_locale","title":"<code>other_locale: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Alternate localised language(s) and character set(s) used within the resource. A string conforming to IETF BCP 47.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.DataIdentification.supplemental_information","title":"<code>supplemental_information: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Any other descriptive information about the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification","title":"<code>Identification</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Basic information required to uniquely identify a resource or resources.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class Identification(ABC):\n    \"\"\"\n    Basic information required to uniquely identify a resource or resources.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Citation:\n        \"\"\"Citation for the resource(s).\"\"\"\n\n    @property\n    @abstractmethod\n    def abstract(self) -&gt; str:\n        \"\"\"Brief narrative summary of the content of the resource(s).\"\"\"\n\n    @abstractmethod\n    def purpose(self) -&gt; Optional[str]:\n        \"\"\"\n        Summary of the intentions with which the resource(s) was developed.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def credit(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"Recognition of those who contributed to the resource(s).\"\"\"\n\n    @property\n    @abstractmethod\n    def status(self) -&gt; Optional[Sequence[ProgressCode]]:\n        \"\"\"Status of the resource(s).\"\"\"\n\n    @property\n    @abstractmethod\n    def point_of_contact(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Identification of, and means of communication with, person(s) and\n        organisation(s) associated with the resource(s).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def spatial_representation_type(self) -&gt; Optional[Sequence[\n        SpatialRepresentationTypeCode\n    ]]:\n        \"\"\"Method used to spatially represent geographic information.\"\"\"\n\n    @property\n    @abstractmethod\n    def spatial_resolution(self) -&gt; Optional[Sequence[Resolution]]:\n        \"\"\"\n        Factor which provides a general understanding of the density of\n        spatial data in the resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def temporal_resolution(self) -&gt; Optional[Sequence[timedelta]]:\n        \"\"\"Smallest resolvable temporal period in a resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def topic_category(self) -&gt; Optional[Sequence[TopicCategoryCode]]:\n        \"\"\"\n        Main theme(s) of the resource.\n\n        MANDATORY: if `Metadata.metadata_scope.resource_scope` == 'dataset'\n            OR `Metadata.metadata_scope.resource_scope` == 'series'.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Sequence[Extent]]:\n        \"\"\"\n        Spatial and temporal extent of the resource.\n\n        MANDATORY: if `Metadata.metadata_scope.resource_scope` == 'dataset'\n            then `extent.geographic_element.GeographicBoundingBox`\n            or  `extent.geographic_element.Geographicdescription` is required.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def additional_documentation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Other documentation associated with the resource, e.g.,\n        Related articles, publications, user guides, data dictionaries.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def processing_level(self) -&gt; Optional[Identifier]:\n        \"\"\"\n        Code that identifies the level of processing in the producers coding\n        system of a resource, e.g., NOAA level 1B.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource_maintenance(self) -&gt; Optional[Sequence[\n        MaintenanceInformation\n    ]]:\n        \"\"\"\n        Information about the frequency of resource updates and the scope of\n        those updates.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def graphic_overview(self) -&gt; Optional[Sequence[BrowseGraphic]]:\n        \"\"\"\n        Graphic that illustrates the resource (should include a legend for\n        the graphic).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource_format(self) -&gt; Optional[Sequence[Format]]:\n        \"\"\"Description of the format of the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def descriptive_keywords(self) -&gt; Optional[Sequence[Keywords]]:\n        \"\"\"Category keywords, their type, and reference source.\"\"\"\n\n    @property\n    @abstractmethod\n    def resource_specific_usage(self) -&gt; Optional[Sequence[Usage]]:\n        \"\"\"\n        Basic information about specific application(s) for which the resource\n        has been or is being used by different users.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource_constraints(self) -&gt; Optional[Sequence[Constraints]]:\n        \"\"\"Information about constraints which apply to the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def associated_resource(self) -&gt; Optional[Sequence[AssociatedResource]]:\n        \"\"\"Associated resource information.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.abstract","title":"<code>abstract: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Brief narrative summary of the content of the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.additional_documentation","title":"<code>additional_documentation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Other documentation associated with the resource, e.g., Related articles, publications, user guides, data dictionaries.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.associated_resource","title":"<code>associated_resource: Optional[Sequence[AssociatedResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Associated resource information.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.citation","title":"<code>citation: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation for the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.credit","title":"<code>credit: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Recognition of those who contributed to the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.descriptive_keywords","title":"<code>descriptive_keywords: Optional[Sequence[Keywords]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Category keywords, their type, and reference source.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.extent","title":"<code>extent: Optional[Sequence[Extent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Spatial and temporal extent of the resource.</p> if <code>Metadata.metadata_scope.resource_scope</code> == 'dataset' <p>then <code>extent.geographic_element.GeographicBoundingBox</code> or  <code>extent.geographic_element.Geographicdescription</code> is required.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.graphic_overview","title":"<code>graphic_overview: Optional[Sequence[BrowseGraphic]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Graphic that illustrates the resource (should include a legend for the graphic).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.point_of_contact","title":"<code>point_of_contact: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of, and means of communication with, person(s) and organisation(s) associated with the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.processing_level","title":"<code>processing_level: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code that identifies the level of processing in the producers coding system of a resource, e.g., NOAA level 1B.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.resource_constraints","title":"<code>resource_constraints: Optional[Sequence[Constraints]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about constraints which apply to the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.resource_format","title":"<code>resource_format: Optional[Sequence[Format]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the format of the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.resource_maintenance","title":"<code>resource_maintenance: Optional[Sequence[MaintenanceInformation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the frequency of resource updates and the scope of those updates.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.resource_specific_usage","title":"<code>resource_specific_usage: Optional[Sequence[Usage]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Basic information about specific application(s) for which the resource has been or is being used by different users.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.spatial_representation_type","title":"<code>spatial_representation_type: Optional[Sequence[SpatialRepresentationTypeCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Method used to spatially represent geographic information.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.spatial_resolution","title":"<code>spatial_resolution: Optional[Sequence[Resolution]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Factor which provides a general understanding of the density of spatial data in the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.status","title":"<code>status: Optional[Sequence[ProgressCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Status of the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.temporal_resolution","title":"<code>temporal_resolution: Optional[Sequence[timedelta]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Smallest resolvable temporal period in a resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.topic_category","title":"<code>topic_category: Optional[Sequence[TopicCategoryCode]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Main theme(s) of the resource.</p> if <code>Metadata.metadata_scope.resource_scope</code> == 'dataset' <p>OR <code>Metadata.metadata_scope.resource_scope</code> == 'series'.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Identification.purpose","title":"<code>purpose()</code>  <code>abstractmethod</code>","text":"<p>Summary of the intentions with which the resource(s) was developed.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>@abstractmethod\ndef purpose(self) -&gt; Optional[str]:\n    \"\"\"\n    Summary of the intentions with which the resource(s) was developed.\n    \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode","title":"<code>InitiativeTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Type of aggregation activity in which resources are related.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class InitiativeTypeCode(Enum):\n    \"\"\"Type of aggregation activity in which resources are related.\"\"\"\n\n    CAMPAIGN = \"campaign\"\n    \"\"\"Series of organized planned actions.\"\"\"\n\n    COLLECTION = \"collection\"\n    \"\"\"Accumulation of resources assembled for a specific purpose.\"\"\"\n\n    EXERCISE = \"exercise\"\n    \"\"\"Specific performance of a function or group of functions.\"\"\"\n\n    EXPERIMENT = \"experiment\"\n    \"\"\"Process designed to find if something is effective or valid.\"\"\"\n\n    INVESTIGATION = \"investigation\"\n    \"\"\"Search or systematic inquiry.\"\"\"\n\n    MISSION = \"mission\"\n    \"\"\"Specific operation of a data collection system.\"\"\"\n\n    SENSOR = \"sensor\"\n    \"\"\"Device or piece of equipment which detects or records.\"\"\"\n\n    OPERATION = \"operation\"\n    \"\"\"Action that is part of a series of actions.\"\"\"\n\n    PLATFORM = \"platform\"\n    \"\"\"Vehicle or other support base that holds a sensor.\"\"\"\n\n    PROCESS = \"process\"\n    \"\"\"Method of doing something involving a number of steps.\"\"\"\n\n    PROGRAM = \"program\"\n    \"\"\"Specific planned activity.\"\"\"\n\n    PROJECT = \"project\"\n    \"\"\"Organized undertaking, research, or development.\"\"\"\n\n    STUDY = \"study\"\n    \"\"\"Examination or investigation.\"\"\"\n\n    TASK = \"task\"\n    \"\"\"Piece of work.\"\"\"\n\n    TRIAL = \"trial\"\n    \"\"\"Process of testing to discover or demonstrate something.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.CAMPAIGN","title":"<code>CAMPAIGN = 'campaign'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Series of organized planned actions.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.COLLECTION","title":"<code>COLLECTION = 'collection'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Accumulation of resources assembled for a specific purpose.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.EXERCISE","title":"<code>EXERCISE = 'exercise'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specific performance of a function or group of functions.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.EXPERIMENT","title":"<code>EXPERIMENT = 'experiment'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Process designed to find if something is effective or valid.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.INVESTIGATION","title":"<code>INVESTIGATION = 'investigation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Search or systematic inquiry.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.MISSION","title":"<code>MISSION = 'mission'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specific operation of a data collection system.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.OPERATION","title":"<code>OPERATION = 'operation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Action that is part of a series of actions.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.PLATFORM","title":"<code>PLATFORM = 'platform'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Vehicle or other support base that holds a sensor.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.PROCESS","title":"<code>PROCESS = 'process'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Method of doing something involving a number of steps.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.PROGRAM","title":"<code>PROGRAM = 'program'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Specific planned activity.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.PROJECT","title":"<code>PROJECT = 'project'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Organized undertaking, research, or development.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.SENSOR","title":"<code>SENSOR = 'sensor'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Device or piece of equipment which detects or records.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.STUDY","title":"<code>STUDY = 'study'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Examination or investigation.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.TASK","title":"<code>TASK = 'task'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Piece of work.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.InitiativeTypeCode.TRIAL","title":"<code>TRIAL = 'trial'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Process of testing to discover or demonstrate something.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordClass","title":"<code>KeywordClass</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Specification of a class to categorize keywords in a domain-specific vocabulary that has a binding to a formal ontology.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class KeywordClass(ABC):\n    \"\"\"\n    Specification of a class to categorize keywords in a domain-specific\n    vocabulary that has a binding to a formal ontology.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def class_name(self) -&gt; str:\n        \"\"\"\n        Character string to label the keyword category in natural language.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def concept_identifier(self) -&gt; Optional[str]:\n        \"\"\"\n        URI (as a string) of concept in ontology specified by the ontology\n        attribute; this concept is labeled by the className:\n        CharacterString.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def ontology(self) -&gt; Citation:\n        \"\"\"\n        A reference that binds the keyword class to a formal conceptualization\n        of a knowledge domain for use in semantic processing NOTE: Keywords in\n        the associated `Keywords` keyword list must be within the scope of\n        this ontology.\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordClass.class_name","title":"<code>class_name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Character string to label the keyword category in natural language.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordClass.concept_identifier","title":"<code>concept_identifier: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>URI (as a string) of concept in ontology specified by the ontology attribute; this concept is labeled by the className: CharacterString.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordClass.ontology","title":"<code>ontology: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A reference that binds the keyword class to a formal conceptualization of a knowledge domain for use in semantic processing NOTE: Keywords in the associated <code>Keywords</code> keyword list must be within the scope of this ontology.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode","title":"<code>KeywordTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Methods used to group similar keywords.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class KeywordTypeCode(Enum):\n    \"\"\"Methods used to group similar keywords.\"\"\"\n\n    DISCIPLINE = \"discipline\"\n    \"\"\"Keyword identifies a branch of instruction or specialized learning.\"\"\"\n\n    PLACE = \"place\"\n    \"\"\"Keyword identifies a location.\"\"\"\n\n    STRATUM = \"stratum\"\n    \"\"\"\n    Keyword identifies the layer(s) of any deposited substance or levels\n    within an ordered system.\n    \"\"\"\n\n    TEMPORAL = \"temporal\"\n    \"\"\"Keyword identifies a time period related to the resource.\"\"\"\n\n    THEME = \"theme\"\n    \"\"\"Keyword identifies a particular subject or topic.\"\"\"\n\n    DATA_CENTRE = \"dataCentre\"\n    \"\"\"\n    Keyword identifies a repository or archive that manages and\n    distributes data.\n    \"\"\"\n\n    FEATURE_TYPE = \"featureType\"\n    \"\"\"\n    Keyword identifies a resource containing or about a collection of feature\n    instances with common characteristics.\n    \"\"\"\n\n    INSTRUMENT = \"instrument\"\n    \"\"\"\n    Keyword identifies a device used to measure or compare physical properties.\n    \"\"\"\n\n    PLATFORM = \"platform\"\n    \"\"\"Keyword identifies a structure upon which an instrument is mounted.\"\"\"\n\n    PROCESS = \"process\"\n    \"\"\"Keyword identifies a series of actions or natural occurrences.\"\"\"\n\n    PROJECT = \"project\"\n    \"\"\"\n    Keyword identifies an endeavour undertaken to create or modify a product\n    or service.\n    \"\"\"\n\n    SERVICE = \"service\"\n    \"\"\"\n    Keyword identifies an activity carried out by one party for the benefit\n    of another.\n    \"\"\"\n\n    PRODUCT = \"product\"\n    \"\"\"Keyword identifies a type of product.\"\"\"\n\n    SUB_TOPIC_CATEGORY = \"subTopicCategory\"\n    \"\"\"\n    Refinement of a topic category for the purpose of geographic\n    data classification.\n    \"\"\"\n\n    TAXON = \"taxon\"\n    \"\"\"Keyword identifies a taxonomy of the resource.\"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.DATA_CENTRE","title":"<code>DATA_CENTRE = 'dataCentre'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a repository or archive that manages and distributes data.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.DISCIPLINE","title":"<code>DISCIPLINE = 'discipline'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a branch of instruction or specialized learning.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.FEATURE_TYPE","title":"<code>FEATURE_TYPE = 'featureType'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a resource containing or about a collection of feature instances with common characteristics.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.INSTRUMENT","title":"<code>INSTRUMENT = 'instrument'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a device used to measure or compare physical properties.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.PLACE","title":"<code>PLACE = 'place'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a location.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.PLATFORM","title":"<code>PLATFORM = 'platform'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a structure upon which an instrument is mounted.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.PROCESS","title":"<code>PROCESS = 'process'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a series of actions or natural occurrences.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.PRODUCT","title":"<code>PRODUCT = 'product'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a type of product.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.PROJECT","title":"<code>PROJECT = 'project'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies an endeavour undertaken to create or modify a product or service.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.SERVICE","title":"<code>SERVICE = 'service'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies an activity carried out by one party for the benefit of another.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.STRATUM","title":"<code>STRATUM = 'stratum'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies the layer(s) of any deposited substance or levels within an ordered system.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.SUB_TOPIC_CATEGORY","title":"<code>SUB_TOPIC_CATEGORY = 'subTopicCategory'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Refinement of a topic category for the purpose of geographic data classification.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.TAXON","title":"<code>TAXON = 'taxon'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a taxonomy of the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.TEMPORAL","title":"<code>TEMPORAL = 'temporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a time period related to the resource.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.KeywordTypeCode.THEME","title":"<code>THEME = 'theme'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Keyword identifies a particular subject or topic.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Keywords","title":"<code>Keywords</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Keywords, their type and reference source.</p> <pre><code>NOTE: When the resource\n</code></pre> <p>described is a service, one instance of <code>Keyword</code> shall refer to the service taxonomy defined in ISO 19119, 8.3).</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class Keywords(ABC):\n    \"\"\"\n    Keywords, their type and reference source.\n\n        NOTE: When the resource\n    described is a service, one instance of `Keyword` shall refer to the\n    service taxonomy defined in ISO 19119, 8.3).\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def keyword(self) -&gt; Sequence[str]:\n        \"\"\"\n        Commonly used word(s) or formalised word(s) or phrase(s) used to\n        describe the subject.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; Optional[KeywordTypeCode]:\n        \"\"\"Subject matter used to group similar keywords.\"\"\"\n\n    @property\n    @abstractmethod\n    def thesaurus_name(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Name of the formally registered thesaurus or a similar authoritative\n        source of keywords.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def keyword_class(self) -&gt; Optional[KeywordClass]:\n        \"\"\"\n        Association of an `Keywords` instance with an `KeywordClass` to\n        provide user-defined categorization of groups of keywords that extend\n        or are orthogonal to the standardized KeywordTypeCodes and are\n        associated with an ontology that allows additional semantic query\n        processing.\n\n        NOTE: The thesaurus citation specifies a collection of\n        instances from some ontology, but is not an ontology. It might be a\n        list of places that include rivers, mountains, counties and cities.\n        There might be a Laconte County, the city Laconte, the Laconte River,\n        and Mt. Laconte; when searching it is useful for the user to be able to\n        restrict the search to rivers only.\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.Keywords.keyword","title":"<code>keyword: Sequence[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Commonly used word(s) or formalised word(s) or phrase(s) used to describe the subject.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Keywords.keyword_class","title":"<code>keyword_class: Optional[KeywordClass]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Association of an <code>Keywords</code> instance with an <code>KeywordClass</code> to provide user-defined categorization of groups of keywords that extend or are orthogonal to the standardized KeywordTypeCodes and are associated with an ontology that allows additional semantic query processing.</p> <p>NOTE: The thesaurus citation specifies a collection of instances from some ontology, but is not an ontology. It might be a list of places that include rivers, mountains, counties and cities. There might be a Laconte County, the city Laconte, the Laconte River, and Mt. Laconte; when searching it is useful for the user to be able to restrict the search to rivers only.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Keywords.thesaurus_name","title":"<code>thesaurus_name: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the formally registered thesaurus or a similar authoritative source of keywords.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Keywords.type","title":"<code>type: Optional[KeywordTypeCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Subject matter used to group similar keywords.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode","title":"<code>ProgressCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Status of the resource.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class ProgressCode(Enum):\n    \"\"\"Status of the resource.\"\"\"\n\n    COMPLETED = \"completed\"\n    \"\"\"Has been completed.\"\"\"\n\n    HISTORICAL_ARCHIVE = \"historicalArchive\"\n    \"\"\"Stored in an offline storage facility.\"\"\"\n\n    OBSOLETE = \"obsolete\"\n    \"\"\"No longer relevant.\"\"\"\n\n    ON_GOING = \"onGoing\"\n    \"\"\"Continually being updated.\"\"\"\n\n    PLANNED = \"planned\"\n    \"\"\"\n    Fixed date has been established upon or by which the resource will be\n    created or updated.\n    \"\"\"\n\n    REQUIRED = \"required\"\n    \"\"\"Needs to be generated or updated.\"\"\"\n\n    UNDER_DEVELOPMENT = \"underDevelopment\"\n    \"\"\"Currently in the process of being created.\"\"\"\n\n    FINAL = \"final\"\n    \"\"\"Progress concluded and no changes will be accepted.\"\"\"\n\n    PENDING = \"pending\"\n    \"\"\"Committed to, but not yet addressed.\"\"\"\n\n    RETIRED = \"retired\"\n    \"\"\"\n    Item is no longer recommended for use. It has not been superseded\n    by another item.\n    \"\"\"\n\n    SUPERSEDED = \"superseded\"\n    \"\"\"Replaced by new.\"\"\"\n\n    TENTATIVE = \"tentative\"\n    \"\"\"Provisional changes likely before resource becomes final or complete.\"\"\"\n\n    VALID = \"valid\"\n    \"\"\"Acceptable under specific conditions.\"\"\"\n\n    ACCEPTED = \"accepted\"\n    \"\"\"Agreed to by sponsor.\"\"\"\n\n    NOT_ACCEPTED = \"notAccepted\"\n    \"\"\"Rejected by sponsor.\"\"\"\n\n    WITHDRAWN = \"withdrawn\"\n    \"\"\"Removed from consideration.\"\"\"\n\n    PROPOSED = \"proposed\"\n    \"\"\"Suggested that development needs to be undertaken.\"\"\"\n\n    DEPRECATED = \"deprecated\"\n    \"\"\"\n    Resource superseded and will become obsolete, use only\n    for historical purposes.\n    \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.ACCEPTED","title":"<code>ACCEPTED = 'accepted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Agreed to by sponsor.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.COMPLETED","title":"<code>COMPLETED = 'completed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Has been completed.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.DEPRECATED","title":"<code>DEPRECATED = 'deprecated'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource superseded and will become obsolete, use only for historical purposes.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.FINAL","title":"<code>FINAL = 'final'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Progress concluded and no changes will be accepted.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.HISTORICAL_ARCHIVE","title":"<code>HISTORICAL_ARCHIVE = 'historicalArchive'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Stored in an offline storage facility.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.NOT_ACCEPTED","title":"<code>NOT_ACCEPTED = 'notAccepted'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rejected by sponsor.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.OBSOLETE","title":"<code>OBSOLETE = 'obsolete'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>No longer relevant.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.ON_GOING","title":"<code>ON_GOING = 'onGoing'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Continually being updated.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.PENDING","title":"<code>PENDING = 'pending'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Committed to, but not yet addressed.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.PLANNED","title":"<code>PLANNED = 'planned'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Fixed date has been established upon or by which the resource will be created or updated.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.PROPOSED","title":"<code>PROPOSED = 'proposed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Suggested that development needs to be undertaken.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.REQUIRED","title":"<code>REQUIRED = 'required'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Needs to be generated or updated.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.RETIRED","title":"<code>RETIRED = 'retired'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Item is no longer recommended for use. It has not been superseded by another item.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.SUPERSEDED","title":"<code>SUPERSEDED = 'superseded'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Replaced by new.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.TENTATIVE","title":"<code>TENTATIVE = 'tentative'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Provisional changes likely before resource becomes final or complete.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.UNDER_DEVELOPMENT","title":"<code>UNDER_DEVELOPMENT = 'underDevelopment'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Currently in the process of being created.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.VALID","title":"<code>VALID = 'valid'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Acceptable under specific conditions.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.ProgressCode.WITHDRAWN","title":"<code>WITHDRAWN = 'withdrawn'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Removed from consideration.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.RepresentativeFraction","title":"<code>RepresentativeFraction</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Derived from ISO 19103 Scale where <code>denominator</code> = 1 / <code>Scale.measure</code> and <code>Scale.target_units</code> = <code>Scale.source_units</code>.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class RepresentativeFraction(ABC):\n    \"\"\"\n    Derived from ISO 19103 Scale where\n    `denominator` = 1 / `Scale.measure`\n    and `Scale.target_units` = `Scale.source_units`.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def denominator(self) -&gt; int:\n        \"\"\"\n        The number below the line in a vulgar fraction.\n\n        Domain: &gt; 0\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.RepresentativeFraction.denominator","title":"<code>denominator: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The number below the line in a vulgar fraction.</p> <p>Domain: &gt; 0</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution","title":"<code>Resolution</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Level of detail expressed as a scale factor, a distance or an angle.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class Resolution(ABC):\n    \"\"\"Level of detail expressed as a scale factor, a distance or an angle.\"\"\"\n\n    @property\n    @abstractmethod\n    def equivalent_scale(self) -&gt; Optional[RepresentativeFraction]:\n        \"\"\"\n        Level of detail expressed as the scale of a comparable hardcopy map or\n        chart.\n\n        MANDATORY: if `distance`, `vertical`, `angular_distance`,\n            or `level_of_detail` not documented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def distance(self) -&gt; Optional[Distance]:\n        \"\"\"\n        Horizontal ground sample distance.\n\n        MANDATORY: if `equivalent_scale`, `vertical`, `angular_distance`,\n            or `level_of_detail` not documented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def vertical(self) -&gt; Optional[Distance]:\n        \"\"\"\n        Vertical sampling distance.\n\n        MANDATORY: if `equivalent_scale`, `distance`, `angular_distance`,\n            or `level_of_detail` not documented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def angular_distance(self) -&gt; Optional[Angle]:\n        \"\"\"\n        Angular sampling measure.\n\n        MANDATORY: if `equivalent_scale`, `distance`, `vertical`,\n            or `level_of_detail` not documented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def level_of_detail(self) -&gt; Optional[str]:\n        \"\"\"\n        Brief textual description of the spatial resolution of the resource.\n\n        MANDATORY: if `equivalent_scale`, `distance`, `vertical`,\n            or `angular_distance` not documented.\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution.angular_distance","title":"<code>angular_distance: Optional[Angle]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Angular sampling measure.</p> if <code>equivalent_scale</code>, <code>distance</code>, <code>vertical</code>, <p>or <code>level_of_detail</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution.distance","title":"<code>distance: Optional[Distance]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Horizontal ground sample distance.</p> if <code>equivalent_scale</code>, <code>vertical</code>, <code>angular_distance</code>, <p>or <code>level_of_detail</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution.equivalent_scale","title":"<code>equivalent_scale: Optional[RepresentativeFraction]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Level of detail expressed as the scale of a comparable hardcopy map or chart.</p> if <code>distance</code>, <code>vertical</code>, <code>angular_distance</code>, <p>or <code>level_of_detail</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution.level_of_detail","title":"<code>level_of_detail: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Brief textual description of the spatial resolution of the resource.</p> if <code>equivalent_scale</code>, <code>distance</code>, <code>vertical</code>, <p>or <code>angular_distance</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Resolution.vertical","title":"<code>vertical: Optional[Distance]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Vertical sampling distance.</p> if <code>equivalent_scale</code>, <code>distance</code>, <code>angular_distance</code>, <p>or <code>level_of_detail</code> not documented.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode","title":"<code>TopicCategoryCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>High-level geographic data thematic classification to assist in the grouping and search of available geographic datasets.</p> <p>NOTE 1: Can be used to group keywords as well. Listed examples are not exhaustive.</p> <p>NOTE 2: Is is understto there are overlaps between general categories and the user is encouraged to select the one most appropriate.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class TopicCategoryCode(Enum):\n    \"\"\"\n    High-level geographic data thematic classification to assist in the\n    grouping and search of available geographic datasets.\n\n    NOTE 1: Can be used to group keywords as well. Listed examples are not\n    exhaustive.\n\n    NOTE 2: Is is understto there are overlaps between general categories and\n    the user is encouraged to select the one most appropriate.\n    \"\"\"\n\n    FARMING = \"farming\"\n    \"\"\"\n    Rearing of animals and/or cultivation of plants.\n\n    EXAMPLES: Agriculture, irrigation, aquaculture, plantations, herding,\n    pests and diseases affecting crops and livestock.\n    \"\"\"\n\n    BIOTA = \"biota\"\n    \"\"\"\n    Flora and/or fauna in natural environment.\n\n    EXAMPLES: Wildlife, vegetation, biological sciences, ecology, wilderness,\n    sealife, wetlands, habitat.\n    \"\"\"\n\n    BOUNDARIES = \"boundaries\"\n    \"\"\"\n    Legal land descriptions, maritime boundaries.\n\n    EXAMPLES: Political and administrative boundaries, territorial seas, EEZ,\n    port security zones.\n    \"\"\"\n\n    CLIMATOLOGY_METEOROLOGY_ATMOSPHERE = \"climatologyMeteorologyAtmosphere\"\n    \"\"\"\n    Processes and phenomena of the atmosphere.\n\n    EXAMPLES: Cloud cover, weather, climate, atmospheric conditions,\n    climate change, precipitation.\n    \"\"\"\n\n    ECONOMY = \"economy\"\n    \"\"\"\n    Economic activities, conditions and employment.\n\n    EXAMPLES: Production, labour, revenue, commerce, industry, tourism and\n    ecotourism, forestry, fisheries, commercial or subsistence hunting,\n    exploration and exploitation of resources such as minerals, oil and gas.\n    \"\"\"\n\n    ELEVATION = \"elevation\"\n    \"\"\"\n    Height above or below a vertical datum.\n\n    EXAMPLES: Altitude, bathymetry, digital elevation models, slope,\n    derived products.\n    \"\"\"\n\n    ENVIRONMENT = \"environment\"\n    \"\"\"\n    Environmental resources, protection and conservation.\n\n    EXAMPLES: Environmental pollution, waste storage and treatment,\n    environmental impact assessment, monitoring environmental risk,\n    nature reserves, landscape.\n    \"\"\"\n\n    GEOSCIENTIFIC_INFORMATION = \"geoscientificInformation\"\n    \"\"\"\n    Information pertaining to earth sciences.\n\n    EXAMPLES: Geophysical features and processes, geology, minerals,\n    sciences dealing with the composition, structure and origin of the\n    Earth's rocks, risks of earthquakes, volcanic activity, landslides,\n    gravity information, soils, permafrost, hydrogeology, erosion.\n    \"\"\"\n\n    HEALTH = \"health\"\n    \"\"\"\n    Health, health services, human ecology, and safety.\n\n    EXAMPLES: Disease and illness, factors affecting health, hygiene,\n    substance abuse, mental and physical health, health services.\n    \"\"\"\n\n    IMAGERY_BASE_MAPS_EARTH_COVER = \"imageryBaseMapsEarthCover\"\n    \"\"\"\n    Base maps.\n\n    EXAMPLES: Land cover, topographic maps, imagery, unclassified images,\n    annotations.\n    \"\"\"\n\n    INTELLIGENCE_MILITARY = \"intelligenceMilitary\"\n    \"\"\"\n    Military bases, structures, activities.\n\n    EXAMPLES: Barracks, training grounds, military transportation,\n    information collection.\n    \"\"\"\n\n    INLAND_WATERS = \"inlandWaters\"\n    \"\"\"\n    Inland water features, drainage systems and their characteristics.\n\n    EXAMPLES: Rivers and glaciers, salt lakes, water utilization plans, dams,\n    currents, floods, water quality, hydrologic information.\n    \"\"\"\n\n    LOCATION = \"location\"\n    \"\"\"\n    Positional information and services.\n\n    EXAMPLES: Addresses, geodetic networks, control points, postal zones and\n    services, place names.\n    \"\"\"\n\n    OCEANS = \"oceans\"\n    \"\"\"\n    Features and characteristics of salt water bodies (excluding inland waters).\n\n    EXAMPLES: Tides, tsunamis, coastal information, reefs.\n    \"\"\"\n\n    PLANNING_CADASTRE = \"planningCadastre\"\n    \"\"\"\n    Information used for appropriate actions for future use of the land.\n\n    EXAMPLES: Land use maps, zoning maps, cadastral surveys, land ownership.\n    \"\"\"\n\n    SOCIETY = \"society\"\n    \"\"\"\n    Characteristics of society and cultures.\n\n    EXAMPLES: Settlements, anthropology, archaeology, education,\n    traditional beliefs, manners and customs, demographic data,\n    recreational areas and activities, social impact assessments,\n    crime and justice, census information.\n    \"\"\"\n\n    STRUCTURE = \"structure\"\n    \"\"\"\n    Man-made construction.\n\n    EXAMPLES: Buildings, museums, churches, factories, housing, monuments,\n    shops, towers.\n    \"\"\"\n\n    TRANSPORTATION = \"transportation\"\n    \"\"\"\n    Means and aids for conveying persons and/or goods.\n\n    EXAMPLES: Roads, airports/airstrips, shipping routes, tunnels,\n    nautical charts, vehicle or vessel location, aeronautical charts,\n    railways.\n    \"\"\"\n\n    UTILITIES_COMMUNICATION = \"utilitiesCommunication\"\n    \"\"\"\n    Energy, water and waste systems and communications infrastructure\n    and services.\n\n    EXAMPLES: Hydroelectricity, geothermal, solar and nuclear sources\n    of energy, water purification and distribution, sewage collection and\n    disposal, electricity and gas distribution, data communication,\n    telecommunication, radio, communication networks.\n    \"\"\"\n\n    EXTRA_TERRESTRIAL = \"extraTerrestrial\"\n    \"\"\"Region more than 100 km above the surface of the Earth.\"\"\"\n\n    DISASTER = \"disaster\"\n    \"\"\"\n    Information related to disasters.\n\n    EXAMPLES: Site of the disaster, evacuation zone,\n    disaster-prevention facility, disaster relief activities.\n    \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.BIOTA","title":"<code>BIOTA = 'biota'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Flora and/or fauna in natural environment.</p> <p>EXAMPLES: Wildlife, vegetation, biological sciences, ecology, wilderness, sealife, wetlands, habitat.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.BOUNDARIES","title":"<code>BOUNDARIES = 'boundaries'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Legal land descriptions, maritime boundaries.</p> <p>EXAMPLES: Political and administrative boundaries, territorial seas, EEZ, port security zones.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.CLIMATOLOGY_METEOROLOGY_ATMOSPHERE","title":"<code>CLIMATOLOGY_METEOROLOGY_ATMOSPHERE = 'climatologyMeteorologyAtmosphere'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Processes and phenomena of the atmosphere.</p> <p>EXAMPLES: Cloud cover, weather, climate, atmospheric conditions, climate change, precipitation.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.DISASTER","title":"<code>DISASTER = 'disaster'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information related to disasters.</p> <p>EXAMPLES: Site of the disaster, evacuation zone, disaster-prevention facility, disaster relief activities.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.ECONOMY","title":"<code>ECONOMY = 'economy'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Economic activities, conditions and employment.</p> <p>EXAMPLES: Production, labour, revenue, commerce, industry, tourism and ecotourism, forestry, fisheries, commercial or subsistence hunting, exploration and exploitation of resources such as minerals, oil and gas.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.ELEVATION","title":"<code>ELEVATION = 'elevation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Height above or below a vertical datum.</p> <p>EXAMPLES: Altitude, bathymetry, digital elevation models, slope, derived products.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.ENVIRONMENT","title":"<code>ENVIRONMENT = 'environment'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Environmental resources, protection and conservation.</p> <p>EXAMPLES: Environmental pollution, waste storage and treatment, environmental impact assessment, monitoring environmental risk, nature reserves, landscape.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.EXTRA_TERRESTRIAL","title":"<code>EXTRA_TERRESTRIAL = 'extraTerrestrial'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Region more than 100 km above the surface of the Earth.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.FARMING","title":"<code>FARMING = 'farming'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rearing of animals and/or cultivation of plants.</p> <p>EXAMPLES: Agriculture, irrigation, aquaculture, plantations, herding, pests and diseases affecting crops and livestock.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.GEOSCIENTIFIC_INFORMATION","title":"<code>GEOSCIENTIFIC_INFORMATION = 'geoscientificInformation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information pertaining to earth sciences.</p> <p>EXAMPLES: Geophysical features and processes, geology, minerals, sciences dealing with the composition, structure and origin of the Earth's rocks, risks of earthquakes, volcanic activity, landslides, gravity information, soils, permafrost, hydrogeology, erosion.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.HEALTH","title":"<code>HEALTH = 'health'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Health, health services, human ecology, and safety.</p> <p>EXAMPLES: Disease and illness, factors affecting health, hygiene, substance abuse, mental and physical health, health services.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.IMAGERY_BASE_MAPS_EARTH_COVER","title":"<code>IMAGERY_BASE_MAPS_EARTH_COVER = 'imageryBaseMapsEarthCover'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Base maps.</p> <p>EXAMPLES: Land cover, topographic maps, imagery, unclassified images, annotations.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.INLAND_WATERS","title":"<code>INLAND_WATERS = 'inlandWaters'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Inland water features, drainage systems and their characteristics.</p> <p>EXAMPLES: Rivers and glaciers, salt lakes, water utilization plans, dams, currents, floods, water quality, hydrologic information.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.INTELLIGENCE_MILITARY","title":"<code>INTELLIGENCE_MILITARY = 'intelligenceMilitary'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Military bases, structures, activities.</p> <p>EXAMPLES: Barracks, training grounds, military transportation, information collection.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.LOCATION","title":"<code>LOCATION = 'location'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Positional information and services.</p> <p>EXAMPLES: Addresses, geodetic networks, control points, postal zones and services, place names.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.OCEANS","title":"<code>OCEANS = 'oceans'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Features and characteristics of salt water bodies (excluding inland waters).</p> <p>EXAMPLES: Tides, tsunamis, coastal information, reefs.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.PLANNING_CADASTRE","title":"<code>PLANNING_CADASTRE = 'planningCadastre'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information used for appropriate actions for future use of the land.</p> <p>EXAMPLES: Land use maps, zoning maps, cadastral surveys, land ownership.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.SOCIETY","title":"<code>SOCIETY = 'society'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Characteristics of society and cultures.</p> <p>EXAMPLES: Settlements, anthropology, archaeology, education, traditional beliefs, manners and customs, demographic data, recreational areas and activities, social impact assessments, crime and justice, census information.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.STRUCTURE","title":"<code>STRUCTURE = 'structure'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Man-made construction.</p> <p>EXAMPLES: Buildings, museums, churches, factories, housing, monuments, shops, towers.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.TRANSPORTATION","title":"<code>TRANSPORTATION = 'transportation'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Means and aids for conveying persons and/or goods.</p> <p>EXAMPLES: Roads, airports/airstrips, shipping routes, tunnels, nautical charts, vehicle or vessel location, aeronautical charts, railways.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.TopicCategoryCode.UTILITIES_COMMUNICATION","title":"<code>UTILITIES_COMMUNICATION = 'utilitiesCommunication'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Energy, water and waste systems and communications infrastructure and services.</p> <p>EXAMPLES: Hydroelectricity, geothermal, solar and nuclear sources of energy, water purification and distribution, sewage collection and disposal, electricity and gas distribution, data communication, telecommunication, radio, communication networks.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage","title":"<code>Usage</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Brief description of ways in which the resource(s) is/are currently or has been used.</p> Source code in <code>opengis/metadata/identification.py</code> <pre><code>class Usage(ABC):\n    \"\"\"\n    Brief description of ways in which the resource(s) is/are currently or has\n    been used.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def specific_usage(self) -&gt; str:\n        \"\"\"Brief description of the resource and/or resource series usage.\"\"\"\n\n    @property\n    @abstractmethod\n    def usage_date_time(self) -&gt; Optional[Sequence[datetime]]:\n        \"\"\"\n        Date and time of the first use or range of uses of the resource and/or\n        resource series.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def user_determined_limitations(self) -&gt; str:\n        \"\"\"\n        Applications, determined by the user for which the resource and/or\n        resource series is not suitable.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def user_contact_info(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Identification of and means of communicating with person(s) and\n        organisation(s) using the resource(s).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def response(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Response to the user-determined limitations, e.g., 'This has been fixed\n        in version x.'\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def additional_documentation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Publications that describe usage of data.\"\"\"\n\n    @property\n    @abstractmethod\n    def identified_issues(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Citation of a description of known issues associated with the resource\n        along with proposed solutions if available.\n        \"\"\"\n</code></pre>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.additional_documentation","title":"<code>additional_documentation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Publications that describe usage of data.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.identified_issues","title":"<code>identified_issues: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation of a description of known issues associated with the resource along with proposed solutions if available.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.response","title":"<code>response: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Response to the user-determined limitations, e.g., 'This has been fixed in version x.'</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.specific_usage","title":"<code>specific_usage: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Brief description of the resource and/or resource series usage.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.usage_date_time","title":"<code>usage_date_time: Optional[Sequence[datetime]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date and time of the first use or range of uses of the resource and/or resource series.</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.user_contact_info","title":"<code>user_contact_info: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of and means of communicating with person(s) and organisation(s) using the resource(s).</p>"},{"location":"metadata/identification/#opengis.metadata.identification.Usage.user_determined_limitations","title":"<code>user_determined_limitations: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Applications, determined by the user for which the resource and/or resource series is not suitable.</p>"},{"location":"metadata/lineage/","title":"<code>lineage</code> module","text":"<p>This is the <code>lineage</code> module.</p> <p>This module contains geographic metadata structures derived from the ISO 19115-1:2014 and ISO 19115-2:2019 international standards regarding the lineage of the data, that is how the data has changed and the sources from which it is derived.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Algorithm","title":"<code>Algorithm</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Details of the methodology by which geographic information was derived from the instrument readings.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class Algorithm(ABC):\n    \"\"\"\n    Details of the methodology by which geographic information was derived\n    from the instrument readings.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Citation:\n        \"\"\"Information identifying the algorithm and version or date.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"Information describing the algorithm used to generate the data.\"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Algorithm.citation","title":"<code>citation: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information identifying the algorithm and version or date.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Algorithm.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information describing the algorithm used to generate the data.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage","title":"<code>Lineage</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the events or source data used in constructing the data specified by the scope or lack of knowledge about lineage.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class Lineage(ABC):\n    \"\"\"\n    Information about the events or source data used in constructing the data\n    specified by the scope or lack of knowledge about lineage.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def statement(self) -&gt; Optional[str]:\n        \"\"\"\n        General explanation of the data producer's knowledge about the lineage\n        of a resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Optional[Scope]:\n        \"\"\"\n        Type of resource and/or extent to which the lineage information\n        applies.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def additional_documentation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Resource. Example: A publication that describes the whole process to\n        generate this resource, e.g., a dataset.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def process_step(self) -&gt; Optional[Sequence[ProcessStep]]:\n        \"\"\"\n        Information about events in the life of a resource specified by the\n        scope.\n\n        MANDATORY: if `statement` and `source` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def source(self) -&gt; Optional[Sequence[Source]]:\n        \"\"\"\n        Information about the source data used in creating the data specified\n        by the scope.\n\n        MANDATORY: if `statement` and `process_step` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage.additional_documentation","title":"<code>additional_documentation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Resource. Example: A publication that describes the whole process to generate this resource, e.g., a dataset.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage.process_step","title":"<code>process_step: Optional[Sequence[ProcessStep]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about events in the life of a resource specified by the scope.</p> <p>MANDATORY: if <code>statement</code> and <code>source</code> are <code>None</code>.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage.scope","title":"<code>scope: Optional[Scope]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of resource and/or extent to which the lineage information applies.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage.source","title":"<code>source: Optional[Sequence[Source]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the source data used in creating the data specified by the scope.</p> <p>MANDATORY: if <code>statement</code> and <code>process_step</code> are <code>None</code>.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Lineage.statement","title":"<code>statement: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General explanation of the data producer's knowledge about the lineage of a resource.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.NominalResolution","title":"<code>NominalResolution</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Distance between consistent parts (centre, left side, right side) of adjacent pixels.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class NominalResolution(ABC):\n    \"\"\"\n    Distance between consistent parts (centre, left side, right side) of\n    adjacent pixels.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def scanning_resolution(self) -&gt; Distance:\n        \"\"\"\n        Distance between consistent parts (centre, left side, right side)\n        of adjacent pixels in the scan plane.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def ground_resolution(self) -&gt; Distance:\n        \"\"\"\n        Distance between consistent parts (centre, left side, right side)\n        of adjacent pixels in the object space.\n        \"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.NominalResolution.ground_resolution","title":"<code>ground_resolution: Distance</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Distance between consistent parts (centre, left side, right side) of adjacent pixels in the object space.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.NominalResolution.scanning_resolution","title":"<code>scanning_resolution: Distance</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Distance between consistent parts (centre, left side, right side) of adjacent pixels in the scan plane.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter","title":"<code>ProcessParameter</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Parameter (value or resource) used in a process.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class ProcessParameter(ABC):\n    \"\"\"Parameter (value or resource) used in a process.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; MemberName:\n        \"\"\"Name/type of parameter.\"\"\"\n\n    @property\n    @abstractmethod\n    def direction(self) -&gt; ParameterDirection:\n        \"\"\"\n        Indication the parameter is an input to the process, an output,\n        or both.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Narrative explaining the role of the parameter.\"\"\"\n\n    @property\n    @abstractmethod\n    def optionality(self) -&gt; bool:\n        \"\"\"Indication the parameter is required.\"\"\"\n\n    @property\n    @abstractmethod\n    def repeatability(self) -&gt; bool:\n        \"\"\"\n        Indication if more than one value of the parameter may be provided.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def value_type(self) -&gt; Optional[RecordType]:\n        \"\"\"Data type of the value\"\"\"\n\n    @property\n    @abstractmethod\n    def value(self) -&gt; Optional[Record]:\n        \"\"\"Constant value.\"\"\"\n\n    @property\n    @abstractmethod\n    def resource(self) -&gt; Optional[Source]:\n        \"\"\"Resource to be processed.\"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Narrative explaining the role of the parameter.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.direction","title":"<code>direction: ParameterDirection</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication the parameter is an input to the process, an output, or both.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.name","title":"<code>name: MemberName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name/type of parameter.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.optionality","title":"<code>optionality: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication the parameter is required.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.repeatability","title":"<code>repeatability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication if more than one value of the parameter may be provided.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.resource","title":"<code>resource: Optional[Source]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Resource to be processed.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.value","title":"<code>value: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Constant value.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessParameter.value_type","title":"<code>value_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Data type of the value</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep","title":"<code>ProcessStep</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about an event or transformation in the life of the dataset including details of the algorithm and software used for processing.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class ProcessStep(ABC):\n    \"\"\"\n    Information about an event or transformation in the life of the dataset\n    including details of the algorithm and software used for processing.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; str:\n        \"\"\"\n        Description of the event, including related parameters or tolerances.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def rationale(self) -&gt; Optional[str]:\n        \"\"\"Requirement or purpose for the process step.\"\"\"\n\n    @property\n    @abstractmethod\n    def step_date_time(self) -&gt; Optional[datetime]:\n        \"\"\"Date, time, range or period of process step.\"\"\"\n\n    @property\n    @abstractmethod\n    def processor(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Identification of, and means of communication with, person(s) and\n        organisation(s) associated with the process step.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def reference(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Process step documentation.\"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Optional[Scope]:\n        \"\"\"Type of resource and/or extent to which the process step applies.\"\"\"\n\n    @property\n    @abstractmethod\n    def source(self) -&gt; Optional[Sequence[Source]]:\n        \"\"\"\n        Type of the resource and/or extent to which the process step applies.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def output(self) -&gt; Optional[Sequence[Source]]:\n        \"\"\"\n        Description of the product generated as a result of the process step.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def processing_information(self) -&gt; Optional[Processing]:\n        \"\"\"\n        Comprehensive information about the procedure by which the algorithm\n        was applied to derive geographic data from the raw instrument\n        measurements, such as datasets, software used, and the processing\n        environment.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def report(self) -&gt; Optional[Sequence[ProcessStepReport]]:\n        \"\"\"Report generated by the process step.\"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.description","title":"<code>description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the event, including related parameters or tolerances.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.output","title":"<code>output: Optional[Sequence[Source]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the product generated as a result of the process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.processing_information","title":"<code>processing_information: Optional[Processing]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Comprehensive information about the procedure by which the algorithm was applied to derive geographic data from the raw instrument measurements, such as datasets, software used, and the processing environment.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.processor","title":"<code>processor: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of, and means of communication with, person(s) and organisation(s) associated with the process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.rationale","title":"<code>rationale: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Requirement or purpose for the process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.reference","title":"<code>reference: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Process step documentation.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.report","title":"<code>report: Optional[Sequence[ProcessStepReport]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Report generated by the process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.scope","title":"<code>scope: Optional[Scope]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of resource and/or extent to which the process step applies.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.source","title":"<code>source: Optional[Sequence[Source]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of the resource and/or extent to which the process step applies.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStep.step_date_time","title":"<code>step_date_time: Optional[datetime]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date, time, range or period of process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStepReport","title":"<code>ProcessStepReport</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Report of what occurred during the process step.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class ProcessStepReport(ABC):\n    \"\"\"Report of what occurred during the process step.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; str:\n        \"\"\"Name of the processing report.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"Textual description of what occurred during the process step.\"\"\"\n\n    @property\n    @abstractmethod\n    def file_type(self) -&gt; Optional[str]:\n        \"\"\"Type of file that contains that processing report.\"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStepReport.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Textual description of what occurred during the process step.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStepReport.file_type","title":"<code>file_type: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of file that contains that processing report.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.ProcessStepReport.name","title":"<code>name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the processing report.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing","title":"<code>Processing</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Comprehensive information about the procedure(s), process(es) and algorithm(s) applied in the process step.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class Processing(ABC):\n    \"\"\"\n    Comprehensive information about the procedure(s), process(es) and\n    algorithm(s) applied in the process step.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Identifier:\n        \"\"\"\n        Information to identify the processing package that produced the data.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def software_reference(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Reference to document describing processing software.\"\"\"\n\n    @property\n    @abstractmethod\n    def procedure_description(self) -&gt; Optional[str]:\n        \"\"\"Additional details about the processing procedures.\"\"\"\n\n    @property\n    @abstractmethod\n    def documentation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Reference to documentation describing the processing.\"\"\"\n\n    @property\n    @abstractmethod\n    def run_time_parameters(self) -&gt; Optional[str]:\n        \"\"\"\n        Parameters to control the processing operations, entered at run time.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other_property(self) -&gt; Optional[Record]:\n        \"\"\"Instance of other property type not included in `Sensor`.\"\"\"\n\n    @property\n    @abstractmethod\n    def other_property_type(self) -&gt; Optional[RecordType]:\n        \"\"\"Type of other property description.\"\"\"\n\n    @property\n    @abstractmethod\n    def algorithm(self) -&gt; Optional[Sequence[Algorithm]]:\n        \"\"\"\n        Details of the methodology by which geographic information was derived\n        from the instrument readings.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def parameter(self) -&gt; Optional[ProcessParameter]:\n        \"\"\"Parameter(s) used in a process\"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.algorithm","title":"<code>algorithm: Optional[Sequence[Algorithm]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Details of the methodology by which geographic information was derived from the instrument readings.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.documentation","title":"<code>documentation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to documentation describing the processing.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.identifier","title":"<code>identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information to identify the processing package that produced the data.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.other_property","title":"<code>other_property: Optional[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instance of other property type not included in <code>Sensor</code>.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.other_property_type","title":"<code>other_property_type: Optional[RecordType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of other property description.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.parameter","title":"<code>parameter: Optional[ProcessParameter]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Parameter(s) used in a process</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.procedure_description","title":"<code>procedure_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Additional details about the processing procedures.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.run_time_parameters","title":"<code>run_time_parameters: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Parameters to control the processing operations, entered at run time.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Processing.software_reference","title":"<code>software_reference: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to document describing processing software.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source","title":"<code>Source</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the source resource used in creating the data specified by the scope.</p> Source code in <code>opengis/metadata/lineage.py</code> <pre><code>class Source(ABC):\n    \"\"\"\n    Information about the source resource used in creating the data specified\n    by the scope.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"\n        Detailed description of the level of the source resource.\n\n        MANDATORY: if `scope` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def source_spatial_resolution(self) -&gt; Optional[Resolution]:\n        \"\"\"\n        Level of detail expressed as a scale factor, a distance or an angle.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def source_reference_system(self) -&gt; Optional[ReferenceSystem]:\n        \"\"\"Spatial reference system used by the source resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def source_citation(self) -&gt; Optional[Citation]:\n        \"\"\"Recommended reference to be used for the source resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def source_metadata(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Identifier and link to source metadata.\"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Optional[Scope]:\n        \"\"\"\n        Type of resource and/or extent of the source.\n\n        MANDATORY: if `description` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def source_step(self) -&gt; Optional[Sequence['ProcessStep']]:\n        \"\"\"Information about process steps in which this source was used.\"\"\"\n\n    @property\n    @abstractmethod\n    def processed_level(self) -&gt; Optional[Identifier]:\n        \"\"\"Processing level of the source data.\"\"\"\n\n    @property\n    @abstractmethod\n    def resolution(self) -&gt; Optional[NominalResolution]:\n        \"\"\"\n        Distance between consistent parts (centre, left side, right side)\n        of two adjacent pixels.\n        \"\"\"\n</code></pre>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Detailed description of the level of the source resource.</p> <p>MANDATORY: if <code>scope</code> is <code>None</code>.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.processed_level","title":"<code>processed_level: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Processing level of the source data.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.resolution","title":"<code>resolution: Optional[NominalResolution]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Distance between consistent parts (centre, left side, right side) of two adjacent pixels.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.scope","title":"<code>scope: Optional[Scope]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of resource and/or extent of the source.</p> <p>MANDATORY: if <code>description</code> is <code>None</code>.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.source_citation","title":"<code>source_citation: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Recommended reference to be used for the source resource.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.source_metadata","title":"<code>source_metadata: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier and link to source metadata.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.source_reference_system","title":"<code>source_reference_system: Optional[ReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Spatial reference system used by the source resource.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.source_spatial_resolution","title":"<code>source_spatial_resolution: Optional[Resolution]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Level of detail expressed as a scale factor, a distance or an angle.</p>"},{"location":"metadata/lineage/#opengis.metadata.lineage.Source.source_step","title":"<code>source_step: Optional[Sequence[ProcessStep]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about process steps in which this source was used.</p>"},{"location":"metadata/maintenance/","title":"<code>maintenance</code> module","text":"<p>This is the <code>maintenance</code> module.</p> <p>This module contains geographic metadata structures regarding data maintenance derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode","title":"<code>MaintenanceFrequencyCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Frequency with which modifications and deletions are made to the data after it is first produced</p> Source code in <code>opengis/metadata/maintenance.py</code> <pre><code>class MaintenanceFrequencyCode(Enum):\n    \"\"\"\n    Frequency with which modifications and deletions are made to the data\n    after it is first produced\n    \"\"\"\n\n    CONTINUAL = \"continual\"\n    \"\"\"Resource is repeatedly and frequentlyupdated.\"\"\"\n\n    DAILY = \"daily\"\n    \"\"\"Resource is updated each day\"\"\"\n\n    WEEKLY = \"weekly\"\n    \"\"\"Resource is updated on a weekly basis.\"\"\"\n\n    FORTNIGHTLY = \"fortnightly\"\n    \"\"\"Resource is updated every two weeks.\"\"\"\n\n    MONTHLY = \"monthly\"\n    \"\"\"Resource is updated each month.\"\"\"\n\n    QUARTERLY = \"quarterly\"\n    \"\"\"Resource is updatedevery three months.\"\"\"\n\n    BIANNUALLY = \"biannually\"\n    \"\"\"Resource is updated twice each year.\"\"\"\n\n    ANNUALLY = \"annually\"\n    \"\"\"Resource is updated every year.\"\"\"\n\n    AS_NEEDED = \"asNeeded\"\n    \"\"\"Resource is updated as deemed necessary.\"\"\"\n\n    IRREGULAR = \"irregular\"\n    \"\"\"Resource is updated in intervals that are uneven in duration.\"\"\"\n\n    NOT_PLANNED = \"notPlanned\"\n    \"\"\"There are no plans to update the data.\"\"\"\n\n    UNKNOWN = \"unknown\"\n    \"\"\"Frequency of maintenance for the data is not known.\"\"\"\n\n    PERIODIC = \"periodic\"\n    \"\"\"Resource is updated at regular intervals.\"\"\"\n\n    SEMIMONTHLY = \"semimonthly\"\n    \"\"\"Resource is updated twice monthly.\"\"\"\n\n    BIENNIALLY = \"biennially\"\n    \"\"\"Resource is updated every two years.\"\"\"\n</code></pre>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.ANNUALLY","title":"<code>ANNUALLY = 'annually'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated every year.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.AS_NEEDED","title":"<code>AS_NEEDED = 'asNeeded'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated as deemed necessary.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.BIANNUALLY","title":"<code>BIANNUALLY = 'biannually'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated twice each year.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.BIENNIALLY","title":"<code>BIENNIALLY = 'biennially'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated every two years.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.CONTINUAL","title":"<code>CONTINUAL = 'continual'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is repeatedly and frequentlyupdated.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.DAILY","title":"<code>DAILY = 'daily'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated each day</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.FORTNIGHTLY","title":"<code>FORTNIGHTLY = 'fortnightly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated every two weeks.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.IRREGULAR","title":"<code>IRREGULAR = 'irregular'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated in intervals that are uneven in duration.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.MONTHLY","title":"<code>MONTHLY = 'monthly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated each month.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.NOT_PLANNED","title":"<code>NOT_PLANNED = 'notPlanned'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>There are no plans to update the data.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.PERIODIC","title":"<code>PERIODIC = 'periodic'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated at regular intervals.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.QUARTERLY","title":"<code>QUARTERLY = 'quarterly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updatedevery three months.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.SEMIMONTHLY","title":"<code>SEMIMONTHLY = 'semimonthly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated twice monthly.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.UNKNOWN","title":"<code>UNKNOWN = 'unknown'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Frequency of maintenance for the data is not known.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceFrequencyCode.WEEKLY","title":"<code>WEEKLY = 'weekly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Resource is updated on a weekly basis.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation","title":"<code>MaintenanceInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information about the scope and frequency of updating.</p> Source code in <code>opengis/metadata/maintenance.py</code> <pre><code>class MaintenanceInformation(ABC):\n    \"\"\"Information about the scope and frequency of updating.\"\"\"\n\n    @property\n    @abstractmethod\n    def maintenance_and_update_frequency(self) -&gt; Optional[\n        MaintenanceFrequencyCode\n    ]:\n        \"\"\"\n        Frequency with which changes and additions are made to the resource\n        after the initial resource is completed.\n\n        MANDATORY: if `user_defined_maintenance_frequency` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def maintenance_date(self) -&gt; Optional[Sequence[Date]]:\n        \"\"\"Date information associated with maintenance of resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def user_defined_maintenance_frequency(self) -&gt; Optional[timedelta]:\n        \"\"\"\n        Maintenance period other than those defined.\n\n        MANDATORY: if `user_defined_maintenance_frequency` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def maintenance_scope(self) -&gt; Optional[Sequence[Scope]]:\n        \"\"\"Information about the scope and extent of maintenance.\"\"\"\n\n    @property\n    @abstractmethod\n    def maintenance_note(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Information regarding specific requirements for maintaining the\n        resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contact(self) -&gt; Optional[Sequence[Responsibility]]:\n        \"\"\"\n        Identification of, and means of communicating with, person(s) and\n        organisation(s) with responsibility for maintaining the metadata.\n        \"\"\"\n</code></pre>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.contact","title":"<code>contact: Optional[Sequence[Responsibility]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of, and means of communicating with, person(s) and organisation(s) with responsibility for maintaining the metadata.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.maintenance_and_update_frequency","title":"<code>maintenance_and_update_frequency: Optional[MaintenanceFrequencyCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Frequency with which changes and additions are made to the resource after the initial resource is completed.</p> <p>MANDATORY: if <code>user_defined_maintenance_frequency</code> is <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.maintenance_date","title":"<code>maintenance_date: Optional[Sequence[Date]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date information associated with maintenance of resource.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.maintenance_note","title":"<code>maintenance_note: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information regarding specific requirements for maintaining the resource.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.maintenance_scope","title":"<code>maintenance_scope: Optional[Sequence[Scope]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the scope and extent of maintenance.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.MaintenanceInformation.user_defined_maintenance_frequency","title":"<code>user_defined_maintenance_frequency: Optional[timedelta]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Maintenance period other than those defined.</p> <p>MANDATORY: if <code>user_defined_maintenance_frequency</code> is <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.Scope","title":"<code>Scope</code>","text":"<p>               Bases: <code>ABC</code></p> <p>The target resource and physical extent for which information is reported. Information about the scope of the resource.</p> Source code in <code>opengis/metadata/maintenance.py</code> <pre><code>class Scope(ABC):\n    \"\"\"\n    The target resource and physical extent for which information is reported.\n    Information about the scope of the resource.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def level(self) -&gt; ScopeCode:\n        \"\"\"Description of the scope.\"\"\"\n\n    @property\n    @abstractmethod\n    def extent(self) -&gt; Optional[Sequence[Extent]]:\n        \"\"\"\n        Information about the horizontal, vertical, and temporal extent of\n        the specified resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def level_description(self) -&gt; Optional[Sequence[ScopeDescription]]:\n        \"\"\"\n        Detailed information/listing of the items specified by the level.\n        \"\"\"\n</code></pre>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.Scope.extent","title":"<code>extent: Optional[Sequence[Extent]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the horizontal, vertical, and temporal extent of the specified resource.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.Scope.level","title":"<code>level: ScopeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the scope.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.Scope.level_description","title":"<code>level_description: Optional[Sequence[ScopeDescription]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Detailed information/listing of the items specified by the level.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode","title":"<code>ScopeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Class of information to which the referencing entity applies.</p> Source code in <code>opengis/metadata/maintenance.py</code> <pre><code>class ScopeCode(Enum):\n    \"\"\"Class of information to which the referencing entity applies.\"\"\"\n\n    ATTRIBUTE = \"attribute\"\n    \"\"\"Information applies to the attribute value.\"\"\"\n\n    ATTRIBUTE_TYPE = \"attributeType\"\n    \"\"\"Information applies to the characteristic of a feature.\"\"\"\n\n    COLLECTION_HARDWARE = \"collectionHardware\"\n    \"\"\"Information applies to the collection hardware class.\"\"\"\n\n    COLLECTION_SESSION = \"collectionSession\"\n    \"\"\"Information applies to the collection session.\"\"\"\n\n    DATASET = \"dataset\"\n    \"\"\"Information applies to the dataset.\"\"\"\n\n    SERIES = \"series\"\n    \"\"\"Information applies to the series.\"\"\"\n\n    NON_GEOGRAPHIC_DATASET = \"nonGeographicDataset\"\n    \"\"\"Information applies to the non-geographic dataset.\"\"\"\n\n    DIMENSION_GROUP = \"dimensionGroup\"\n    \"\"\"Information applies to a dimension group.\"\"\"\n\n    FEATURE = \"feature\"\n    \"\"\"Information applies to a featiure.\"\"\"\n\n    FEATURE_TYPE = \"featureType\"\n    \"\"\"Information applies to a feature type.\"\"\"\n\n    PROPERTY_TYPE = \"propertyType\"\n    \"\"\"Information applies to a property type.\"\"\"\n\n    FIELD_SESSION = \"fieldSession\"\n    \"\"\"Information applies to a field session.\"\"\"\n\n    SOFTWARE = \"software\"\n    \"\"\"Information applies to a computer program or routine.\"\"\"\n\n    SERVICE = \"service\"\n    \"\"\"\n    Information applies to a capability which a service provider entity makes\n    available to s service user entity through a set of interfaces that define\n    a behaviour, such as a use case.\n    \"\"\"\n\n    MODEL = \"model\"\n    \"\"\"\n    Information applies to a copy or imitation of an existing or hypothetical\n    object.\n    \"\"\"\n\n    TILE = \"tile\"\n    \"\"\"Information applies to a tile, a spatial subset of geographic data.\"\"\"\n\n    METADATA = \"metadata\"\n    \"\"\"Information applies to metadata.\"\"\"\n\n    INITIATIVE = \"initiative\"\n    \"\"\"Information applies to an intitiative.\"\"\"\n\n    SAMPLE = \"sample\"\n    \"\"\"Information applies to a sample.\"\"\"\n\n    DOCUMENT = \"document\"\n    \"\"\"Information applies to a document.\"\"\"\n\n    REPOSITORY = \"repository\"\n    \"\"\"Information applies to a repository.\"\"\"\n\n    AGGREGATE = \"aggregate\"\n    \"\"\"Information applies to an aggregate resource.\"\"\"\n\n    PRODUCT = \"product\"\n    \"\"\"Metadata describing an ISO 19131 data product specification.\"\"\"\n\n    COLLECTION = \"collection\"\n    \"\"\"Information applies to an unstructured set.\"\"\"\n\n    COVERAGE = \"coverage\"\n    \"\"\"Information applies to a coverage.\"\"\"\n\n    APPLICATION = \"application\"\n    \"\"\"\n    Information resource hosted on a specific set of hardware and accessible\n    over a network.\n    \"\"\"\n</code></pre>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.AGGREGATE","title":"<code>AGGREGATE = 'aggregate'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to an aggregate resource.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.APPLICATION","title":"<code>APPLICATION = 'application'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information resource hosted on a specific set of hardware and accessible over a network.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.ATTRIBUTE","title":"<code>ATTRIBUTE = 'attribute'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the attribute value.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.ATTRIBUTE_TYPE","title":"<code>ATTRIBUTE_TYPE = 'attributeType'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the characteristic of a feature.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.COLLECTION","title":"<code>COLLECTION = 'collection'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to an unstructured set.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.COLLECTION_HARDWARE","title":"<code>COLLECTION_HARDWARE = 'collectionHardware'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the collection hardware class.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.COLLECTION_SESSION","title":"<code>COLLECTION_SESSION = 'collectionSession'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the collection session.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.COVERAGE","title":"<code>COVERAGE = 'coverage'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a coverage.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.DATASET","title":"<code>DATASET = 'dataset'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the dataset.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.DIMENSION_GROUP","title":"<code>DIMENSION_GROUP = 'dimensionGroup'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a dimension group.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.DOCUMENT","title":"<code>DOCUMENT = 'document'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a document.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.FEATURE","title":"<code>FEATURE = 'feature'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a featiure.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.FEATURE_TYPE","title":"<code>FEATURE_TYPE = 'featureType'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a feature type.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.FIELD_SESSION","title":"<code>FIELD_SESSION = 'fieldSession'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a field session.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.INITIATIVE","title":"<code>INITIATIVE = 'initiative'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to an intitiative.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.METADATA","title":"<code>METADATA = 'metadata'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to metadata.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.MODEL","title":"<code>MODEL = 'model'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a copy or imitation of an existing or hypothetical object.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.NON_GEOGRAPHIC_DATASET","title":"<code>NON_GEOGRAPHIC_DATASET = 'nonGeographicDataset'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the non-geographic dataset.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.PRODUCT","title":"<code>PRODUCT = 'product'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Metadata describing an ISO 19131 data product specification.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.PROPERTY_TYPE","title":"<code>PROPERTY_TYPE = 'propertyType'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a property type.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.REPOSITORY","title":"<code>REPOSITORY = 'repository'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a repository.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.SAMPLE","title":"<code>SAMPLE = 'sample'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a sample.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.SERIES","title":"<code>SERIES = 'series'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to the series.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.SERVICE","title":"<code>SERVICE = 'service'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a capability which a service provider entity makes available to s service user entity through a set of interfaces that define a behaviour, such as a use case.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.SOFTWARE","title":"<code>SOFTWARE = 'software'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a computer program or routine.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeCode.TILE","title":"<code>TILE = 'tile'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Information applies to a tile, a spatial subset of geographic data.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription","title":"<code>ScopeDescription</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of the class of information covered by the information.</p> Source code in <code>opengis/metadata/maintenance.py</code> <pre><code>class ScopeDescription(ABC):\n    \"\"\"Description of the class of information covered by the information.\"\"\"\n\n    @property\n    @abstractmethod\n    def attributes(self) -&gt; Optional[Set[str]]:\n        \"\"\"\n        Instances of attribute types to which the information applies.\n\n        MANDATORY: if `features`, `feature_instances`, `attribute_instances`,\n            `dataset`, and `other` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def features(self) -&gt; Optional[Set[str]]:\n        \"\"\"\n        Instances of feature types to which the information applies.\n\n        MANDATORY: if `attributes`, `feature_instances`, `attribute_instances`,\n            `dataset`, and `other` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def feature_instances(self) -&gt; Optional[Set[str]]:\n        \"\"\"\n        Feature instances to which the information applies.\n\n        MANDATORY: if `attributes`, `features`, `attribute_instances`,\n            `dataset`, and `other` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def attribute_instances(self) -&gt; Optional[Set[str]]:\n        \"\"\"\n        Attribute instances to which the information applies.\n\n        MANDATORY: if `attributes`, `features`, `feature_instances`,\n            `dataset`, and `other` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def dataset(self) -&gt; Optional[str]:\n        \"\"\"\n        Dataset to which the information applies.\n\n        MANDATORY: if `attributes`, `features`, `feature_instances`,\n            `attribute_instances`, and `other` are `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def other(self) -&gt; Optional[str]:\n        \"\"\"\n        Class of information that does not fall into the other categories to\n        which the information applies.\n\n        MANDATORY: if `attributes`, `features`, `feature_instances`,\n            `attribute_instances`, and `dataset` are `None`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.attribute_instances","title":"<code>attribute_instances: Optional[Set[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Attribute instances to which the information applies.</p> if <code>attributes</code>, <code>features</code>, <code>feature_instances</code>, <p><code>dataset</code>, and <code>other</code> are <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.attributes","title":"<code>attributes: Optional[Set[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instances of attribute types to which the information applies.</p> if <code>features</code>, <code>feature_instances</code>, <code>attribute_instances</code>, <p><code>dataset</code>, and <code>other</code> are <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.dataset","title":"<code>dataset: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Dataset to which the information applies.</p> if <code>attributes</code>, <code>features</code>, <code>feature_instances</code>, <p><code>attribute_instances</code>, and <code>other</code> are <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.feature_instances","title":"<code>feature_instances: Optional[Set[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Feature instances to which the information applies.</p> if <code>attributes</code>, <code>features</code>, <code>attribute_instances</code>, <p><code>dataset</code>, and <code>other</code> are <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.features","title":"<code>features: Optional[Set[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Instances of feature types to which the information applies.</p> if <code>attributes</code>, <code>feature_instances</code>, <code>attribute_instances</code>, <p><code>dataset</code>, and <code>other</code> are <code>None</code>.</p>"},{"location":"metadata/maintenance/#opengis.metadata.maintenance.ScopeDescription.other","title":"<code>other: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Class of information that does not fall into the other categories to which the information applies.</p> if <code>attributes</code>, <code>features</code>, <code>feature_instances</code>, <p><code>attribute_instances</code>, and <code>dataset</code> are <code>None</code>.</p>"},{"location":"metadata/naming/","title":"<code>naming</code> module","text":"<p>This is the <code>naming</code> module.</p> <p>This module contains geographic metadata structures regarding naming derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.GenericName","title":"<code>GenericName</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A sequence of identifiers rooted within the context of a namespace.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class GenericName(ABC):\n    \"\"\"A sequence of identifiers rooted within the context of a namespace.\"\"\"\n\n    @property\n    @abstractmethod\n    def depth(self) -&gt; int:\n        \"\"\"\n        Indicates the number of levels specified by this name. For any\n        `LocalName`, it is always one. For a `ScopedName` it is some number\n        greater than or equal to 2.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; NameSpace:\n        \"\"\"\n        The scope (name space) in which this name is local. All names carry an\n        association with their scope in which they are considered local, but\n        the scope can be the global namespace.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def parsed_name(self) -&gt; Sequence['LocalName']:\n        \"\"\"\n        The sequence of local names making this generic name. The length of\n        this sequence is the depth. It does not include the scope.\n        \"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.GenericName.depth","title":"<code>depth: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indicates the number of levels specified by this name. For any <code>LocalName</code>, it is always one. For a <code>ScopedName</code> it is some number greater than or equal to 2.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.GenericName.parsed_name","title":"<code>parsed_name: Sequence[LocalName]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The sequence of local names making this generic name. The length of this sequence is the depth. It does not include the scope.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.GenericName.scope","title":"<code>scope: NameSpace</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The scope (name space) in which this name is local. All names carry an association with their scope in which they are considered local, but the scope can be the global namespace.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.LocalName","title":"<code>LocalName</code>","text":"<p>               Bases: <code>GenericName</code></p> <p>Identifier within a name space for a local object. Local names are names that are directly accessible to and maintained by a <code>NameSpace</code>. Names are local to one and only one name space. The name space within which they are local is indicated by the scope.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class LocalName(GenericName):\n    \"\"\"\n    Identifier within a name space for a local object. Local names are names\n    that are directly accessible to and maintained by a `NameSpace`. Names are\n    local to one and only one name space. The name space within which they are\n    local is indicated by the scope.\n    \"\"\"\n\n    @abstractmethod\n    def __str__(self) -&gt; str:\n        \"\"\"A string representation of this local name.\"\"\"\n\n    @property\n    @abstractmethod\n    def depth(self) -&gt; int:\n        \"\"\"\n        The number of levels specified by this name, which is always 1 for\n        a local name.\n        \"\"\"\n        return 1\n\n    @property\n    @abstractmethod\n    def parsed_name(self) -&gt; Sequence['LocalName']:\n        \"\"\"\n        The sequence of local names. Since this object is itself a locale name,\n        the parsed name is always a singleton containing only `self`.\n        \"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.LocalName.depth","title":"<code>depth: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The number of levels specified by this name, which is always 1 for a local name.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.LocalName.parsed_name","title":"<code>parsed_name: Sequence[LocalName]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The sequence of local names. Since this object is itself a locale name, the parsed name is always a singleton containing only <code>self</code>.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.LocalName.__str__","title":"<code>__str__()</code>  <code>abstractmethod</code>","text":"<p>A string representation of this local name.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>@abstractmethod\ndef __str__(self) -&gt; str:\n    \"\"\"A string representation of this local name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.MemberName","title":"<code>MemberName</code>","text":"<p>               Bases: <code>LocalName</code></p> <p>A name that references either an attribute slot in a record, an attribute, operation, or association role in an object instance or a type description in some schema.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class MemberName(LocalName):\n    \"\"\"\n    A name that references either an attribute slot in a record, an attribute,\n    operation, or association role in an object instance or a type description\n    in some schema.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def attribute_type(self) -&gt; TypeName:\n        \"\"\"The type of the data associated with the member.\"\"\"\n\n    @abstractmethod\n    def __str__(self) -&gt; str:\n        \"\"\"A string representation of this member name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.MemberName.attribute_type","title":"<code>attribute_type: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The type of the data associated with the member.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.MemberName.__str__","title":"<code>__str__()</code>  <code>abstractmethod</code>","text":"<p>A string representation of this member name.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>@abstractmethod\ndef __str__(self) -&gt; str:\n    \"\"\"A string representation of this member name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.NameSpace","title":"<code>NameSpace</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A domain in which names are defined.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class NameSpace(ABC):\n    \"\"\"A domain in which names are defined.\"\"\"\n\n    @property\n    @abstractmethod\n    def is_global(self):\n        \"\"\"\n        Indicates whether this namespace is a \"top level\" namespace. Global,\n        or top-level namespaces are not contained within another namespace.\n        The global namespace has no parent.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; 'GenericName':\n        \"\"\"The identifier of this namespace.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.NameSpace.is_global","title":"<code>is_global</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indicates whether this namespace is a \"top level\" namespace. Global, or top-level namespaces are not contained within another namespace. The global namespace has no parent.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.NameSpace.name","title":"<code>name: GenericName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The identifier of this namespace.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.Record","title":"<code>Record</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A list of logically related fields as (name, value) pairs in a dictionary.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class Record(ABC):\n    \"\"\"\n    A list of logically related fields as (name, value) pairs in a dictionary.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def type(self) -&gt; RecordType:\n        \"\"\"The type definition of this record.\"\"\"\n\n    @property\n    @abstractmethod\n    def field(self):\n        \"\"\"The dictionary of all (name, value) pairs in this record.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.Record.field","title":"<code>field</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The dictionary of all (name, value) pairs in this record.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.Record.type","title":"<code>type: RecordType</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The type definition of this record.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.RecordType","title":"<code>RecordType</code>","text":"<p>               Bases: <code>Type</code></p> <p>The type definition of a record. A <code>RecordType</code> defines dynamically constructed data type.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class RecordType(Type):\n    \"\"\"\n    The type definition of a record. A `RecordType` defines dynamically\n    constructed data type.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def type_name(self) -&gt; TypeName:\n        \"\"\"The name that identifies this record type.\"\"\"\n\n    @property\n    @abstractmethod\n    def field_type(self):\n        \"\"\"The dictionary of all (name, type) pairs in this record type.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.RecordType.field_type","title":"<code>field_type</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The dictionary of all (name, type) pairs in this record type.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.RecordType.type_name","title":"<code>type_name: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name that identifies this record type.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.ScopedName","title":"<code>ScopedName</code>","text":"<p>               Bases: <code>GenericName</code></p> <p>A composite of a <code>LocalName</code> (as head) for locating another name space, and a <code>GenericName</code> (as tail) valid in that name space.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class ScopedName(GenericName):\n    \"\"\"\n    A composite of a `LocalName` (as head) for locating another name space,\n    and a `GenericName` (as tail) valid in that name space.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def head(self) -&gt; LocalName:\n        \"\"\"\n        The first element in the sequence of parsed names. The head element\n        must exists in the same name space as this scoped name.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def tail(self) -&gt; GenericName:\n        \"\"\"\n        Every elements in the sequence of parsed names except for the head.\n        \"\"\"\n\n    @abstractmethod\n    def __str__(self) -&gt; str:\n        \"\"\"A string representation of this scoped name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.ScopedName.head","title":"<code>head: LocalName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The first element in the sequence of parsed names. The head element must exists in the same name space as this scoped name.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.ScopedName.tail","title":"<code>tail: GenericName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Every elements in the sequence of parsed names except for the head.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.ScopedName.__str__","title":"<code>__str__()</code>  <code>abstractmethod</code>","text":"<p>A string representation of this scoped name.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>@abstractmethod\ndef __str__(self) -&gt; str:\n    \"\"\"A string representation of this scoped name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.Type","title":"<code>Type</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Base interface of type definitions.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class Type(ABC):\n    \"\"\"Base interface of type definitions.\"\"\"\n\n    @property\n    @abstractmethod\n    def type_name(self) -&gt; TypeName:\n        \"\"\"The name that identifies this type.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.Type.type_name","title":"<code>type_name: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name that identifies this type.</p>"},{"location":"metadata/naming/#opengis.metadata.naming.TypeName","title":"<code>TypeName</code>","text":"<p>               Bases: <code>LocalName</code></p> <p>A local name that references a record type.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>class TypeName(LocalName):\n    \"\"\"A local name that references a record type.\"\"\"\n\n    @abstractmethod\n    def __str__(self) -&gt; str:\n        \"\"\"A string representation of this type name.\"\"\"\n</code></pre>"},{"location":"metadata/naming/#opengis.metadata.naming.TypeName.__str__","title":"<code>__str__()</code>  <code>abstractmethod</code>","text":"<p>A string representation of this type name.</p> Source code in <code>opengis/metadata/naming.py</code> <pre><code>@abstractmethod\ndef __str__(self) -&gt; str:\n    \"\"\"A string representation of this type name.\"\"\"\n</code></pre>"},{"location":"metadata/overview/","title":"Naming (ISO 19103) and Metadata Subpackage (ISO 19115-1:2014, ISO 19115-2:2018)","text":"<p>This is the <code>metadata</code> subpackage.</p> <p>This subpackage contains geographic naming structures derived from the ISO 19103 international standard and metadata structures derived from the ISO 19115-1:2014, including addendums A1(2018) and A2(2020), and ISO 19115-2:2019, including addendum A1(2022) international standards.</p>"},{"location":"metadata/quality/","title":"<code>quality</code> module","text":"<p>This is the <code>quality</code> module.</p> <p>This module contains geographic metadata structures derived from the ISO 19115-1:2014 international standard and data quality structures derived from the ISO 19157:2013, including addendum A1 (2018) international standard.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.AbsoluteExternalPositionalAccuracy","title":"<code>AbsoluteExternalPositionalAccuracy</code>","text":"<p>               Bases: <code>PositionalAccuracy</code></p> <p>Closeness of reported coordinate values to values accepted as or being true.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class AbsoluteExternalPositionalAccuracy(PositionalAccuracy):\n    \"\"\"\n    Closeness of reported coordinate values to values accepted as or being\n    true.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.AccuracyOfATimeMeasurement","title":"<code>AccuracyOfATimeMeasurement</code>","text":"<p>               Bases: <code>TemporalQuality</code></p> <p>Correctness of the temporal references of an item (reporting of error in time measurement).</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class AccuracyOfATimeMeasurement(TemporalQuality):\n    \"\"\"\n    Correctness of the temporal references of an item (reporting of error in\n    time measurement).\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.AggregationDerivation","title":"<code>AggregationDerivation</code>","text":"<p>               Bases: <code>EvaluationMethod</code></p> <p>Aggregation or derivation method.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class AggregationDerivation(EvaluationMethod):\n    \"\"\"Aggregation or derivation method.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.BasicMeasure","title":"<code>BasicMeasure</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Data quality basic measure.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class BasicMeasure(ABC):\n    \"\"\"Data quality basic measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; str:\n        \"\"\"Name of the data quality basic measure applied to the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def definition(self) -&gt; str:\n        \"\"\"Definition of the data quality basic measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def exemple(self) -&gt; Description:\n        \"\"\"Illustration of the use of a data quality measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def value_type(self) -&gt; TypeName:\n        \"\"\"\n        Value type for the result of the basic measure (shall be one of the\n        data types defined in ISO/TS 19103:2005).\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.BasicMeasure.definition","title":"<code>definition: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Definition of the data quality basic measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.BasicMeasure.exemple","title":"<code>exemple: Description</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Illustration of the use of a data quality measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.BasicMeasure.name","title":"<code>name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the data quality basic measure applied to the data.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.BasicMeasure.value_type","title":"<code>value_type: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value type for the result of the basic measure (shall be one of the data types defined in ISO/TS 19103:2005).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Completeness","title":"<code>Completeness</code>","text":"<p>               Bases: <code>Element</code></p> <p>Presence and absence of features, their attributes and their relationships.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Completeness(Element):\n    \"\"\"\n    Presence and absence of features, their attributes and their relationships.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.CompletenessCommission","title":"<code>CompletenessCommission</code>","text":"<p>               Bases: <code>Completeness</code></p> <p>Excess data present in the dataset, as described by the scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class CompletenessCommission(Completeness):\n    \"\"\"Excess data present in the dataset, as described by the scope.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.CompletenessOmission","title":"<code>CompletenessOmission</code>","text":"<p>               Bases: <code>Completeness</code></p> <p>Data absent from the dataset, as described by the scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class CompletenessOmission(Completeness):\n    \"\"\"Data absent from the dataset, as described by the scope.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ConceptualConsistency","title":"<code>ConceptualConsistency</code>","text":"<p>               Bases: <code>LogicalConsistency</code></p> <p>Adherence to rules of the conceptual schema.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class ConceptualConsistency(LogicalConsistency):\n    \"\"\"Adherence to rules of the conceptual schema.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Confidence","title":"<code>Confidence</code>","text":"<p>               Bases: <code>Metaquality</code></p> <p>Trustworthiness of a data quality result.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Confidence(Metaquality):\n    \"\"\"Trustworthiness of a data quality result.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ConformanceResult","title":"<code>ConformanceResult</code>","text":"<p>               Bases: <code>Result</code></p> <p>Information about the outcome of evaluating the obtained value (or set of values) against a specified acceptable conformance quality level.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class ConformanceResult(Result):\n    \"\"\"\n    Information about the outcome of evaluating the obtained value (or set of\n    values) against a specified acceptable conformance quality level.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def specification(self) -&gt; Citation:\n        \"\"\"\n        Citation of data product specification or user requirement against\n        which data is being evaluated.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def explanation(self) -&gt; str:\n        \"\"\"Explanation of the meaning of conformance for this result.\"\"\"\n\n    @property\n    @abstractmethod\n    def is_conform(self):\n        \"\"\"Indication of the conformance result where 0 = fail and 1 = pass.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ConformanceResult.explanation","title":"<code>explanation: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Explanation of the meaning of conformance for this result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ConformanceResult.is_conform","title":"<code>is_conform</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of the conformance result where 0 = fail and 1 = pass.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ConformanceResult.specification","title":"<code>specification: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Citation of data product specification or user requirement against which data is being evaluated.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult","title":"<code>CoverageResult</code>","text":"<p>               Bases: <code>Result</code></p> <p>Result of a data quality measure organising the measured values as a coverage.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class CoverageResult(Result):\n    \"\"\"\n    Result of a data quality measure organising the measured values as a\n    coverage.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def spatial_representation_type(self) -&gt; SpatialRepresentationTypeCode:\n        \"\"\"Method used to spatially represent the coverage result.\"\"\"\n\n    @property\n    @abstractmethod\n    def result_spatial_representation(self) -&gt; SpatialRepresentation:\n        \"\"\"\n        Gives a numerical representation of the data quality measurements\n        making up the coverage result.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def result_content(self) -&gt; Optional[Sequence[RangeDimension]]:\n        \"\"\"\n        Describes the content of the result coverage, when the quality\n        coverage is included in the described resource, i.e. the semantic\n        definition of the data quality measures.\n\n        MANDATORY: if `result_format` and `result_file` not provided.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def result_format(self) -&gt; Optional[Format]:\n        \"\"\"\n        Provides information about the data format of the result coverage data.\n\n        MANDATORY: if `result_content` not provided.\n        \"\"\"\n\n    # Below property not defined in ISO 19157:2023\n    @property\n    @abstractmethod\n    def result_file(self) -&gt; Optional[DataFile]:\n        \"\"\"\n        Provides information about the data file containing the result\n        coverage data.\n\n        MANDATORY: if `result_content` not provided.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult.result_content","title":"<code>result_content: Optional[Sequence[RangeDimension]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Describes the content of the result coverage, when the quality coverage is included in the described resource, i.e. the semantic definition of the data quality measures.</p> <p>MANDATORY: if <code>result_format</code> and <code>result_file</code> not provided.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult.result_file","title":"<code>result_file: Optional[DataFile]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the data file containing the result coverage data.</p> <p>MANDATORY: if <code>result_content</code> not provided.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult.result_format","title":"<code>result_format: Optional[Format]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the data format of the result coverage data.</p> <p>MANDATORY: if <code>result_content</code> not provided.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult.result_spatial_representation","title":"<code>result_spatial_representation: SpatialRepresentation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Gives a numerical representation of the data quality measurements making up the coverage result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.CoverageResult.spatial_representation_type","title":"<code>spatial_representation_type: SpatialRepresentationTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Method used to spatially represent the coverage result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.DataEvaluation","title":"<code>DataEvaluation</code>","text":"<p>               Bases: <code>EvaluationMethod</code></p> <p>Data evaluation method.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class DataEvaluation(EvaluationMethod):\n    \"\"\"Data evaluation method.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.DataQuality","title":"<code>DataQuality</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Quality information for the data specified by a data quality scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class DataQuality(ABC):\n    \"\"\"Quality information for the data specified by a data quality scope.\"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Scope:\n        \"\"\"The specific data to which the data quality information applies.\"\"\"\n\n    @property\n    @abstractmethod\n    def report(self) -&gt; Sequence[Element]:\n        \"\"\"\n        Quantitative quality information for the data specified by the scope.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def standalone_quality_report(self) -&gt; \\\n            Optional[StandaloneQualityReportInformation]:\n        \"\"\"Reference and abstract of the attached standalone quality report.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.DataQuality.report","title":"<code>report: Sequence[Element]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Quantitative quality information for the data specified by the scope.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.DataQuality.scope","title":"<code>scope: Scope</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The specific data to which the data quality information applies.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.DataQuality.standalone_quality_report","title":"<code>standalone_quality_report: Optional[StandaloneQualityReportInformation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference and abstract of the attached standalone quality report.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Description","title":"<code>Description</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Data quality measure description.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Description(ABC):\n    \"\"\"Data quality measure description.\"\"\"\n\n    @property\n    @abstractmethod\n    def text_description(self) -&gt; str:\n        \"\"\"Text description.\"\"\"\n\n    @property\n    @abstractmethod\n    def extended_description(self) -&gt; BrowseGraphic:\n        \"\"\"Illustration.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Description.extended_description","title":"<code>extended_description: BrowseGraphic</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Illustration.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Description.text_description","title":"<code>text_description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Text description.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.DescriptiveResult","title":"<code>DescriptiveResult</code>","text":"<p>               Bases: <code>Result</code></p> <p>Data quality descriptive result.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class DescriptiveResult(Result):\n    \"\"\"Data quality descriptive result.\"\"\"\n\n    @property\n    @abstractmethod\n    def statement(self) -&gt; str:\n        \"\"\"Textual expression of the descriptive result.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.DescriptiveResult.statement","title":"<code>statement: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Textual expression of the descriptive result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.DomainConsistency","title":"<code>DomainConsistency</code>","text":"<p>               Bases: <code>LogicalConsistency</code></p> <p>Adherence of values to the value domains.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class DomainConsistency(LogicalConsistency):\n    \"\"\"Adherence of values to the value domains.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Element","title":"<code>Element</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Aspect of quantitative quality information.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Element(ABC):\n    \"\"\"Aspect of quantitative quality information.\"\"\"\n\n    @property\n    @abstractmethod\n    def standalone_quality_report_details(self) -&gt; str:\n        \"\"\"\n        Clause in the standaloneQualityReport where this data quality element\n        or any related data quality element (original results in case of\n        derivation or aggregation) is described.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def measure(self) -&gt; MeasureReference:\n        \"\"\"Reference to measure used.\"\"\"\n\n    @property\n    @abstractmethod\n    def evaluation_method(self) -&gt; EvaluationMethod:\n        \"\"\"Evaluation information.\"\"\"\n\n    @property\n    @abstractmethod\n    def result(self) -&gt; Sequence[Result]:\n        \"\"\"\n        Values obtained from applying a data quality measure against a\n        specified acceptable conformance quality level.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def derived_element(self) -&gt; Sequence['Element']:\n        \"\"\"\n        In case of aggregation or derivation, indicates the original element.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Element.derived_element","title":"<code>derived_element: Sequence[Element]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>In case of aggregation or derivation, indicates the original element.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Element.evaluation_method","title":"<code>evaluation_method: EvaluationMethod</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Evaluation information.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Element.measure","title":"<code>measure: MeasureReference</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to measure used.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Element.result","title":"<code>result: Sequence[Result]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Values obtained from applying a data quality measure against a specified acceptable conformance quality level.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Element.standalone_quality_report_details","title":"<code>standalone_quality_report_details: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Clause in the standaloneQualityReport where this data quality element or any related data quality element (original results in case of derivation or aggregation) is described.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod","title":"<code>EvaluationMethod</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of the evaluation method and procedure applied.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class EvaluationMethod(ABC):\n    \"\"\"Description of the evaluation method and procedure applied.\"\"\"\n\n    @property\n    @abstractmethod\n    def evaluation_method_type(self) -&gt; EvaluationMethodTypeCode:\n        \"\"\"Type of method used to evaluate quality of the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def evaluation_method_description(self) -&gt; str:\n        \"\"\"Description of the evaluation method.\"\"\"\n\n    @property\n    @abstractmethod\n    def evaluation_procedure(self) -&gt; Citation:\n        \"\"\"Reference to the procedure information.\"\"\"\n\n    @property\n    @abstractmethod\n    def reference_doc(self) -&gt; Sequence[Citation]:\n        \"\"\"\n        Information on documents which are referenced in developing and\n        applying a data quality evaluation method.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def date_time(self) -&gt; Sequence[datetime]:\n        \"\"\"\n        Date or range of dates on which a data quality measure was applied.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod.date_time","title":"<code>date_time: Sequence[datetime]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date or range of dates on which a data quality measure was applied.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod.evaluation_method_description","title":"<code>evaluation_method_description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the evaluation method.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod.evaluation_method_type","title":"<code>evaluation_method_type: EvaluationMethodTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of method used to evaluate quality of the data.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod.evaluation_procedure","title":"<code>evaluation_procedure: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the procedure information.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethod.reference_doc","title":"<code>reference_doc: Sequence[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information on documents which are referenced in developing and applying a data quality evaluation method.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethodTypeCode","title":"<code>EvaluationMethodTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Type of method for evaluating an identified data quality measure.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class EvaluationMethodTypeCode(Enum):\n    \"\"\"Type of method for evaluating an identified data quality measure.\"\"\"\n\n    # DQ_EvaluationMethodTypeCode: directInternal\n    DIRECT_INTERNAL = \"001\"\n    \"\"\"\n    Method of evaluating the quality of a data set based on inspection\n    of items within the data set, where all data required is internal\n    to the data set being evaluated.\n    \"\"\"\n\n    # DQ_EvaluationMethodTypeCode: directExternal\n    DIRECT_EXTERNAL = \"002\"\n    \"\"\"\n    Method of evaluating the quality of a data set based on inspection\n    of items within the data set, where reference data external to the data\n    set being evaluated is required.\n    \"\"\"\n\n    # DQ_EvaluationMethodTypeCode: indirect\n    INDIRECT = \"003\"\n    \"\"\"\n    Method of evaluating the quality of a data set based on external knowledge.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethodTypeCode.DIRECT_EXTERNAL","title":"<code>DIRECT_EXTERNAL = '002'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Method of evaluating the quality of a data set based on inspection of items within the data set, where reference data external to the data set being evaluated is required.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethodTypeCode.DIRECT_INTERNAL","title":"<code>DIRECT_INTERNAL = '001'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Method of evaluating the quality of a data set based on inspection of items within the data set, where all data required is internal to the data set being evaluated.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.EvaluationMethodTypeCode.INDIRECT","title":"<code>INDIRECT = '003'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Method of evaluating the quality of a data set based on external knowledge.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.FormatConsistency","title":"<code>FormatConsistency</code>","text":"<p>               Bases: <code>LogicalConsistency</code></p> <p>Degree to which data is stored in accordance with the physical structure of the dataset, as described by the scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class FormatConsistency(LogicalConsistency):\n    \"\"\"\n    Degree to which data is stored in accordance with the physical structure\n    of the dataset, as described by the scope.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.FullInspection","title":"<code>FullInspection</code>","text":"<p>               Bases: <code>DataEvaluation</code></p> <p>Test of every item in the population specified by the data quality scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class FullInspection(DataEvaluation):\n    \"\"\"\n    Test of every item in the population specified by the data quality scope.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.GriddedDataPositionalAccuracy","title":"<code>GriddedDataPositionalAccuracy</code>","text":"<p>               Bases: <code>PositionalAccuracy</code></p> <p>Closeness of gridded data position values to values accepted as or being true.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class GriddedDataPositionalAccuracy(PositionalAccuracy):\n    \"\"\"\n    Closeness of gridded data position values to values accepted as or being\n    true.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Homogeneity","title":"<code>Homogeneity</code>","text":"<p>               Bases: <code>Metaquality</code></p> <p>Expected or tested uniformity of the results obtained for a data quality evaluation.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Homogeneity(Metaquality):\n    \"\"\"\n    Expected or tested uniformity of the results obtained for a data quality\n    evaluation.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.IndirectEvaluation","title":"<code>IndirectEvaluation</code>","text":"<p>               Bases: <code>DataEvaluation</code></p> <p>Indirect evaluation.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class IndirectEvaluation(DataEvaluation):\n    \"\"\"Indirect evaluation.\"\"\"\n\n    @property\n    @abstractmethod\n    def deductive_source(self) -&gt; str:\n        \"\"\"\n        Information on which data are used as sources in deductive evaluation\n        method.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.IndirectEvaluation.deductive_source","title":"<code>deductive_source: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information on which data are used as sources in deductive evaluation method.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.LogicalConsistency","title":"<code>LogicalConsistency</code>","text":"<p>               Bases: <code>Element</code></p> <p>Degree of adherence to logical rules of data structure, attribution and relationships (data structure can be conceptual, logical or physical).</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class LogicalConsistency(Element):\n    \"\"\"\n    Degree of adherence to logical rules of data structure, attribution and\n    relationships (data structure can be conceptual, logical or physical).\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure","title":"<code>Measure</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Data quality measure.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Measure(ABC):\n    \"\"\"Data quality measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def measure_identifier(self) -&gt; Identifier:\n        \"\"\"Value uniquely identifying the measure within a namespace.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; str:\n        \"\"\"Name of the data quality measure applied to the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def alias(self) -&gt; str:\n        \"\"\"\n        Another recognized name, an abbreviation or a short name for the same\n        data quality measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def element_name(self) -&gt; TypeName:\n        \"\"\"Name of the data quality element for which quality is reported.\"\"\"\n\n    @property\n    @abstractmethod\n    def definition(self) -&gt; str:\n        \"\"\"\n        Definition of the fundamental concept for the data quality measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Description:\n        \"\"\"\n        Description of the data quality measure, including all formulae and/or\n        illustrations needed to establish the result of applying the measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def value_type(self) -&gt; TypeName:\n        \"\"\"\n        Value type for reporting a data quality result (shall be one of the\n        data types defined in ISO/19103:2005).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def value_structure(self) -&gt; ValueStructure:\n        \"\"\"Structure for reporting a complex data quality result.\"\"\"\n\n    @property\n    @abstractmethod\n    def example(self) -&gt; Sequence[Description]:\n        \"\"\"Illustration of the use of a data quality measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def basic_measure(self) -&gt; BasicMeasure:\n        \"\"\"\n        Definition of the fundamental concept for the data quality measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def source_reference(self) -&gt; Sequence[SourceReference]:\n        \"\"\"\n        Reference to the source of an item that has been adopted from an\n        external source.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def parameter(self):\n        \"\"\"\n        Reference to the source of an item that has been adopted from an\n        external source.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.alias","title":"<code>alias: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Another recognized name, an abbreviation or a short name for the same data quality measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.basic_measure","title":"<code>basic_measure: BasicMeasure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Definition of the fundamental concept for the data quality measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.definition","title":"<code>definition: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Definition of the fundamental concept for the data quality measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.description","title":"<code>description: Description</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the data quality measure, including all formulae and/or illustrations needed to establish the result of applying the measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.element_name","title":"<code>element_name: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the data quality element for which quality is reported.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.example","title":"<code>example: Sequence[Description]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Illustration of the use of a data quality measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.measure_identifier","title":"<code>measure_identifier: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value uniquely identifying the measure within a namespace.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.name","title":"<code>name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the data quality measure applied to the data.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.parameter","title":"<code>parameter</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the source of an item that has been adopted from an external source.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.source_reference","title":"<code>source_reference: Sequence[SourceReference]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the source of an item that has been adopted from an external source.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.value_structure","title":"<code>value_structure: ValueStructure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Structure for reporting a complex data quality result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Measure.value_type","title":"<code>value_type: TypeName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value type for reporting a data quality result (shall be one of the data types defined in ISO/19103:2005).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.MeasureReference","title":"<code>MeasureReference</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Reference to the measure used.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class MeasureReference(ABC):\n    \"\"\"Reference to the measure used.\"\"\"\n\n    @property\n    @abstractmethod\n    def measure_identification(self) -&gt; Identifier:\n        \"\"\"\n        Identifier of the measure, value uniquely identifying the measure\n        within a namespace.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def name_of_measure(self) -&gt; Sequence[str]:\n        \"\"\"Name of the test applied to the data.\"\"\"\n\n    @property\n    @abstractmethod\n    def measure_description(self) -&gt; str:\n        \"\"\"Description of the measure.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.MeasureReference.measure_description","title":"<code>measure_description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.MeasureReference.measure_identification","title":"<code>measure_identification: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier of the measure, value uniquely identifying the measure within a namespace.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.MeasureReference.name_of_measure","title":"<code>name_of_measure: Sequence[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the test applied to the data.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Metaquality","title":"<code>Metaquality</code>","text":"<p>               Bases: <code>Element</code></p> <p>Information about the reliability of data quality results.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Metaquality(Element):\n    \"\"\"Information about the reliability of data quality results.\"\"\"\n\n    @property\n    @abstractmethod\n    def derived_element(self) -&gt; Sequence[Element]:\n        \"\"\"Derived element.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Metaquality.derived_element","title":"<code>derived_element: Sequence[Element]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Derived element.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.NonQuantitativeAttributeCorrectness","title":"<code>NonQuantitativeAttributeCorrectness</code>","text":"<p>               Bases: <code>ThematicAccuracy</code></p> <p>Correctness of non-quantitative attributes.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class NonQuantitativeAttributeCorrectness(ThematicAccuracy):\n    \"\"\"Correctness of non-quantitative attributes.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.PositionalAccuracy","title":"<code>PositionalAccuracy</code>","text":"<p>               Bases: <code>Element</code></p> <p>Accuracy of the position of features.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class PositionalAccuracy(Element):\n    \"\"\"Accuracy of the position of features.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.QuantitativeAttributeAccuracy","title":"<code>QuantitativeAttributeAccuracy</code>","text":"<p>               Bases: <code>ThematicAccuracy</code></p> <p>Accuracy of quantitative attributes.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class QuantitativeAttributeAccuracy(ThematicAccuracy):\n    \"\"\"Accuracy of quantitative attributes.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.QuantitativeResult","title":"<code>QuantitativeResult</code>","text":"<p>               Bases: <code>Result</code></p> <p>The values or information about the value(s) (or set of values) obtained from applying a data quality measure.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class QuantitativeResult(Result):\n    \"\"\"\n    The values or information about the value(s) (or set of values) obtained\n    from applying a data quality measure.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def value(self) -&gt; Sequence[Record]:\n        \"\"\"\n        Quantitative value or values, content determined by the evaluation\n        procedure used, accordingly with the value type and valueStructure\n        defined for the measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def value_unit(self) -&gt; UnitOfMeasure:\n        \"\"\"Value unit for reporting a data quality result.\"\"\"\n\n    @property\n    @abstractmethod\n    def value_record_type(self) -&gt; RecordType:\n        \"\"\"\n        Value type for reporting a data quality result, depends of the\n        implementation.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.QuantitativeResult.value","title":"<code>value: Sequence[Record]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Quantitative value or values, content determined by the evaluation procedure used, accordingly with the value type and valueStructure defined for the measure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.QuantitativeResult.value_record_type","title":"<code>value_record_type: RecordType</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value type for reporting a data quality result, depends of the implementation.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.QuantitativeResult.value_unit","title":"<code>value_unit: UnitOfMeasure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value unit for reporting a data quality result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.RelativeInternalPositionalAccuracy","title":"<code>RelativeInternalPositionalAccuracy</code>","text":"<p>               Bases: <code>PositionalAccuracy</code></p> <p>Closeness of the relative positions of features in the scope to their respective relative positions accepted as or being true.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class RelativeInternalPositionalAccuracy(PositionalAccuracy):\n    \"\"\"\n    Closeness of the relative positions of features in the scope to their\n    respective relative positions accepted as or being true.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Representativity","title":"<code>Representativity</code>","text":"<p>               Bases: <code>Metaquality</code></p> <p>Trustworthiness of a data quality result.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Representativity(Metaquality):\n    \"\"\"Trustworthiness of a data quality result.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Result","title":"<code>Result</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Generalization of more specific result classes.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class Result(ABC):\n    \"\"\"Generalization of more specific result classes.\"\"\"\n\n    @property\n    @abstractmethod\n    def result_scope(self) -&gt; Scope:\n        \"\"\"Scope of the result.\"\"\"\n\n    @property\n    @abstractmethod\n    def date_time(self) -&gt; datetime:\n        \"\"\"Date when the result was generated.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.Result.date_time","title":"<code>date_time: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Date when the result was generated.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.Result.result_scope","title":"<code>result_scope: Scope</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Scope of the result.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.SimpleBasedInspection","title":"<code>SimpleBasedInspection</code>","text":"<p>               Bases: <code>DataEvaluation</code></p> <p>Sample based inspection.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class SimpleBasedInspection(DataEvaluation):\n    \"\"\"Sample based inspection.\"\"\"\n\n    @property\n    @abstractmethod\n    def sampling_scheme(self) -&gt; str:\n        \"\"\"\n        Information of the type of sampling scheme and description of the\n        sampling procedure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def lot_description(self) -&gt; str:\n        \"\"\"Information of how lots are defined.\"\"\"\n\n    @property\n    @abstractmethod\n    def simple_ratio(self) -&gt; str:\n        \"\"\"\n        Information on how many samples on average are extracted for\n        inspection from each lot of population.\n        \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.SimpleBasedInspection.lot_description","title":"<code>lot_description: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information of how lots are defined.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.SimpleBasedInspection.sampling_scheme","title":"<code>sampling_scheme: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information of the type of sampling scheme and description of the sampling procedure.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.SimpleBasedInspection.simple_ratio","title":"<code>simple_ratio: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information on how many samples on average are extracted for inspection from each lot of population.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.SourceReference","title":"<code>SourceReference</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Reference to the source of the data quality measure.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class SourceReference(ABC):\n    \"\"\"Reference to the source of the data quality measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Citation:\n        \"\"\"References to the source.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.SourceReference.citation","title":"<code>citation: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>References to the source.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.StandaloneQualityReportInformation","title":"<code>StandaloneQualityReportInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Reference to an external stadalone quality report</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class StandaloneQualityReportInformation(ABC):\n    \"\"\"Reference to an external stadalone quality report\"\"\"\n\n    @property\n    @abstractmethod\n    def report_reference(self) -&gt; Citation:\n        \"\"\"Reference to the associated standalone quality report.\"\"\"\n\n    @property\n    @abstractmethod\n    def abstract(self) -&gt; str:\n        \"\"\"Abstract for the associated standalone quality report.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.StandaloneQualityReportInformation.abstract","title":"<code>abstract: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Abstract for the associated standalone quality report.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.StandaloneQualityReportInformation.report_reference","title":"<code>report_reference: Citation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the associated standalone quality report.</p>"},{"location":"metadata/quality/#opengis.metadata.quality.TemporalConsistency","title":"<code>TemporalConsistency</code>","text":"<p>               Bases: <code>TemporalQuality</code></p> <p>Correctness of ordered events or sequences, if reported.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class TemporalConsistency(TemporalQuality):\n    \"\"\"Correctness of ordered events or sequences, if reported.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.TemporalQuality","title":"<code>TemporalQuality</code>","text":"<p>               Bases: <code>Element</code></p> <p>Accuracy of the temporal attributes and temporal relationships of features.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class TemporalQuality(Element):\n    \"\"\"\n    Accuracy of the temporal attributes and temporal relationships of features.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.TemporalValidity","title":"<code>TemporalValidity</code>","text":"<p>               Bases: <code>TemporalQuality</code></p> <p>Validity of data specified by the scope with respect to time.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class TemporalValidity(TemporalQuality):\n    \"\"\"Validity of data specified by the scope with respect to time.\"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ThematicAccuracy","title":"<code>ThematicAccuracy</code>","text":"<p>               Bases: <code>Element</code></p> <p>Accuracy of quantitative attributes and the correctness of non-quantitative attributes and of the classifications of features and their relationships.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class ThematicAccuracy(Element):\n    \"\"\"\n    Accuracy of quantitative attributes and the correctness of\n    non-quantitative attributes and of the classifications of features and\n    their relationships.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ThematicClassificationCorrectness","title":"<code>ThematicClassificationCorrectness</code>","text":"<p>               Bases: <code>ThematicAccuracy</code></p> <p>Comparison of the classes assigned to features or their attributes to a universe of discourse.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class ThematicClassificationCorrectness(ThematicAccuracy):\n    \"\"\"\n    Comparison of the classes assigned to features or their attributes to a\n    universe of discourse.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.TopologicalConsistency","title":"<code>TopologicalConsistency</code>","text":"<p>               Bases: <code>LogicalConsistency</code></p> <p>Correctness of the explicitly encoded topological characteristics of the dataset as described by the scope.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class TopologicalConsistency(LogicalConsistency):\n    \"\"\"\n    Correctness of the explicitly encoded topological characteristics of the\n    dataset as described by the scope.\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure","title":"<code>ValueStructure</code>","text":"<p>               Bases: <code>Enum</code></p> <p>The way in which values are grouped together.</p> Source code in <code>opengis/metadata/quality.py</code> <pre><code>class ValueStructure(Enum):\n    \"\"\"The way in which values are grouped together.\"\"\"\n\n    # DQM_ValueStructure: bag\n    BAG = \"001\"\n    \"\"\"\n    Finite, unordered collection of related items (objects or values).\n    \"\"\"\n\n    # DQM_ValueStructure: set\n    SET = \"002\"\n    \"\"\"\n    Unordered collection of related items (objects or values) with no\n    repetition (ISO 19107:2003).\n    \"\"\"\n\n    # DQM_ValueStructure: sequence\n    SEQUENCE = \"003\"\n    \"\"\"\n    Finite, ordered collection of related items (objects or values) that may\n    be repeated (ISO 19107:2003).\n    \"\"\"\n\n    # DQM_ValueStructure: table\n    TABLE = \"004\"\n    \"\"\"\n    An arrangement of data in which each item may be identified by means of\n    arguments or keys (ISO/IEC 2382-4:1999).\n    \"\"\"\n\n    # DQM_ValueStructure: matrix\n    MATRIX = \"005\"\n    \"\"\"Rectangular array of numbers (ISO/TS 19129:2009).\"\"\"\n\n    # DQM_ValueStructure: coverage\n    COVERAGE = \"006\"\n    \"\"\"\n    Feature that acts as a function to return values from its range for any\n    direct position within its spatial, temporal or spatiotemporal domain\n    (ISO 19123:2005).\n    \"\"\"\n</code></pre>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.BAG","title":"<code>BAG = '001'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Finite, unordered collection of related items (objects or values).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.COVERAGE","title":"<code>COVERAGE = '006'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Feature that acts as a function to return values from its range for any direct position within its spatial, temporal or spatiotemporal domain (ISO 19123:2005).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.MATRIX","title":"<code>MATRIX = '005'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Rectangular array of numbers (ISO/TS 19129:2009).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.SEQUENCE","title":"<code>SEQUENCE = '003'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Finite, ordered collection of related items (objects or values) that may be repeated (ISO 19107:2003).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.SET","title":"<code>SET = '002'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unordered collection of related items (objects or values) with no repetition (ISO 19107:2003).</p>"},{"location":"metadata/quality/#opengis.metadata.quality.ValueStructure.TABLE","title":"<code>TABLE = '004'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>An arrangement of data in which each item may be identified by means of arguments or keys (ISO/IEC 2382-4:1999).</p>"},{"location":"metadata/representation/","title":"<code>representation</code> module","text":"<p>This is the <code>representation</code> module.</p> <p>This module contains geographic metadata structures regarding representation derived from the ISO 19115-1:2014 and ISO 19115-2:2019 international standards.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.CellGeometryCode","title":"<code>CellGeometryCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Code indicating the geometry represented by the grid cell value.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class CellGeometryCode(Enum):\n    \"\"\"Code indicating the geometry represented by the grid cell value.\"\"\"\n\n    POINT = \"point\"\n    \"\"\"Each cell represents a point.\"\"\"\n\n    AREA = \"area\"\n    \"\"\"Each cell represents an area.\"\"\"\n\n    VOXEL = \"voxel\"\n    \"\"\"\n    Each cell represents a volumetric measurement on a regular grid in\n    three dimensional space.\n    \"\"\"\n\n    STRATUM = \"stratum\"\n    \"\"\"Height range for a single point vertical profile.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.CellGeometryCode.AREA","title":"<code>AREA = 'area'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Each cell represents an area.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.CellGeometryCode.POINT","title":"<code>POINT = 'point'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Each cell represents a point.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.CellGeometryCode.STRATUM","title":"<code>STRATUM = 'stratum'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Height range for a single point vertical profile.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.CellGeometryCode.VOXEL","title":"<code>VOXEL = 'voxel'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Each cell represents a volumetric measurement on a regular grid in three dimensional space.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension","title":"<code>Dimension</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Axis properties.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class Dimension(ABC):\n    \"\"\"Axis properties.\"\"\"\n\n    @property\n    @abstractmethod\n    def dimension_name(self) -&gt; DimensionNameTypeCode:\n        \"\"\"Name of the axis.\"\"\"\n\n    @property\n    @abstractmethod\n    def dimension_size(self) -&gt; int:\n        \"\"\"Number of elements along the axis.\"\"\"\n\n    @property\n    @abstractmethod\n    def resolution(self) -&gt; float:\n        \"\"\"Degree of detail in the grid dataset.\"\"\"\n\n    @property\n    @abstractmethod\n    def dimension_title(self) -&gt; Optional[str]:\n        \"\"\"\n        Enhancement/modifier of the dimension name, e.g.,\n        for a different time dimension: dimensiont_title = 'runtime'\n        or more a more general case : dimension_name = 'column'\n        dimension_title = 'Longitude'.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def dimension_description(self) -&gt; Optional[str]:\n        \"\"\"Description of the axis.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension.dimension_description","title":"<code>dimension_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of the axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension.dimension_name","title":"<code>dimension_name: DimensionNameTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension.dimension_size","title":"<code>dimension_size: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number of elements along the axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension.dimension_title","title":"<code>dimension_title: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Enhancement/modifier of the dimension name, e.g., for a different time dimension: dimensiont_title = 'runtime' or more a more general case : dimension_name = 'column' dimension_title = 'Longitude'.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Dimension.resolution","title":"<code>resolution: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Degree of detail in the grid dataset.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode","title":"<code>DimensionNameTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Name of the dimension.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class DimensionNameTypeCode(Enum):\n    \"\"\"Name of the dimension.\"\"\"\n\n    ROW = \"row\"\n    \"\"\"Ordinate (y) axis.\"\"\"\n\n    COLUMN = \"column\"\n    \"\"\"Abscissa (x) axis.\"\"\"\n\n    VERTICAL = \"vertical\"\n    \"\"\"Vertical (z) axis.\"\"\"\n\n    TRACK = \"track\"\n    \"\"\"Along the direction of motion of the scan point.\"\"\"\n\n    CROSS_TRACK = \"crossTrack\"\n    \"\"\"Perpendicular to the direction of motion of the scan point.\"\"\"\n\n    LINE = \"line\"\n    \"\"\"Scan line of a sensor.\"\"\"\n\n    SAMPLE = \"sample\"\n    \"\"\"Element along a scan line.\"\"\"\n\n    TIME = \"time\"\n    \"\"\"Duration.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.COLUMN","title":"<code>COLUMN = 'column'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Abscissa (x) axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.CROSS_TRACK","title":"<code>CROSS_TRACK = 'crossTrack'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Perpendicular to the direction of motion of the scan point.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.LINE","title":"<code>LINE = 'line'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Scan line of a sensor.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.ROW","title":"<code>ROW = 'row'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Ordinate (y) axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.SAMPLE","title":"<code>SAMPLE = 'sample'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Element along a scan line.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.TIME","title":"<code>TIME = 'time'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Duration.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.TRACK","title":"<code>TRACK = 'track'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Along the direction of motion of the scan point.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.DimensionNameTypeCode.VERTICAL","title":"<code>VERTICAL = 'vertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Vertical (z) axis.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCP","title":"<code>GCP</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Information on a ground control point (GSP).</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GCP(ABC):\n    \"\"\"Information on a ground control point (GSP).\"\"\"\n\n    @property\n    @abstractmethod\n    def geographic_coordinates(self) -&gt; DirectPosition:\n        \"\"\"\n        Geographic or map position of the control point, in either two\n        or three dimensions.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def accuracy_report(self) -&gt; Optional[Sequence[Element]]:\n        \"\"\"Accuracy of a ground control point.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GCP.accuracy_report","title":"<code>accuracy_report: Optional[Sequence[Element]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Accuracy of a ground control point.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCP.geographic_coordinates","title":"<code>geographic_coordinates: DirectPosition</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Geographic or map position of the control point, in either two or three dimensions.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCPCollection","title":"<code>GCPCollection</code>","text":"<p>               Bases: <code>GeolocationInformation</code></p> <p>A collection of ground control points (GCPs).</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GCPCollection(GeolocationInformation):\n    \"\"\"A collection of ground control points (GCPs).\"\"\"\n\n    @property\n    @abstractmethod\n    def collection_identification(self) -&gt; int:\n        \"\"\"Identifier of the GCP collection.\"\"\"\n\n    @property\n    @abstractmethod\n    def collection_name(self) -&gt; str:\n        \"\"\"Name of the GCP collection.\"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_reference_system(self) -&gt; ReferenceSystem:\n        \"\"\"Coordinate system in which the ground control points are defined.\"\"\"\n\n    @property\n    @abstractmethod\n    def gcp(self) -&gt; Sequence[GCP]:\n        \"\"\"Ground control point(s) used in the collection.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GCPCollection.collection_identification","title":"<code>collection_identification: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier of the GCP collection.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCPCollection.collection_name","title":"<code>collection_name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of the GCP collection.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCPCollection.coordinate_reference_system","title":"<code>coordinate_reference_system: ReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Coordinate system in which the ground control points are defined.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GCPCollection.gcp","title":"<code>gcp: Sequence[GCP]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Ground control point(s) used in the collection.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeolocationInformation","title":"<code>GeolocationInformation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Geolocation information with data quality.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GeolocationInformation(ABC):\n    \"\"\"Geolocation information with data quality.\"\"\"\n\n    @property\n    @abstractmethod\n    def quality_info(self) -&gt; Optional[Sequence[DataQuality]]:\n        \"\"\"\n        Provides an overall assessment of quality of geolocation information.\n        \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GeolocationInformation.quality_info","title":"<code>quality_info: Optional[Sequence[DataQuality]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides an overall assessment of quality of geolocation information.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode","title":"<code>GeometricObjectTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Name of point or vector objects used to locate sero-, one-, two-, or three-dimensional spatial locations in the dataset.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GeometricObjectTypeCode(Enum):\n    \"\"\"\n    Name of point or vector objects used to locate sero-, one-, two-, or\n    three-dimensional spatial locations in the dataset.\n    \"\"\"\n\n    COMPLEX = \"complex\"\n    \"\"\"\n    Set of geometric primitives such that their boundaries can be\n    represented as a union of other primitives.\n    \"\"\"\n\n    COMPOSITE = \"composite\"\n    \"\"\"Connected set of curves, solids or surfaces.\"\"\"\n\n    CURVE = \"curve\"\n    \"\"\"\n    Bounded, 1-dimensional geometric primitive, representing the continuous\n    image of a line.\n    \"\"\"\n\n    POINT = \"point\"\n    \"\"\"\n    Zero-dimensional geometric primitive, representing a position but not\n    having an extent.\n    \"\"\"\n\n    SOLID = \"solid\"\n    \"\"\"\n    Bounded, connected 3-dimensional geometric primitive, representing the\n    continuous image of a region of space.\n    \"\"\"\n\n    SURFACE = \"surface\"\n    \"\"\"\n    Bounded, connected 2-dimensional geometric primitive, representing the\n    continuous image of a region of a plane.\n    \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.COMPLEX","title":"<code>COMPLEX = 'complex'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Set of geometric primitives such that their boundaries can be represented as a union of other primitives.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.COMPOSITE","title":"<code>COMPOSITE = 'composite'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Connected set of curves, solids or surfaces.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.CURVE","title":"<code>CURVE = 'curve'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Bounded, 1-dimensional geometric primitive, representing the continuous image of a line.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.POINT","title":"<code>POINT = 'point'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Zero-dimensional geometric primitive, representing a position but not having an extent.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.SOLID","title":"<code>SOLID = 'solid'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Bounded, connected 3-dimensional geometric primitive, representing the continuous image of a region of space.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjectTypeCode.SURFACE","title":"<code>SURFACE = 'surface'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Bounded, connected 2-dimensional geometric primitive, representing the continuous image of a region of a plane.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjects","title":"<code>GeometricObjects</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Number of objects, listed by geometric object type, used in the resource/dataset.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GeometricObjects(ABC):\n    \"\"\"\n    Number of objects, listed by geometric object type, used in the\n    resource/dataset.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def geometric_object_type(self) -&gt; GeometricObjectTypeCode:\n        \"\"\"\n        Name of point or vector objects used to locate zero-, one-, two-,\n        or three-dimensional spatial locations in the resource/dataset.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def geometric_object_count(self) -&gt; Optional[int]:\n        \"\"\"\n        Total number of the point or vector object type occurring in the\n        resource/dataset.\n\n        Domain: &gt; 0\n        \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjects.geometric_object_count","title":"<code>geometric_object_count: Optional[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Total number of the point or vector object type occurring in the resource/dataset.</p> <p>Domain: &gt; 0</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GeometricObjects.geometric_object_type","title":"<code>geometric_object_type: GeometricObjectTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Name of point or vector objects used to locate zero-, one-, two-, or three-dimensional spatial locations in the resource/dataset.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified","title":"<code>Georectified</code>","text":"<p>               Bases: <code>GridSpatialRepresentation</code></p> <p>Grid whose cells are regularly spaced in a geographic (i.e. lat / long) or map coordinate system defined in the Spatial Referencing System (SRS) so that any cell in the grid can be geolocated given its grid coordinate and the grid origin, cell spacing, and orientation.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class Georectified(GridSpatialRepresentation):\n    \"\"\"\n    Grid whose cells are regularly spaced in a geographic (i.e. lat / long) or\n    map coordinate system defined in the Spatial Referencing System (SRS) so\n    that any cell in the grid can be geolocated given its grid coordinate and\n    the grid origin, cell spacing, and orientation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def check_point_availability(self) -&gt; bool:\n        \"\"\"\n        Indication of whether or not geographic position points are available\n        to test the accuracy of the georeferenced grid data.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def check_point_description(self) -&gt; Optional[str]:\n        \"\"\"\n        Description of geographic position points used to test the accuracy of\n        the georeferenced grid data.\n\n        MANDATORY: if `check_point_availability` == `True`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def corner_points(self) -&gt; Optional[Sequence[Point]]:\n        \"\"\"\n        Earth location in the coordinate system defined by the Spatial\n        Reference System and the grid coordinate of the cells at opposite ends\n        of grid coverage along two diagonals in the grid spatial dimensions.\n        There are four corner points in a georectified grid; at least two\n        corner points along one diagonal are required. The first corner point\n        corresponds to the origin of the grid.\n\n        NOTE: The length of the `Sequence` of `Points` should be 2 - 4\n        (i.e. 2, 3, or 4).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def centre_point(self) -&gt; Optional[Point]:\n        \"\"\"\n        Earth location in the coordinate system defined by the Spatial\n        Reference System and the grid coordinate of the cell halfway between\n        opposite ends of the grid in the spatial dimensions.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def point_in_pixel(self) -&gt; PixelOrientationCode:\n        \"\"\"\n        Point in a pixel corresponding to the Earth location of the pixel.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def transformation_dimension_description(self) -&gt; Optional[str]:\n        \"\"\"General description of the transformation.\"\"\"\n\n    @property\n    @abstractmethod\n    def transformation_dimension_mapping(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Information about which grid axes are the spatial (map) axes.\n\n        NOTE: The length of the `Sequence` of `str` should be 2. That is\n        len(list(str)) should return 2.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def check_point(self) -&gt; Optional[Sequence[GCP]]:\n        \"\"\"\n        Geographic references used to validate georectification of the data.\n        \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.centre_point","title":"<code>centre_point: Optional[Point]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Earth location in the coordinate system defined by the Spatial Reference System and the grid coordinate of the cell halfway between opposite ends of the grid in the spatial dimensions.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.check_point","title":"<code>check_point: Optional[Sequence[GCP]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Geographic references used to validate georectification of the data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.check_point_availability","title":"<code>check_point_availability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not geographic position points are available to test the accuracy of the georeferenced grid data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.check_point_description","title":"<code>check_point_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of geographic position points used to test the accuracy of the georeferenced grid data.</p> <p>MANDATORY: if <code>check_point_availability</code> == <code>True</code>.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.corner_points","title":"<code>corner_points: Optional[Sequence[Point]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Earth location in the coordinate system defined by the Spatial Reference System and the grid coordinate of the cells at opposite ends of grid coverage along two diagonals in the grid spatial dimensions. There are four corner points in a georectified grid; at least two corner points along one diagonal are required. The first corner point corresponds to the origin of the grid.</p> <p>NOTE: The length of the <code>Sequence</code> of <code>Points</code> should be 2 - 4 (i.e. 2, 3, or 4).</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.point_in_pixel","title":"<code>point_in_pixel: PixelOrientationCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Point in a pixel corresponding to the Earth location of the pixel.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.transformation_dimension_description","title":"<code>transformation_dimension_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>General description of the transformation.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georectified.transformation_dimension_mapping","title":"<code>transformation_dimension_mapping: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about which grid axes are the spatial (map) axes.</p> <p>NOTE: The length of the <code>Sequence</code> of <code>str</code> should be 2. That is len(list(str)) should return 2.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable","title":"<code>Georeferenceable</code>","text":"<p>               Bases: <code>GridSpatialRepresentation</code></p> <p>ISO 19115-1: Grid with cells irregularly spaced in any given geographic/map projection coordinate system, whose individual cells can be geolocated using geolocation information supplied with the data but cannot be geolocated from the grid properties alone.</p> <p>ISO 19115-2: Description of information provided in metadata that allows the geographic or map location of the raster points to be located.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class Georeferenceable(GridSpatialRepresentation):\n    \"\"\"\n    ISO 19115-1: Grid with cells irregularly spaced in any given\n    geographic/map projection coordinate system, whose individual cells can be\n    geolocated using geolocation information supplied with the data but cannot\n    be geolocated from the grid properties alone.\n\n    ISO 19115-2: Description of information provided in metadata that allows\n    the geographic or map location of the raster points to be located.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def control_point_availability(self) -&gt; bool:\n        \"\"\"Indication of whether or not control point(s) exists.\"\"\"\n\n    @property\n    @abstractmethod\n    def orientation_parameter_availability(self) -&gt; bool:\n        \"\"\"\n        Indication of whether or not orientation parameters are available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def orientation_parameter_description(self) -&gt; Optional[str]:\n        \"\"\"Description of parameters used to describe sensor orientation.\"\"\"\n\n    @property\n    @abstractmethod\n    def georeferenced_parameters(self) -&gt; Record:\n        \"\"\"Terms which support grid data georeferencing.\"\"\"\n\n    @property\n    @abstractmethod\n    def parameter_citation(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Reference providing description of the parameters.\"\"\"\n\n    @property\n    @abstractmethod\n    def geolocation_information(self) -&gt; Sequence[GeolocationInformation]:\n        \"\"\"\n        Information that can be used to geo-locate the data.\n        \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.control_point_availability","title":"<code>control_point_availability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not control point(s) exists.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.geolocation_information","title":"<code>geolocation_information: Sequence[GeolocationInformation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information that can be used to geo-locate the data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.georeferenced_parameters","title":"<code>georeferenced_parameters: Record</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Terms which support grid data georeferencing.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.orientation_parameter_availability","title":"<code>orientation_parameter_availability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not orientation parameters are available.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.orientation_parameter_description","title":"<code>orientation_parameter_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of parameters used to describe sensor orientation.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.Georeferenceable.parameter_citation","title":"<code>parameter_citation: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference providing description of the parameters.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GridSpatialRepresentation","title":"<code>GridSpatialRepresentation</code>","text":"<p>               Bases: <code>SpatialRepresentation</code></p> <p>Information about grid spatial objects in the resource.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class GridSpatialRepresentation(SpatialRepresentation):\n    \"\"\"Information about grid spatial objects in the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def number_of_dimensions(self) -&gt; int:\n        \"\"\"Number of independent spatial-temporal axes.\"\"\"\n\n    @property\n    @abstractmethod\n    def axis_dimension_properties(self) -&gt; Sequence[Dimension]:\n        \"\"\"Information about spatial-temporal axis properties.\"\"\"\n\n    @property\n    @abstractmethod\n    def cell_geometry(self) -&gt; CellGeometryCode:\n        \"\"\"Identification of grid data as point or cell.\"\"\"\n\n    @property\n    @abstractmethod\n    def transformation_parameter_availability(self) -&gt; bool:\n        \"\"\"\n        Indication of whether or not parameters for transformation between\n        image coordinates and geographic or map coordinates exist\n        (are available).\n        \"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.GridSpatialRepresentation.axis_dimension_properties","title":"<code>axis_dimension_properties: Sequence[Dimension]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about spatial-temporal axis properties.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GridSpatialRepresentation.cell_geometry","title":"<code>cell_geometry: CellGeometryCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identification of grid data as point or cell.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GridSpatialRepresentation.number_of_dimensions","title":"<code>number_of_dimensions: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Number of independent spatial-temporal axes.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.GridSpatialRepresentation.transformation_parameter_availability","title":"<code>transformation_parameter_availability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication of whether or not parameters for transformation between image coordinates and geographic or map coordinates exist (are available).</p>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode","title":"<code>PixelOrientationCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Point in a pixel corresponding to the Earth location of the pixel</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class PixelOrientationCode(Enum):\n    \"\"\"Point in a pixel corresponding to the Earth location of the pixel\"\"\"\n\n    CENTRE = \"centre\"\n    \"\"\"\n    Point halfway between the lower left and the upper right of the pixel.\n    \"\"\"\n\n    LOWER_LEFT = \"lowerLeft\"\n    \"\"\"\n    The corner in the pixel closest to the origin of the SRS; if two are at\n    the same distance from the origin, the one with the smallest x-value.\n    \"\"\"\n\n    LOWER_RIGHT = \"lowerRight\"\n    \"\"\"Next corner counterclockwise from the lower left.\"\"\"\n\n    UPPER_RIGHT = \"upperRight\"\n    \"\"\"Next corner counterclockwise from the lower right.\"\"\"\n\n    UPPER_LEFT = \"upperLeft\"\n    \"\"\"Next corner counterclockwise from the upper right.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode.CENTRE","title":"<code>CENTRE = 'centre'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Point halfway between the lower left and the upper right of the pixel.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode.LOWER_LEFT","title":"<code>LOWER_LEFT = 'lowerLeft'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The corner in the pixel closest to the origin of the SRS; if two are at the same distance from the origin, the one with the smallest x-value.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode.LOWER_RIGHT","title":"<code>LOWER_RIGHT = 'lowerRight'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Next corner counterclockwise from the lower left.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode.UPPER_LEFT","title":"<code>UPPER_LEFT = 'upperLeft'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Next corner counterclockwise from the upper right.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.PixelOrientationCode.UPPER_RIGHT","title":"<code>UPPER_RIGHT = 'upperRight'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Next corner counterclockwise from the lower right.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentation","title":"<code>SpatialRepresentation</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Digital mechanism used to represent spatial information.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class SpatialRepresentation(ABC):\n    \"\"\"Digital mechanism used to represent spatial information.\"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; Optional[Scope]:\n        \"\"\"Level and extent of the spatial representation.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentation.scope","title":"<code>scope: Optional[Scope]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Level and extent of the spatial representation.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode","title":"<code>SpatialRepresentationTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Method used to represent geographic information in the resource.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class SpatialRepresentationTypeCode(Enum):\n    \"\"\"Method used to represent geographic information in the resource.\"\"\"\n\n    VECTOR = \"vector\"\n    \"\"\"Vector data are used to represent geographic data.\"\"\"\n\n    GRID = \"grid\"\n    \"\"\"Grid data are used to represent geographic data.\"\"\"\n\n    TEXT_TABLE = \"textTable\"\n    \"\"\"Textual or tabular data are used to represent geographic data.\"\"\"\n\n    TIN = \"tin\"\n    \"\"\"Triangulated irregular network.\"\"\"\n\n    STEREO_MODEL = \"stereoModel\"\n    \"\"\"\n    Three-dimensional view formed by the intersecting homologous rays of\n    an overlapping pair of images.\n    \"\"\"\n\n    VIDEO = \"video\"\n    \"\"\"Scene from a video recording.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.GRID","title":"<code>GRID = 'grid'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Grid data are used to represent geographic data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.STEREO_MODEL","title":"<code>STEREO_MODEL = 'stereoModel'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Three-dimensional view formed by the intersecting homologous rays of an overlapping pair of images.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.TEXT_TABLE","title":"<code>TEXT_TABLE = 'textTable'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Textual or tabular data are used to represent geographic data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.TIN","title":"<code>TIN = 'tin'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Triangulated irregular network.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.VECTOR","title":"<code>VECTOR = 'vector'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Vector data are used to represent geographic data.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.SpatialRepresentationTypeCode.VIDEO","title":"<code>VIDEO = 'video'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Scene from a video recording.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode","title":"<code>TopologyLevelCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Degree of the complexity of the spatial relationships.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class TopologyLevelCode(Enum):\n    \"\"\"Degree of the complexity of the spatial relationships.\"\"\"\n\n    GEOMETRY_ONLY = \"geometryOnly\"\n    \"\"\"\n    Geometry objects without any additional structure which describes topology.\n    \"\"\"\n\n    TOPOLOGY_1D = \"topology1D\"\n    \"\"\"\n    1-Dimensional topological complex - commonly called \u201cchain-node\u201d topology.\n    \"\"\"\n\n    PLANAR_GRAPH = \"planarGraph\"\n    \"\"\"\n    1-Dimensional topological complex that is planar.\n\n    NOTE: A planar graph is a graph that can be drawn in a plane in such a way\n    that no two edges intersect except at a vertex.\n    \"\"\"\n\n    FULL_PLANAR_GRAPH = \"fullPlanarGraph\"\n    \"\"\"\n    2-Dimensional topological complex that is planar.\n\n    NOTE: A 2-dimensional topological complex is commonly called\n    \u201cfull topology\u201d in a cartographic 2D environment.\n    \"\"\"\n\n    SURFACE_GRAPH = \"surfaceGraph\"\n    \"\"\"\n    1-Dimensional topological complex that is isomorphic to a subset of\n    a surface.\n\n    NOTE: A geometric complex is isomorphic to a topological complex if their\n    elements are in a one-to-one, dimensional-and boundary-preserving\n    correspondence to one another.\n    \"\"\"\n\n    FULL_SURFACE_GRAPH = \"fullSurfaceGraph\"\n    \"\"\"\n    2-Dimensional topological complex that is isomorphic to a subset of\n    a surface.\n    \"\"\"\n\n    TOPOLOGY_3D = \"topology3D\"\n    \"\"\"\n    3-Dimensional topological complex.\n\n    NOTE: A topological complex is a collection of topological primitives that\n    are closed under the boundary operations.\n    \"\"\"\n\n    FULL_TOPOLOGY_3D = \"fullTopology3D\"\n    \"\"\"Complete coverage of a 3D Euclidean coordinate space.\"\"\"\n\n    ABSTRACT = \"abstract\"\n    \"\"\"Topological complex without any specified geometric realisation.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.ABSTRACT","title":"<code>ABSTRACT = 'abstract'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Topological complex without any specified geometric realisation.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.FULL_PLANAR_GRAPH","title":"<code>FULL_PLANAR_GRAPH = 'fullPlanarGraph'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>2-Dimensional topological complex that is planar.</p> <p>NOTE: A 2-dimensional topological complex is commonly called \u201cfull topology\u201d in a cartographic 2D environment.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.FULL_SURFACE_GRAPH","title":"<code>FULL_SURFACE_GRAPH = 'fullSurfaceGraph'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>2-Dimensional topological complex that is isomorphic to a subset of a surface.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.FULL_TOPOLOGY_3D","title":"<code>FULL_TOPOLOGY_3D = 'fullTopology3D'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Complete coverage of a 3D Euclidean coordinate space.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.GEOMETRY_ONLY","title":"<code>GEOMETRY_ONLY = 'geometryOnly'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geometry objects without any additional structure which describes topology.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.PLANAR_GRAPH","title":"<code>PLANAR_GRAPH = 'planarGraph'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>1-Dimensional topological complex that is planar.</p> <p>NOTE: A planar graph is a graph that can be drawn in a plane in such a way that no two edges intersect except at a vertex.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.SURFACE_GRAPH","title":"<code>SURFACE_GRAPH = 'surfaceGraph'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>1-Dimensional topological complex that is isomorphic to a subset of a surface.</p> <p>NOTE: A geometric complex is isomorphic to a topological complex if their elements are in a one-to-one, dimensional-and boundary-preserving correspondence to one another.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.TOPOLOGY_1D","title":"<code>TOPOLOGY_1D = 'topology1D'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>1-Dimensional topological complex - commonly called \u201cchain-node\u201d topology.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.TopologyLevelCode.TOPOLOGY_3D","title":"<code>TOPOLOGY_3D = 'topology3D'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>3-Dimensional topological complex.</p> <p>NOTE: A topological complex is a collection of topological primitives that are closed under the boundary operations.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.VectorSpatialRepresentation","title":"<code>VectorSpatialRepresentation</code>","text":"<p>               Bases: <code>SpatialRepresentation</code></p> <p>Information about the vector spatial objects in the resource.</p> Source code in <code>opengis/metadata/representation.py</code> <pre><code>class VectorSpatialRepresentation(SpatialRepresentation):\n    \"\"\"Information about the vector spatial objects in the resource.\"\"\"\n\n    @property\n    @abstractmethod\n    def topology_level(self) -&gt; Optional[TopologyLevelCode]:\n        \"\"\"\n        Code which identifies the degree of complexity of the spatial\n        relationships.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def geometric_objects(self) -&gt; Optional[Sequence[GeometricObjects]]:\n        \"\"\"Information about the geometric objects used in the resource.\"\"\"\n</code></pre>"},{"location":"metadata/representation/#opengis.metadata.representation.VectorSpatialRepresentation.geometric_objects","title":"<code>geometric_objects: Optional[Sequence[GeometricObjects]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the geometric objects used in the resource.</p>"},{"location":"metadata/representation/#opengis.metadata.representation.VectorSpatialRepresentation.topology_level","title":"<code>topology_level: Optional[TopologyLevelCode]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Code which identifies the degree of complexity of the spatial relationships.</p>"},{"location":"metadata/service/","title":"<code>service</code> module","text":"<p>This is the <code>service</code> module.</p> <p>This module contains geographic metadata structures regarding data services derived from the ISO 19115-1:2014 international standard.</p>"},{"location":"metadata/service/#opengis.metadata.service.CoupledResource","title":"<code>CoupledResource</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Links a given operationName (mandatory attribute of <code>OperationMetadata</code>) with a dataset identified by an 'identifier'.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class CoupledResource(ABC):\n    \"\"\"\n    Links a given operationName (mandatory attribute of `OperationMetadata`)\n    with a dataset identified by an 'identifier'.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def scoped_name(self) -&gt; Optional[ScopedName]:\n        \"\"\"\n        Scoped identifier of the resource in the context of the given service\n        instance.\n\n        Links a given `operation_name` (mandatory attribute of\n        `OperationMetadata` with a resource identified by an `Identifier`.\n\n        NOTE: name of the resources (i.e. dataset) as it is used by\n        a service instance\n\n        Example: layer name or `feature_type_name`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource_reference(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Reference to the dataset on which the service operates.\n\n        NOTE: For one resource either `resource` or `resource_reference`\n        should be used but not both for the same resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def resource(self) -&gt; Optional[Sequence[DataIdentification]]:\n        \"\"\"\n        The tightly coupled resource.\n\n        NOTE 1: This attribute should be implemented by reference.\n\n        NOTE 2: For one resource either `resource` or `resource_reference`\n        should be used but not both for the same resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation(self) -&gt; Optional['OperationMetadata']:\n        \"\"\"\n        The service operation.\n\n        NOTE: This attribute should be implemented by reference.\n        \"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.CoupledResource.operation","title":"<code>operation: Optional[OperationMetadata]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The service operation.</p> <p>NOTE: This attribute should be implemented by reference.</p>"},{"location":"metadata/service/#opengis.metadata.service.CoupledResource.resource","title":"<code>resource: Optional[Sequence[DataIdentification]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The tightly coupled resource.</p> <p>NOTE 1: This attribute should be implemented by reference.</p> <p>NOTE 2: For one resource either <code>resource</code> or <code>resource_reference</code> should be used but not both for the same resource.</p>"},{"location":"metadata/service/#opengis.metadata.service.CoupledResource.resource_reference","title":"<code>resource_reference: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to the dataset on which the service operates.</p> <p>NOTE: For one resource either <code>resource</code> or <code>resource_reference</code> should be used but not both for the same resource.</p>"},{"location":"metadata/service/#opengis.metadata.service.CoupledResource.scoped_name","title":"<code>scoped_name: Optional[ScopedName]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Scoped identifier of the resource in the context of the given service instance.</p> <p>Links a given <code>operation_name</code> (mandatory attribute of <code>OperationMetadata</code> with a resource identified by an <code>Identifier</code>.</p> <p>NOTE: name of the resources (i.e. dataset) as it is used by a service instance</p> <p>Example: layer name or <code>feature_type_name</code>.</p>"},{"location":"metadata/service/#opengis.metadata.service.CouplingType","title":"<code>CouplingType</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Class of information to which the referencing entity applies.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class CouplingType(Enum):\n    \"\"\"Class of information to which the referencing entity applies.\"\"\"\n\n    LOOSE = \"loose\"\n    \"\"\"\n    Service instance is loosely coupled with a data instance,\n    i.e. no `DataIdentification` class has to be described.\n    \"\"\"\n\n    MIXED = \"mixed\"\n    \"\"\"\n    Service instance is mixed coupled with a data instance,\n\n    i.e. `DataIdentification` describes the associated data\n    instance and additionally the service instance might work\n    with other external data instances.\n    \"\"\"\n\n    TIGHT = \"tight\"\n    \"\"\"\n    Service instance is tightly coupled with a data instance,\n    i.e. `DataIdentification` class MUST be described.\n    \"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.CouplingType.LOOSE","title":"<code>LOOSE = 'loose'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Service instance is loosely coupled with a data instance, i.e. no <code>DataIdentification</code> class has to be described.</p>"},{"location":"metadata/service/#opengis.metadata.service.CouplingType.MIXED","title":"<code>MIXED = 'mixed'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Service instance is mixed coupled with a data instance,</p> <p>i.e. <code>DataIdentification</code> describes the associated data instance and additionally the service instance might work with other external data instances.</p>"},{"location":"metadata/service/#opengis.metadata.service.CouplingType.TIGHT","title":"<code>TIGHT = 'tight'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Service instance is tightly coupled with a data instance, i.e. <code>DataIdentification</code> class MUST be described.</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList","title":"<code>DCPList</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Class of information to which the referencing entity applies.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class DCPList(Enum):\n    \"\"\"Class of information to which the referencing entity applies.\"\"\"\n    XML = \"XML\"\n    \"Extensible Markup Language\"\n\n    CORBA = \"CORBA\"\n    \"\"\"Common Object request Broker Architecture\"\"\"\n\n    JAVA = \"JAVA\"\n    \"\"\"Object-oriented programming language\"\"\"\n\n    COM = \"COM\"\n    \"\"\"Component Object Model\"\"\"\n\n    SQL = \"SQL\"\n    \"\"\"Structured Query Language\"\"\"\n\n    SOAP = \"SOAP\"\n    \"\"\"Simple Object Access Protocol\"\"\"\n\n    Z3950 = \"Z3950\"\n    \"\"\"ISO 23950\"\"\"\n\n    HTTP = \"HTTP\"\n    \"\"\"Hypertext Transfer Protocol\"\"\"\n\n    FTP = \"FTP\"\n    \"\"\"File Transfer Protocol\"\"\"\n\n    WEB_SERVICES = \"WebServices\"\n    \"\"\"Web service\"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.COM","title":"<code>COM = 'COM'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Component Object Model</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.CORBA","title":"<code>CORBA = 'CORBA'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Common Object request Broker Architecture</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.FTP","title":"<code>FTP = 'FTP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>File Transfer Protocol</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.HTTP","title":"<code>HTTP = 'HTTP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Hypertext Transfer Protocol</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.JAVA","title":"<code>JAVA = 'JAVA'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Object-oriented programming language</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.SOAP","title":"<code>SOAP = 'SOAP'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Simple Object Access Protocol</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.SQL","title":"<code>SQL = 'SQL'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Structured Query Language</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.WEB_SERVICES","title":"<code>WEB_SERVICES = 'WebServices'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Web service</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.XML","title":"<code>XML = 'XML'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Extensible Markup Language</p>"},{"location":"metadata/service/#opengis.metadata.service.DCPList.Z3950","title":"<code>Z3950 = 'Z3950'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ISO 23950</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationChainMetadata","title":"<code>OperationChainMetadata</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Operation Chain Information.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class OperationChainMetadata(ABC):\n    \"\"\"Operation Chain Information.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; str:\n        \"\"\"The name, as used by the service for this chain.\"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"\n        A narrative explanation of the services in the chain and resulting\n        output.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation(self) -&gt; Sequence['OperationMetadata']:\n        \"\"\"(Ordered) information about the operation applied by the chain.\"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.OperationChainMetadata.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A narrative explanation of the services in the chain and resulting output.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationChainMetadata.name","title":"<code>name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name, as used by the service for this chain.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationChainMetadata.operation","title":"<code>operation: Sequence[OperationMetadata]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>(Ordered) information about the operation applied by the chain.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata","title":"<code>OperationMetadata</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Describes the signature of one and only one method provided by the service.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class OperationMetadata(ABC):\n    \"\"\"\n    Describes the signature of one and only one method provided by the service.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def operation_name(self) -&gt; str:\n        \"\"\"A unique identifier for this interface.\"\"\"\n\n    @property\n    @abstractmethod\n    def distributed_computing_platform(self) -&gt; Sequence[DCPList]:\n        \"\"\"\n        Distributed computing platforms on which the operation has been\n        implemented.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation_description(self) -&gt; Optional[str]:\n        \"\"\"\n        Free text description of the intent of the operation and the results\n        of the operation.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def invocation_name(self) -&gt; Optional[str]:\n        \"\"\"\n        The name used to invoke this interface within the context of the DCP.\n        The name is identical for all DCPs.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def connect_point(self) -&gt; Sequence[OnlineResource]:\n        \"\"\"Handle for accessing the service interface.\"\"\"\n\n    @property\n    @abstractmethod\n    def parameters(self) -&gt; Optional[Parameter]:\n        \"\"\"The parameters that are required for this interface.\"\"\"\n\n    @property\n    @abstractmethod\n    def depends_on(self) -&gt; Optional[Sequence['OperationMetadata']]:\n        \"\"\"\n        List of operation that must be completed immediately before current\n        operation is invoked.\n        \"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.connect_point","title":"<code>connect_point: Sequence[OnlineResource]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Handle for accessing the service interface.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.depends_on","title":"<code>depends_on: Optional[Sequence[OperationMetadata]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>List of operation that must be completed immediately before current operation is invoked.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.distributed_computing_platform","title":"<code>distributed_computing_platform: Sequence[DCPList]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Distributed computing platforms on which the operation has been implemented.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.invocation_name","title":"<code>invocation_name: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name used to invoke this interface within the context of the DCP. The name is identical for all DCPs.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.operation_description","title":"<code>operation_description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Free text description of the intent of the operation and the results of the operation.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.operation_name","title":"<code>operation_name: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A unique identifier for this interface.</p>"},{"location":"metadata/service/#opengis.metadata.service.OperationMetadata.parameters","title":"<code>parameters: Optional[Parameter]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The parameters that are required for this interface.</p>"},{"location":"metadata/service/#opengis.metadata.service.Parameter","title":"<code>Parameter</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Parameter information.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class Parameter(ABC):\n    \"\"\"Parameter information.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; MemberName:\n        \"\"\"The name, as used by the service, for this parameter.\"\"\"\n\n    @property\n    @abstractmethod\n    def direction(self) -&gt; ParameterDirection:\n        \"\"\"\n        Indication if the parameter is an input to the service, an output,\n        or both.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def description(self) -&gt; Optional[str]:\n        \"\"\"A narrative explanation of the role of the parameter.\"\"\"\n\n    @property\n    @abstractmethod\n    def optionality(self) -&gt; bool:\n        \"\"\"Indication if the parameter is required.\"\"\"\n\n    @property\n    @abstractmethod\n    def repeatability(self) -&gt; bool:\n        \"\"\"\n        Indication if more than one value of the parameter may be provided.\n        \"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.Parameter.description","title":"<code>description: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A narrative explanation of the role of the parameter.</p>"},{"location":"metadata/service/#opengis.metadata.service.Parameter.direction","title":"<code>direction: ParameterDirection</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication if the parameter is an input to the service, an output, or both.</p>"},{"location":"metadata/service/#opengis.metadata.service.Parameter.name","title":"<code>name: MemberName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The name, as used by the service, for this parameter.</p>"},{"location":"metadata/service/#opengis.metadata.service.Parameter.optionality","title":"<code>optionality: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication if the parameter is required.</p>"},{"location":"metadata/service/#opengis.metadata.service.Parameter.repeatability","title":"<code>repeatability: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indication if more than one value of the parameter may be provided.</p>"},{"location":"metadata/service/#opengis.metadata.service.ParameterDirection","title":"<code>ParameterDirection</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Identifies the parameter as an input to the process, or an output, or both.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class ParameterDirection(Enum):\n    \"\"\"\n    Identifies the parameter as an input to the process, or an output,\n    or both.\n    \"\"\"\n\n    IN = \"in\"\n    \"\"\"Input to a process.\"\"\"\n\n    OUT = \"out\"\n    \"\"\"Output of a process.\"\"\"\n\n    IN_OUT = \"in/out\"\n    \"\"\"Both an input and an output.\"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.ParameterDirection.IN","title":"<code>IN = 'in'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Input to a process.</p>"},{"location":"metadata/service/#opengis.metadata.service.ParameterDirection.IN_OUT","title":"<code>IN_OUT = 'in/out'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Both an input and an output.</p>"},{"location":"metadata/service/#opengis.metadata.service.ParameterDirection.OUT","title":"<code>OUT = 'out'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Output of a process.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification","title":"<code>ServiceIdentification</code>","text":"<p>               Bases: <code>Identification</code></p> <p>Identification of capabilities which a service provider makes available to a service user through a set of interfaces that define a behaviour.</p> <p>NOTE: See ISO 19119 for further information.</p> Source code in <code>opengis/metadata/service.py</code> <pre><code>class ServiceIdentification(Identification):\n    \"\"\"\n    Identification of capabilities which a service provider makes available to\n    a service user through a set of interfaces that define a behaviour.\n\n    NOTE: See ISO 19119 for further information.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def service_type(self) -&gt; GenericName:\n        \"\"\"\n        A service type name, e.g., 'discovery', 'view', 'download',\n        'transformation', or 'invoke'.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def service_type_version(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Provide for searching based on the version of serviceType.\n\n        For example, we may only be interested in OGC Catalogue V1.1 services.\n        If version is maintained as a separate attribute, users can easily\n        search for all services of a type regardless of the version.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def access_properties(self) -&gt; Optional[StandardOrderProcess]:\n        \"\"\"\n        Information about the availability of the service, including 'fees',\n        'planned', 'available date and time', 'ordering instructions',\n        and 'turnaround'.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coupling_type(self) -&gt; Optional[CouplingType]:\n        \"\"\"\n        Type of coupling between service and associated data (if exists).\n\n        MANDATORY: if `coupled_resource` is not `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coupled_resource(self) -&gt; Optional[Sequence[CoupledResource]]:\n        \"\"\"\n        Further description of the data coupling in the case of tightly\n        coupled services.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operated_dataset(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"\n        Provides a reference to the dataset on which the service operates.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def profile(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Profile to which the service adheres.\"\"\"\n\n    @property\n    @abstractmethod\n    def service_standard(self) -&gt; Optional[Sequence[Citation]]:\n        \"\"\"Standard to which the service adheres.\"\"\"\n\n    @property\n    @abstractmethod\n    def contains_operations(self) -&gt; Optional[Sequence['OperationMetadata']]:\n        \"\"\"\n        Provides information about the operationsthat comprise the service.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operates_on(self) -&gt; Optional[Sequence[DataIdentification]]:\n        \"\"\"\n        Provides information about the resources on which the service operates.\n\n        NOTE: Either `operated_dataset` or `operates_on`may be used but not\n            both for the same resource.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def contains_chain(self) -&gt; Optional[Sequence[OperationChainMetadata]]:\n        \"\"\"Provide infromation about the chain applied by the resource.\"\"\"\n</code></pre>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.access_properties","title":"<code>access_properties: Optional[StandardOrderProcess]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about the availability of the service, including 'fees', 'planned', 'available date and time', 'ordering instructions', and 'turnaround'.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.contains_chain","title":"<code>contains_chain: Optional[Sequence[OperationChainMetadata]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provide infromation about the chain applied by the resource.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.contains_operations","title":"<code>contains_operations: Optional[Sequence[OperationMetadata]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the operationsthat comprise the service.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.coupled_resource","title":"<code>coupled_resource: Optional[Sequence[CoupledResource]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Further description of the data coupling in the case of tightly coupled services.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.coupling_type","title":"<code>coupling_type: Optional[CouplingType]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of coupling between service and associated data (if exists).</p> <p>MANDATORY: if <code>coupled_resource</code> is not <code>None</code>.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.operated_dataset","title":"<code>operated_dataset: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides a reference to the dataset on which the service operates.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.operates_on","title":"<code>operates_on: Optional[Sequence[DataIdentification]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provides information about the resources on which the service operates.</p> Either <code>operated_dataset</code> or <code>operates_on</code>may be used but not <p>both for the same resource.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.profile","title":"<code>profile: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Profile to which the service adheres.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.service_standard","title":"<code>service_standard: Optional[Sequence[Citation]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Standard to which the service adheres.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.service_type","title":"<code>service_type: GenericName</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A service type name, e.g., 'discovery', 'view', 'download', 'transformation', or 'invoke'.</p>"},{"location":"metadata/service/#opengis.metadata.service.ServiceIdentification.service_type_version","title":"<code>service_type_version: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Provide for searching based on the version of serviceType.</p> <p>For example, we may only be interested in OGC Catalogue V1.1 services. If version is maintained as a separate attribute, users can easily search for all services of a type regardless of the version.</p>"},{"location":"referencing/common/","title":"<code>common</code>module","text":"<p>This is the <code>common</code> module.</p> <p>This module contains geographic metadata structures derived from the Common Classes package in the ISO 19111:2019 international standard.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject","title":"<code>IdentifiedObject</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Identifications of a CRS-related object.</p> Source code in <code>opengis/referencing/common.py</code> <pre><code>class IdentifiedObject(ABC):\n    \"\"\"Identifications of a CRS-related object.\"\"\"\n\n    @property\n    @abstractmethod\n    def name(self) -&gt; Identifier:\n        \"\"\"The primary name by which this object is identified.\"\"\"\n\n    @property\n    @abstractmethod\n    def identifier(self) -&gt; Optional[Sequence[Identifier]]:\n        \"\"\"\n        An identifier which references elsewhere the object's defining\n        information; alternatively an identifier by which this object can be\n        referenced.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def alias(self) -&gt; Optional[Sequence[GenericName]]:\n        \"\"\"An alternative name by which this object is identified.\"\"\"\n\n    @property\n    @abstractmethod\n    def remarks(self) -&gt; Optional[Sequence[str]]:\n        \"\"\"\n        Comments on or information about this object, including data source\n        information.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def domain(self) -&gt; Optional[Sequence[ObjectDomain]]:\n        \"\"\"The scope and validity of the object.\"\"\"\n\n    @abstractmethod\n    def to_wkt(self) -&gt; str:\n        \"\"\"Returns a Well-Known Text (WKT) for this object.\"\"\"\n</code></pre>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.alias","title":"<code>alias: Optional[Sequence[GenericName]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>An alternative name by which this object is identified.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.domain","title":"<code>domain: Optional[Sequence[ObjectDomain]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The scope and validity of the object.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.identifier","title":"<code>identifier: Optional[Sequence[Identifier]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>An identifier which references elsewhere the object's defining information; alternatively an identifier by which this object can be referenced.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.name","title":"<code>name: Identifier</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The primary name by which this object is identified.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.remarks","title":"<code>remarks: Optional[Sequence[str]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Comments on or information about this object, including data source information.</p>"},{"location":"referencing/common/#opengis.referencing.common.IdentifiedObject.to_wkt","title":"<code>to_wkt()</code>  <code>abstractmethod</code>","text":"<p>Returns a Well-Known Text (WKT) for this object.</p> Source code in <code>opengis/referencing/common.py</code> <pre><code>@abstractmethod\ndef to_wkt(self) -&gt; str:\n    \"\"\"Returns a Well-Known Text (WKT) for this object.\"\"\"\n</code></pre>"},{"location":"referencing/common/#opengis.referencing.common.ObjectDomain","title":"<code>ObjectDomain</code>","text":"<p>               Bases: <code>ABC</code></p> <p>The scope and validity of a CRS-related object.</p> Source code in <code>opengis/referencing/common.py</code> <pre><code>class ObjectDomain(ABC):\n    \"\"\"The scope and validity of a CRS-related object.\"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; str:\n        \"\"\"\n        Description of usage, or limitations of usage, for which this object\n        is valid. If unknown, enter \"not known\".\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def domain_of_validity(self) -&gt; Extent:\n        \"\"\"The spatial and temporal extent in which this object is valid.\"\"\"\n</code></pre>"},{"location":"referencing/common/#opengis.referencing.common.ObjectDomain.domain_of_validity","title":"<code>domain_of_validity: Extent</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The spatial and temporal extent in which this object is valid.</p>"},{"location":"referencing/common/#opengis.referencing.common.ObjectDomain.scope","title":"<code>scope: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of usage, or limitations of usage, for which this object is valid. If unknown, enter \"not known\".</p>"},{"location":"referencing/coordinate/","title":"<code>coordinate</code> module","text":"<p>This is the <code>coordinates</code> module.</p> <p>This module contains geographic metadata structures derived from the Coordinates package in the ISO 19111:2019 international standard.</p>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.CoordinateMetadata","title":"<code>CoordinateMetadata</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Metadata required to reference coordinates.</p> Source code in <code>opengis/referencing/coordinate.py</code> <pre><code>class CoordinateMetadata(ABC):\n    \"\"\"\n    Metadata required to reference coordinates.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_referencea_system(self) -&gt; CoordinateReferenceSystem:\n        \"\"\"\n        Identifier of the coordinate reference system to which a coordinate\n        set is referenced.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_epoch(self) -&gt; Optional[DataEpoch]:\n        \"\"\"\n        Epoch at which coordinate referenced to a dynamic CRS are valid.\n\n        MANDATORY: if the coordinate reference system is dynamic.\n        \"\"\"\n</code></pre>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.CoordinateMetadata.coordinate_epoch","title":"<code>coordinate_epoch: Optional[DataEpoch]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Epoch at which coordinate referenced to a dynamic CRS are valid.</p> <p>MANDATORY: if the coordinate reference system is dynamic.</p>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.CoordinateMetadata.coordinate_referencea_system","title":"<code>coordinate_referencea_system: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier of the coordinate reference system to which a coordinate set is referenced.</p>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.CoordinateSet","title":"<code>CoordinateSet</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Description of the coordinate tuples in a coordinate set. A single coordinate tuple is treated as a special case of coordinate set containing only one member.</p> Source code in <code>opengis/referencing/coordinate.py</code> <pre><code>class CoordinateSet(ABC):\n    \"\"\"\n    Description of the coordinate tuples in a coordinate set. A single\n    coordinate tuple is treated as a special case of coordinate set containing\n    only one member.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_tuple(self) -&gt; Sequence[DirectPosition]:\n        \"\"\"Position described by a coordinate tuple.\"\"\"\n</code></pre>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.CoordinateSet.coordinate_tuple","title":"<code>coordinate_tuple: Sequence[DirectPosition]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Position described by a coordinate tuple.</p>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.DataEpoch","title":"<code>DataEpoch</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Time attribute of a coordinate set that is referenced to a dynamic CRS.</p> Source code in <code>opengis/referencing/coordinate.py</code> <pre><code>class DataEpoch(ABC):\n    \"\"\"\n    Time attribute of a coordinate set that is referenced to a dynamic CRS.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_epoch(self) -&gt; Measure:\n        \"\"\"\n        The date at which coordinates are referenced to a dynamic coordinate\n        reference system, expressed as a decimal year in the Gregorian\n        calendar.\n\n        EXAMPLE: 2017-03-25 in the Gregorian calendar is epoch 2017.23.\n        \"\"\"\n</code></pre>"},{"location":"referencing/coordinate/#opengis.referencing.coordinate.DataEpoch.coordinate_epoch","title":"<code>coordinate_epoch: Measure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The date at which coordinates are referenced to a dynamic coordinate reference system, expressed as a decimal year in the Gregorian calendar.</p> <p>EXAMPLE: 2017-03-25 in the Gregorian calendar is epoch 2017.23.</p>"},{"location":"referencing/crs/","title":"<code>crs</code> module","text":"<p>This is the <code>crs</code> module.</p> <p>This module contains geographic metadata structures regarding coordinate referencing systems derived from the ISO 19111 international standard and ISO 19115-1:2014, including adendums A1(2018) and A2(2020).</p>"},{"location":"referencing/crs/#opengis.referencing.crs.CompoundCRS","title":"<code>CompoundCRS</code>","text":"<p>               Bases: <code>CoordinateReferenceSystem</code></p> <p>A coordinate reference system describing the position of points through two or more independent coordinate reference systems.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class CompoundCRS(CoordinateReferenceSystem):\n    \"\"\"\n    A coordinate reference system describing the position of points through\n    two or more independent coordinate reference systems.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def components(self) -&gt; Sequence[SingleCRS]:\n        \"\"\"\n        The ordered list of coordinate reference systems.\n\n        :return: The ordered list of coordinate reference systems.\n        :rtype: Sequence[SingleCRS]\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.CompoundCRS.components","title":"<code>components: Sequence[SingleCRS]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The ordered list of coordinate reference systems.</p> <p>:return: The ordered list of coordinate reference systems. :rtype: Sequence[SingleCRS]</p>"},{"location":"referencing/crs/#opengis.referencing.crs.CoordinateReferenceSystem","title":"<code>CoordinateReferenceSystem</code>","text":"<p>               Bases: <code>ReferenceSystem</code></p> <p>Abstract coordinate reference system, usually defined by a coordinate system and a datum.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class CoordinateReferenceSystem(ReferenceSystem):\n    \"\"\"\n    Abstract coordinate reference system, usually defined by a coordinate\n    system and a datum.\n    \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.DerivedCRS","title":"<code>DerivedCRS</code>","text":"<p>               Bases: <code>SingleCRS</code></p> <p>A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum).</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class DerivedCRS(SingleCRS):\n    \"\"\"\n    A coordinate reference system that is defined by its coordinate conversion\n    from another coordinate reference system (not by a datum).\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def base_crs(self) -&gt; CoordinateReferenceSystem:\n        \"\"\"\n        Returns the base coordinate reference system.\n\n        :return: The base coordinate reference system.\n        :rtype: CoordinateReferenceSystem\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def conversion_from_base(self):\n        \"\"\"\n        Returns the conversion from the base CRS to this CRS.\n\n        :return: The conversion from the base CRS.\n        :rtype: Conversion\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.DerivedCRS.base_crs","title":"<code>base_crs: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the base coordinate reference system.</p> <p>:return: The base coordinate reference system. :rtype: CoordinateReferenceSystem</p>"},{"location":"referencing/crs/#opengis.referencing.crs.DerivedCRS.conversion_from_base","title":"<code>conversion_from_base</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the conversion from the base CRS to this CRS.</p> <p>:return: The conversion from the base CRS. :rtype: Conversion</p>"},{"location":"referencing/crs/#opengis.referencing.crs.EngineeringCRS","title":"<code>EngineeringCRS</code>","text":"<p>               Bases: <code>SingleCRS</code></p> <p>A contextually local coordinate reference system.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class EngineeringCRS(SingleCRS):\n    \"\"\"\n    A contextually local coordinate reference system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; EngineeringDatum:\n        \"\"\"\n        Returns the datum, which must be an engineering one.\n\n        :return: The datum\n        :rtype: EngineeringDatum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.EngineeringCRS.datum","title":"<code>datum: EngineeringDatum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum, which must be an engineering one.</p> <p>:return: The datum :rtype: EngineeringDatum</p>"},{"location":"referencing/crs/#opengis.referencing.crs.GeodeticCRS","title":"<code>GeodeticCRS</code>","text":"<p>               Bases: <code>SingleCRS</code></p> <p>A coordinate reference system associated with a geodetic reference frame.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class GeodeticCRS(SingleCRS):\n    \"\"\"\n    A coordinate reference system associated with a geodetic reference frame.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; GeodeticDatum:\n        \"\"\"\n        Returns the datum, which must be geodetic.\n\n        :return: The datum.\n        :rtype: GeodeticDatum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.GeodeticCRS.datum","title":"<code>datum: GeodeticDatum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum, which must be geodetic.</p> <p>:return: The datum. :rtype: GeodeticDatum</p>"},{"location":"referencing/crs/#opengis.referencing.crs.GeographicCRS","title":"<code>GeographicCRS</code>","text":"<p>               Bases: <code>GeodeticCRS</code></p> <p>A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class GeographicCRS(GeodeticCRS):\n    \"\"\"\n    A coordinate reference system based on an ellipsoidal approximation of the\n    geoid; this provides an accurate representation of the geometry of\n    geographic features for a large portion of the earth's surface.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; EllipsoidalCS:\n        \"\"\"\n        Returns the coordinate system, which must be ellipsoidal.\n\n        :return: The coordinate system.\n        :rtype: EllipsoidalCS\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.GeographicCRS.coordinate_system","title":"<code>coordinate_system: EllipsoidalCS</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the coordinate system, which must be ellipsoidal.</p> <p>:return: The coordinate system. :rtype: EllipsoidalCS</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ProjectedCRS","title":"<code>ProjectedCRS</code>","text":"<p>               Bases: <code>DerivedCRS</code></p> <p>A 2D coordinate reference system used to approximate the shape of the Earth on a planar surface.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class ProjectedCRS(DerivedCRS):\n    \"\"\"\n    A 2D coordinate reference system used to approximate the shape of the\n    Earth on a planar surface.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def conversion_from_base(self):\n        \"\"\"\n        Returns the map projection from the base CRS to this CRS.\n\n        :return: The conversion from the base CRS.\n        :rtype: Conversion\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def base_crs(self) -&gt; GeographicCRS:\n        \"\"\"\n        Returns the base coordinate reference system, which must be geographic.\n\n        :return: The base coordinate reference system.\n        :rtype: GeographicCRS\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; CartesianCS:\n        \"\"\"\n        Returns the coordinate system, which must be cartesian.\n\n        :return: The coordinate system.\n        :rtype: CartesianCS\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; GeodeticDatum:\n        \"\"\"\n        Returns the datum.\n\n        :return: The datum.\n        :rtype: GeodeticDatum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.ProjectedCRS.base_crs","title":"<code>base_crs: GeographicCRS</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the base coordinate reference system, which must be geographic.</p> <p>:return: The base coordinate reference system. :rtype: GeographicCRS</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ProjectedCRS.conversion_from_base","title":"<code>conversion_from_base</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the map projection from the base CRS to this CRS.</p> <p>:return: The conversion from the base CRS. :rtype: Conversion</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ProjectedCRS.coordinate_system","title":"<code>coordinate_system: CartesianCS</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the coordinate system, which must be cartesian.</p> <p>:return: The coordinate system. :rtype: CartesianCS</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ProjectedCRS.datum","title":"<code>datum: GeodeticDatum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum.</p> <p>:return: The datum. :rtype: GeodeticDatum</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystem","title":"<code>ReferenceSystem</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>Description of a spatial and temporal reference system used by a dataset.</p> <p>This class is derived from MD_ReferenceSystem described in the ISO 19115-1:2014, including addendums A1(2018) and A2(2020), and ISO 19115-2:2019, including addendum A1(2022), international standards.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class ReferenceSystem(IdentifiedObject):\n    \"\"\"\n    Description of a spatial and temporal reference system used by a dataset.\n\n    This class is derived from MD_ReferenceSystem described in the\n    ISO 19115-1:2014, including addendums A1(2018) and A2(2020),\n    and ISO 19115-2:2019, including addendum A1(2022), international standards.\n    \"\"\"\n    @property\n    @abstractmethod\n    def reference_system_identifier(self) -&gt; Optional[Identifier]:\n        \"\"\"\n        Identifier and codespace for reference system.\n\n        NOTE: Refer to to SC_CRS in ISO 19111 and ISO 19111-2 when coordinate\n        reference system information is not given through reference system\n        identifier.\n\n        Example: EPSG::4326\n\n        MANDATORY: if `crs` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_reference_system(self) -&gt; \\\n            Optional['CoordinateReferenceSystem']:\n        \"\"\"\n        Full description of the coordinate reference system from which a set\n        of coordinates is referenced.\n\n        MANDATORY: if `reference_system_identifier` is `None`.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_epoch(self) -&gt; Optional[DataEpoch]:\n        \"\"\"\n        The epoch from which coordinates in a dynamic coordinate reference\n        system are referenced.\n\n        MANDATORY: if the coordinate reference system is dynamic.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def reference_system_type(self) -&gt; ReferenceSystemTypeCode:\n        \"\"\"\n        Type of reference system used.\n\n        Example: `COMPOUND_GEOGRAPHIC2D_PARAMETRIC`\n        (compoundGeographic2DParametric)\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystem.coordinate_epoch","title":"<code>coordinate_epoch: Optional[DataEpoch]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The epoch from which coordinates in a dynamic coordinate reference system are referenced.</p> <p>MANDATORY: if the coordinate reference system is dynamic.</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystem.coordinate_reference_system","title":"<code>coordinate_reference_system: Optional[CoordinateReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Full description of the coordinate reference system from which a set of coordinates is referenced.</p> <p>MANDATORY: if <code>reference_system_identifier</code> is <code>None</code>.</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystem.reference_system_identifier","title":"<code>reference_system_identifier: Optional[Identifier]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Identifier and codespace for reference system.</p> <p>NOTE: Refer to to SC_CRS in ISO 19111 and ISO 19111-2 when coordinate reference system information is not given through reference system identifier.</p> <p>Example: EPSG::4326</p> <p>MANDATORY: if <code>crs</code> is <code>None</code>.</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystem.reference_system_type","title":"<code>reference_system_type: ReferenceSystemTypeCode</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Type of reference system used.</p> <p>Example: <code>COMPOUND_GEOGRAPHIC2D_PARAMETRIC</code> (compoundGeographic2DParametric)</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode","title":"<code>ReferenceSystemTypeCode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Defines type of reference system used.</p> <p>This class is derived from ISO 19115-1:2014, including adendums A1(2018) and A2(2020).</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class ReferenceSystemTypeCode(Enum):\n    \"\"\"\n    Defines type of reference system used.\n\n    This class is derived from ISO 19115-1:2014, including adendums A1(2018)\n    and A2(2020).\n    \"\"\"\n\n    COMPOUND_ENGINEERING_PARAMETRIC = \"compoundEngineeringParametric\"\n    \"\"\"\n    Compound spatio-parametric coordinate reference system containing an\n    engineering coordinate reference system and a parametric reference system.\n\n    EXAMPLE: [local] x, y, pressure\n    \"\"\"\n\n    COMPOUND_ENGINEERING_PARAMETRIC_TEMPORAL = \\\n        \"compoundEngineeringParametricTemporal\"\n    \"\"\"\n    Compound spatio-parametric-temporal coordinate reference system containing,\n    an engineering coordinate reference system, a parametric reference system,\n    and a temporal coordinate reference system.\n\n    EXAMPLE: [local] x, y, pressure, time\n    \"\"\"\n\n    COMPOUND_ENGINEERING_TEMPORAL = \"compoundEngineeringTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing,\n    an engineering coordinate reference system and a temporal coordinate\n    reference system.\n\n    EXAMPLE: [local] x, y, time\n    \"\"\"\n\n    COMPOUND_ENGINEERING_VERTICAL = \"compoundEngineeringVertical\"\n    \"\"\"\n    Compound spatial coordinate reference system containing a horizontal\n    engineering coordinate reference system and a vertical coordinate\n    reference system.\n\n    EXAMPLE: [local] x, y, height\n    \"\"\"\n\n    COMPOUND_ENGINEERING_VERTICAL_TEMPORAL = \\\n        \"compoundEngineeringVerticalTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing an\n    engineering, a vertical, and a temporal coordinate reference system.\n\n    EXAMPLE: [local] x, y, height, time\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC2D_PARAMETRIC = \"compoundGeographic2DParametric\"\n    \"\"\"\n    Compound spatio-parametric coordinate reference system containing a 2\n    dimensional geographic horizontal coordinate reference system and a\n    parametric reference system.\n\n    EXAMPLE: latitude, longitude, pressure\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC2D_PARAMETRIC_TEMPORAL = \\\n        \"compoundGeographic2DParametricTemporal\"\n    \"\"\"\n    Compound spatio-parametric-temporal coordinate reference system containing\n    a 2 dimensional geographic horizontal, a parametric, and a temporal\n    reference system.\n\n    EXAMPLE: latitude, longitude, pressure, time\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC2D_TEMPORAL = \"compoundGeographic2DTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing\n    a 2 dimensional geographic horizontal coordinate reference system and a\n    temporal reference system.\n\n    EXAMPLE: latitude, longitude, time\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC2D_VERTICAL = \"compoundGeographic2DVertical\"\n    \"\"\"\n    Compound coordinate reference system in which one constituent coordinate\n    reference system ais a horizontal geodetic coordinate reference system and\n    one is a vertical reference system.\n\n    EXAMPLE: latitude, longitude, [gravity-related] height or depth\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC2D_VERTICAL_TEMPORAL = \\\n        \"compoundGeographic2DVerticalTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing a\n    2 dimensional geographic horizontal, a vertical, and a temporal coordinate\n    reference system.\n\n    EXAMPLE: latitude, longitude, height, time\n    \"\"\"\n\n    COMPOUND_GEOGRAPHIC3D_TEMPORAL = \"compoundGeographic3DTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing a\n    3 dimensional geographic and a temporal coordinate reference system.\n\n    EXAMPLE: latitude, longitude, ellipsoidal height, time\n    \"\"\"\n\n    COMPOUND_PROJECTED2D_PARAMETRIC = \"compoundProjected2DParametric\"\n    \"\"\"\n    Compound spatio-parametric coordinate reference system containing a\n    projected horizontal coordinate reference system and a parametric\n    reference system.\n\n    EXAMPLE: easting, northing, density\n    \"\"\"\n\n    COMPOUND_PROJECTED2D_PARAMETRIC_TEMPORAL = \\\n        \"compoundProjected2DParametricTemporal\"\n    \"\"\"\n    Compound spatio-parametric-temporal coordinate reference system containing\n    a projected horizontal, a parametric, and a temporal coordinate reference\n    system.\n\n    EXAMPLE: easting, northing, density, time\n    \"\"\"\n\n    COMPOUND_PROJECTED_TEMPORAL = \"compoundProjectedTemporal\"\n    \"\"\"\n    Compound spatial reference system containing a horizontal projected\n    coordinate reference system and a vertical coordinate reference system.\n\n    EXAMPLE: easting, northing, [gravity-related] height or depth\n    \"\"\"\n\n    COMPOUND_PROJECTED_VERTICAL = \"compoundProjectedVertical\"\n    \"\"\"\n    Compound spatial reference system containing a horizontal projected\n    coordinate reference system and a vertical coordinate reference system.\n\n    EXAMPLE: easting, northing, [gravity-related] height or depth\n    \"\"\"\n\n    COMPOUND_PROJECTED_VERTICAL_TEMPORAL = \"compoundProjectedVerticalTemporal\"\n    \"\"\"\n    Compound spatio-temporal coordinate reference system containing a\n    projected horizontal, a vertical, and a temporal coordinate reference\n    system.\n\n    EXAMPLE: easting, northing, height, time\n    \"\"\"\n\n    ENGINEERING = \"engineering\"\n    \"\"\"\n    Coordinate reference system based on an engineering datum (datum\n    describing the relationship of a coordinate system to a local reference).\n\n    EXAMPLE: [local] x, y\n    \"\"\"\n\n    ENGINEERING_DESIGN = \"engineeringDesign\"\n    \"\"\"\n    Engineering coordinate reference system in which the base representation\n    of a moving object is specified.\n\n    EXAMPLE: [local] x, y\n    \"\"\"\n\n    ENGINEERING_IMAGE = \"engineeringImage\"\n    \"\"\"\n    Coordinate reference system based on an image datum (engineering datum\n    which defines the relationship of a coordinate system to an image).\n\n    EXAMPLE: row, column\n    \"\"\"\n\n    GEODETIC_GEOCENTRIC = \"geodeticGeocentric\"\n    \"\"\"\n    Geodetic coordinate reference system having a Cartesian 3D coordinate\n    system.\n\n    EXAMPLE: [geocentric] X, Y, Z\n    \"\"\"\n\n    GEODETIC_GEOGRAPHIC_2D = \"geodeticGeographic2D\"\n    \"\"\"\n    Geodetic coordinate reference system having an ellipsoidal 2D coordinate\n    system.\n\n    EXAMPLE: latitude, longitude\n    \"\"\"\n\n    GEODETIC_GEOGRAPHIC_3D = \"geodeticGeographic3D\"\n    \"\"\"\n    Geodetic coordinate reference system having an ellipsoidal 3D coordinate\n    system.\n\n    EXAMPLE: latitude, longitude, ellipsoidal height\n    \"\"\"\n\n    GEOGRAPHIC_IDENTIFIER = \"geographicIdentifier\"\n    \"\"\"\n    Spatial reference in the form of a label or code that identifies a\n    location.\n\n    EXAMPLE: post coade\n    \"\"\"\n\n    LINEAR = \"linear\"\n    \"\"\"\n    Reference system that identifies a location by reference to a segment of a\n    linear geographic feature and distance along that segment from a given\n    point.\n\n    EXAMPLE: x km along road\n    \"\"\"\n\n    PARAMETRIC = \"parametric\"\n    \"\"\"\n    Coordinate reference system based on a parametric datum (datum describing\n    the relationship of a parametric coordinate system to an object).\n\n    EXAMPLE: pressure\n    \"\"\"\n\n    PROJECTED = \"projected\"\n    \"\"\"\n    Coordinate reference system derived from a two-dimensional geodetic\n    coordinate reference system by applying a map projection.\n\n    EXAMPLE: easting, northing\n    \"\"\"\n\n    TEMPORAL = \"temporal\"\n    \"\"\"\n    Reference system against which time is measured.\n\n    EXAMPLE: time\n    \"\"\"\n\n    VERTICAL = \"vertical\"\n    \"\"\"\n    One-dimensional coordinate reference system based on a vertical datum\n    (datum describing the relation of gravity-related heights or depths\n    to the Earth).\n\n    EXAMPLE: [gravity-related] height or depth\n    \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_ENGINEERING_PARAMETRIC","title":"<code>COMPOUND_ENGINEERING_PARAMETRIC = 'compoundEngineeringParametric'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric coordinate reference system containing an engineering coordinate reference system and a parametric reference system.</p> <p>EXAMPLE: [local] x, y, pressure</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_ENGINEERING_PARAMETRIC_TEMPORAL","title":"<code>COMPOUND_ENGINEERING_PARAMETRIC_TEMPORAL = 'compoundEngineeringParametricTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric-temporal coordinate reference system containing, an engineering coordinate reference system, a parametric reference system, and a temporal coordinate reference system.</p> <p>EXAMPLE: [local] x, y, pressure, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_ENGINEERING_TEMPORAL","title":"<code>COMPOUND_ENGINEERING_TEMPORAL = 'compoundEngineeringTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing, an engineering coordinate reference system and a temporal coordinate reference system.</p> <p>EXAMPLE: [local] x, y, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_ENGINEERING_VERTICAL","title":"<code>COMPOUND_ENGINEERING_VERTICAL = 'compoundEngineeringVertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatial coordinate reference system containing a horizontal engineering coordinate reference system and a vertical coordinate reference system.</p> <p>EXAMPLE: [local] x, y, height</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_ENGINEERING_VERTICAL_TEMPORAL","title":"<code>COMPOUND_ENGINEERING_VERTICAL_TEMPORAL = 'compoundEngineeringVerticalTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing an engineering, a vertical, and a temporal coordinate reference system.</p> <p>EXAMPLE: [local] x, y, height, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC2D_PARAMETRIC","title":"<code>COMPOUND_GEOGRAPHIC2D_PARAMETRIC = 'compoundGeographic2DParametric'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric coordinate reference system containing a 2 dimensional geographic horizontal coordinate reference system and a parametric reference system.</p> <p>EXAMPLE: latitude, longitude, pressure</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC2D_PARAMETRIC_TEMPORAL","title":"<code>COMPOUND_GEOGRAPHIC2D_PARAMETRIC_TEMPORAL = 'compoundGeographic2DParametricTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric-temporal coordinate reference system containing a 2 dimensional geographic horizontal, a parametric, and a temporal reference system.</p> <p>EXAMPLE: latitude, longitude, pressure, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC2D_TEMPORAL","title":"<code>COMPOUND_GEOGRAPHIC2D_TEMPORAL = 'compoundGeographic2DTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing a 2 dimensional geographic horizontal coordinate reference system and a temporal reference system.</p> <p>EXAMPLE: latitude, longitude, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC2D_VERTICAL","title":"<code>COMPOUND_GEOGRAPHIC2D_VERTICAL = 'compoundGeographic2DVertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound coordinate reference system in which one constituent coordinate reference system ais a horizontal geodetic coordinate reference system and one is a vertical reference system.</p> <p>EXAMPLE: latitude, longitude, [gravity-related] height or depth</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC2D_VERTICAL_TEMPORAL","title":"<code>COMPOUND_GEOGRAPHIC2D_VERTICAL_TEMPORAL = 'compoundGeographic2DVerticalTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing a 2 dimensional geographic horizontal, a vertical, and a temporal coordinate reference system.</p> <p>EXAMPLE: latitude, longitude, height, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_GEOGRAPHIC3D_TEMPORAL","title":"<code>COMPOUND_GEOGRAPHIC3D_TEMPORAL = 'compoundGeographic3DTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing a 3 dimensional geographic and a temporal coordinate reference system.</p> <p>EXAMPLE: latitude, longitude, ellipsoidal height, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_PROJECTED2D_PARAMETRIC","title":"<code>COMPOUND_PROJECTED2D_PARAMETRIC = 'compoundProjected2DParametric'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric coordinate reference system containing a projected horizontal coordinate reference system and a parametric reference system.</p> <p>EXAMPLE: easting, northing, density</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_PROJECTED2D_PARAMETRIC_TEMPORAL","title":"<code>COMPOUND_PROJECTED2D_PARAMETRIC_TEMPORAL = 'compoundProjected2DParametricTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-parametric-temporal coordinate reference system containing a projected horizontal, a parametric, and a temporal coordinate reference system.</p> <p>EXAMPLE: easting, northing, density, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_PROJECTED_TEMPORAL","title":"<code>COMPOUND_PROJECTED_TEMPORAL = 'compoundProjectedTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatial reference system containing a horizontal projected coordinate reference system and a vertical coordinate reference system.</p> <p>EXAMPLE: easting, northing, [gravity-related] height or depth</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_PROJECTED_VERTICAL","title":"<code>COMPOUND_PROJECTED_VERTICAL = 'compoundProjectedVertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatial reference system containing a horizontal projected coordinate reference system and a vertical coordinate reference system.</p> <p>EXAMPLE: easting, northing, [gravity-related] height or depth</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.COMPOUND_PROJECTED_VERTICAL_TEMPORAL","title":"<code>COMPOUND_PROJECTED_VERTICAL_TEMPORAL = 'compoundProjectedVerticalTemporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Compound spatio-temporal coordinate reference system containing a projected horizontal, a vertical, and a temporal coordinate reference system.</p> <p>EXAMPLE: easting, northing, height, time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.ENGINEERING","title":"<code>ENGINEERING = 'engineering'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Coordinate reference system based on an engineering datum (datum describing the relationship of a coordinate system to a local reference).</p> <p>EXAMPLE: [local] x, y</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.ENGINEERING_DESIGN","title":"<code>ENGINEERING_DESIGN = 'engineeringDesign'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Engineering coordinate reference system in which the base representation of a moving object is specified.</p> <p>EXAMPLE: [local] x, y</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.ENGINEERING_IMAGE","title":"<code>ENGINEERING_IMAGE = 'engineeringImage'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Coordinate reference system based on an image datum (engineering datum which defines the relationship of a coordinate system to an image).</p> <p>EXAMPLE: row, column</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.GEODETIC_GEOCENTRIC","title":"<code>GEODETIC_GEOCENTRIC = 'geodeticGeocentric'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geodetic coordinate reference system having a Cartesian 3D coordinate system.</p> <p>EXAMPLE: [geocentric] X, Y, Z</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.GEODETIC_GEOGRAPHIC_2D","title":"<code>GEODETIC_GEOGRAPHIC_2D = 'geodeticGeographic2D'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geodetic coordinate reference system having an ellipsoidal 2D coordinate system.</p> <p>EXAMPLE: latitude, longitude</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.GEODETIC_GEOGRAPHIC_3D","title":"<code>GEODETIC_GEOGRAPHIC_3D = 'geodeticGeographic3D'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geodetic coordinate reference system having an ellipsoidal 3D coordinate system.</p> <p>EXAMPLE: latitude, longitude, ellipsoidal height</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.GEOGRAPHIC_IDENTIFIER","title":"<code>GEOGRAPHIC_IDENTIFIER = 'geographicIdentifier'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Spatial reference in the form of a label or code that identifies a location.</p> <p>EXAMPLE: post coade</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.LINEAR","title":"<code>LINEAR = 'linear'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference system that identifies a location by reference to a segment of a linear geographic feature and distance along that segment from a given point.</p> <p>EXAMPLE: x km along road</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.PARAMETRIC","title":"<code>PARAMETRIC = 'parametric'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Coordinate reference system based on a parametric datum (datum describing the relationship of a parametric coordinate system to an object).</p> <p>EXAMPLE: pressure</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.PROJECTED","title":"<code>PROJECTED = 'projected'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Coordinate reference system derived from a two-dimensional geodetic coordinate reference system by applying a map projection.</p> <p>EXAMPLE: easting, northing</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.TEMPORAL","title":"<code>TEMPORAL = 'temporal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reference system against which time is measured.</p> <p>EXAMPLE: time</p>"},{"location":"referencing/crs/#opengis.referencing.crs.ReferenceSystemTypeCode.VERTICAL","title":"<code>VERTICAL = 'vertical'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>One-dimensional coordinate reference system based on a vertical datum (datum describing the relation of gravity-related heights or depths to the Earth).</p> <p>EXAMPLE: [gravity-related] height or depth</p>"},{"location":"referencing/crs/#opengis.referencing.crs.SingleCRS","title":"<code>SingleCRS</code>","text":"<p>               Bases: <code>CoordinateReferenceSystem</code></p> <p>Abstract coordinate reference system, consisting of a single Coordinate System and a single Datum.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class SingleCRS(CoordinateReferenceSystem):\n    \"\"\"\n    Abstract coordinate reference system, consisting of a single Coordinate\n    System and a single Datum.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; CoordinateSystem:\n        \"\"\"\n        Returns the coordinate system.\n\n        :return: The coordinate system.\n        :rtype: CoordinateSystem\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; Datum:\n        \"\"\"\n        Returns the datum.\n\n        :return: The datum\n        :rtype: Datum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.SingleCRS.coordinate_system","title":"<code>coordinate_system: CoordinateSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the coordinate system.</p> <p>:return: The coordinate system. :rtype: CoordinateSystem</p>"},{"location":"referencing/crs/#opengis.referencing.crs.SingleCRS.datum","title":"<code>datum: Datum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum.</p> <p>:return: The datum :rtype: Datum</p>"},{"location":"referencing/crs/#opengis.referencing.crs.TemporalCRS","title":"<code>TemporalCRS</code>","text":"<p>               Bases: <code>SingleCRS</code></p> <p>A 1D coordinate reference system used for the recording of time.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class TemporalCRS(SingleCRS):\n    \"\"\"\n    A 1D coordinate reference system used for the recording of time.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; TimeCS:\n        \"\"\"\n        Returns the coordinate system, which must be temporal.\n\n        :return: The coordinate system.\n        :rtype: TimeCS\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; TemporalDatum:\n        \"\"\"\n        Returns the datum, which must be temporal.\n\n        :return: The datum\n        :rtype: TemporalDatum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.TemporalCRS.coordinate_system","title":"<code>coordinate_system: TimeCS</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the coordinate system, which must be temporal.</p> <p>:return: The coordinate system. :rtype: TimeCS</p>"},{"location":"referencing/crs/#opengis.referencing.crs.TemporalCRS.datum","title":"<code>datum: TemporalDatum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum, which must be temporal.</p> <p>:return: The datum :rtype: TemporalDatum</p>"},{"location":"referencing/crs/#opengis.referencing.crs.VerticalCRS","title":"<code>VerticalCRS</code>","text":"<p>               Bases: <code>SingleCRS</code></p> <p>A 1D coordinate reference system used for recording heights or depths.</p> Source code in <code>opengis/referencing/crs.py</code> <pre><code>class VerticalCRS(SingleCRS):\n    \"\"\"\n    A 1D coordinate reference system used for recording heights or depths.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_system(self) -&gt; VerticalCS:\n        \"\"\"\n        Returns the coordinate system, which must be vertical.\n\n        :return: The coordinate system.\n        :rtype: VerticalCS\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def datum(self) -&gt; VerticalDatum:\n        \"\"\"\n        Returns the datum, which must be vertical.\n\n        :return: The datum\n        :rtype: VerticalDatum\n        \"\"\"\n</code></pre>"},{"location":"referencing/crs/#opengis.referencing.crs.VerticalCRS.coordinate_system","title":"<code>coordinate_system: VerticalCS</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the coordinate system, which must be vertical.</p> <p>:return: The coordinate system. :rtype: VerticalCS</p>"},{"location":"referencing/crs/#opengis.referencing.crs.VerticalCRS.datum","title":"<code>datum: VerticalDatum</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the datum, which must be vertical.</p> <p>:return: The datum :rtype: VerticalDatum</p>"},{"location":"referencing/cs/","title":"<code>cs</code> module","text":"<p>This is the <code>cs</code> module.</p> <p>This module contains geographic metadata structures regarding coordinate systems derived from the ISO 19111 international standard.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AffineCS","title":"<code>AffineCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 2- or 3-dimensional coordinate system with straight axes that are not necessarily orthogonal.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class AffineCS(CoordinateSystem):\n    \"\"\"\n    A 2- or 3-dimensional coordinate system with straight axes that are not\n    necessarily orthogonal.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection","title":"<code>AxisDirection</code>","text":"<p>               Bases: <code>Enum</code></p> <p>The direction of positive increase in the coordinate value for a coordinate system axis. This direction is exact in some cases, and is approximate in other cases.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class AxisDirection(Enum):\n    \"\"\"\n    The direction of positive increase in the coordinate value for a\n    coordinate system axis. This direction is exact in some cases, and is\n    approximate in other cases.\n    \"\"\"\n\n    NORTH = \"north\"\n    \"\"\"\n    Axis positive direction is north. In a geodetic or projected CRS, north is\n    defined through the geodetic reference frame. In an engineering CRS, north\n    may be defined with respect to an engineering object rather than a\n    geographical direction.\n    \"\"\"\n\n    NORTH_NORTH_EAST = \"northNorthEast\"\n    \"\"\"Axis positive direction is approximately north-north-east.\"\"\"\n\n    NORTH_EAST = \"northEast\"\n    \"\"\"Axis positive direction is approximately north-east.\"\"\"\n\n    EAST_NORTH_EAST = \"eastNorthEast\"\n    \"\"\"Axis positive direction is approximately east-north-east.\"\"\"\n\n    EAST = \"east\"\n    \"\"\"Axis positive direction is \u03d6/2 radians clockwise from north.\"\"\"\n\n    EAST_SOUTH_EAST = \"eastSouthEast\"\n    \"\"\"Axis positive direction is approximately east-south-east.\"\"\"\n\n    SOUTH_EAST = \"southEast\"\n    \"\"\"Axis positive direction is approximately south-east.\"\"\"\n\n    SOUTH_SOUTH_EAST = \"southSouthWest\"\n    \"\"\"Axis positive direction is approximately south-south-east.\"\"\"\n\n    SOUTH = \"south\"\n    \"\"\"Axis positive direction is \u03d6 radians clockwise from north.\"\"\"\n\n    SOUTH_SOUTH_WEST = \"southSouthWest\"\n    \"\"\"Axis positive direction is approximately south-south-west.\"\"\"\n\n    SOUTH_WEST = \"southWest\"\n    \"\"\"Axis positive direction is approximately south-west.\"\"\"\n\n    WEST_SOUTH_WEST = \"westSouthWest\"\n    \"\"\"Axis positive direction is approximately west-south-west.\"\"\"\n\n    WEST = \"west\"\n    \"\"\"Axis positive direction is 3\u03d6/2 radians clockwise from north.\"\"\"\n\n    WEST_NORTH_WEST = \"westNorthWest\"\n    \"\"\"Axis positive direction is approximately west-north-west.\"\"\"\n\n    NORTH_WEST = \"northWest\"\n    \"\"\"Axis positive direction is approximately north-west.\"\"\"\n\n    NORTH_NORTH_WEST = \"northNorthWest\"\n    \"\"\"Axis positive direction is approximately north-north-west.\"\"\"\n\n    UP = \"up\"\n    \"\"\"Axis positive direction is up relative to gravity.\"\"\"\n\n    DOWN = \"down\"\n    \"\"\"Axis positive direction is down relative to gravity.\"\"\"\n\n    GEOCENTRIC_X = \"geocentricX\"\n    \"\"\"\n    Axis positive direction is in the equatorial plane from the centre of the\n    modelled Earth towards the intersection of the equator with the prime\n    meridian.\n    \"\"\"\n\n    GEOCENTRIC_Y = \"geocentricY\"\n    \"\"\"\n    Axis positive direction is in the equatorial plane from the centre of the\n    modelled Earth towards the intersection of the equator and the meridian\n    \u03d6/2 radians eastwards from the prime meridian.\n    \"\"\"\n\n    GEOCENTRIC_Z = \"geocentricZ\"\n    \"\"\"\n    Axis positive direction is from the centre of the modelled Earth parallel\n    to its rotation axis and towards its north pole.\n    \"\"\"\n\n    COLUMN_POSITIVE = \"columnPositive\"\n    \"\"\"Axis positive direction is towards higher pixel column.\"\"\"\n\n    COLUMN_NEGATIVE = \"columnNegative\"\n    \"\"\"Axis positive direction is towards lower pixel column.\"\"\"\n\n    ROW_POSITIVE = \"rowPositive\"\n    \"\"\"Axis positive direction is towards higher pixel row.\"\"\"\n\n    ROW_NEGATIVE = \"rowNegative\"\n    \"\"\"Axis positive direction is towards lower pixel row.\"\"\"\n\n    DISPLAY_RIGHT = \"displayRight\"\n    \"\"\"Axis positive direction is right in display.\"\"\"\n\n    DISPLAY_LEFT = \"displayLeft\"\n    \"\"\"Axis positive direction is left in display.\"\"\"\n\n    DISPLAY_UP = \"displayUp\"\n    \"\"\"\n    Axis positive direction is towards top of approximately vertical display\n    surface.\n    \"\"\"\n\n    DISPLAY_DOWN = \"displayDown\"\n    \"\"\"\n    Axis positive direction is towards bottom of approximately vertical\n    display surface.\n    \"\"\"\n\n    FORWARD = \"forward\"\n    \"\"\"\n    Axis positive direction is forward; for an observer at the centre of the\n    object this is will be towards its front, bow or nose.\n    \"\"\"\n\n    AFT = \"aft\"\n    \"\"\"\n    Axis positive direction is aft; for an observer at the centre of the\n    object this will be towards its back, stern or tail.\n    \"\"\"\n\n    PORT = \"port\"\n    \"\"\"\n    Axis positive direction is port; for an observer at the centre of the\n    object this will be towards its left.\n    \"\"\"\n\n    STARBOARD = \"starboard\"\n    \"\"\"\n    Axis positive direction is starboard; for an observer at the centre of the\n    object this will be towards its right.\n    \"\"\"\n\n    CLOCKWISE = \"clockwise\"\n    \"\"\"Axis positive direction is clockwise from a specified direction.\"\"\"\n\n    COUNTER_CLOCKWISE = \"counterclockwise\"\n    \"\"\"\n    Axis positive direction is counter clockwise from a specified direction.\n    \"\"\"\n\n    TOWARDS = \"towards\"\n    \"\"\"Axis positive direction is towards the object.\"\"\"\n\n    AWAY_FROM = \"awayfrom\"\n    \"\"\"Axis positive direction is away from the object.\"\"\"\n\n    FUTURE = \"future\"\n    \"\"\"Temporal axis positive direction is towards the future.\"\"\"\n\n    PAST = \"past\"\n    \"\"\"Temporal axis positive direction is towards the past.\"\"\"\n\n    UNSPECIFIED = \"unspecified\"\n    \"\"\"Axis positive direction is unspecified.\"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.AFT","title":"<code>AFT = 'aft'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is aft; for an observer at the centre of the object this will be towards its back, stern or tail.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.AWAY_FROM","title":"<code>AWAY_FROM = 'awayfrom'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is away from the object.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.CLOCKWISE","title":"<code>CLOCKWISE = 'clockwise'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is clockwise from a specified direction.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.COLUMN_NEGATIVE","title":"<code>COLUMN_NEGATIVE = 'columnNegative'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards lower pixel column.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.COLUMN_POSITIVE","title":"<code>COLUMN_POSITIVE = 'columnPositive'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards higher pixel column.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.COUNTER_CLOCKWISE","title":"<code>COUNTER_CLOCKWISE = 'counterclockwise'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is counter clockwise from a specified direction.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.DISPLAY_DOWN","title":"<code>DISPLAY_DOWN = 'displayDown'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards bottom of approximately vertical display surface.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.DISPLAY_LEFT","title":"<code>DISPLAY_LEFT = 'displayLeft'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is left in display.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.DISPLAY_RIGHT","title":"<code>DISPLAY_RIGHT = 'displayRight'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is right in display.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.DISPLAY_UP","title":"<code>DISPLAY_UP = 'displayUp'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards top of approximately vertical display surface.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.DOWN","title":"<code>DOWN = 'down'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is down relative to gravity.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.EAST","title":"<code>EAST = 'east'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is \u03d6/2 radians clockwise from north.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.EAST_NORTH_EAST","title":"<code>EAST_NORTH_EAST = 'eastNorthEast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately east-north-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.EAST_SOUTH_EAST","title":"<code>EAST_SOUTH_EAST = 'eastSouthEast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately east-south-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.FORWARD","title":"<code>FORWARD = 'forward'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is forward; for an observer at the centre of the object this is will be towards its front, bow or nose.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.FUTURE","title":"<code>FUTURE = 'future'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Temporal axis positive direction is towards the future.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.GEOCENTRIC_X","title":"<code>GEOCENTRIC_X = 'geocentricX'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is in the equatorial plane from the centre of the modelled Earth towards the intersection of the equator with the prime meridian.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.GEOCENTRIC_Y","title":"<code>GEOCENTRIC_Y = 'geocentricY'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is in the equatorial plane from the centre of the modelled Earth towards the intersection of the equator and the meridian \u03d6/2 radians eastwards from the prime meridian.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.GEOCENTRIC_Z","title":"<code>GEOCENTRIC_Z = 'geocentricZ'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is from the centre of the modelled Earth parallel to its rotation axis and towards its north pole.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.NORTH","title":"<code>NORTH = 'north'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is north. In a geodetic or projected CRS, north is defined through the geodetic reference frame. In an engineering CRS, north may be defined with respect to an engineering object rather than a geographical direction.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.NORTH_EAST","title":"<code>NORTH_EAST = 'northEast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately north-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.NORTH_NORTH_EAST","title":"<code>NORTH_NORTH_EAST = 'northNorthEast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately north-north-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.NORTH_NORTH_WEST","title":"<code>NORTH_NORTH_WEST = 'northNorthWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately north-north-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.NORTH_WEST","title":"<code>NORTH_WEST = 'northWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately north-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.PAST","title":"<code>PAST = 'past'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Temporal axis positive direction is towards the past.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.PORT","title":"<code>PORT = 'port'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is port; for an observer at the centre of the object this will be towards its left.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.ROW_NEGATIVE","title":"<code>ROW_NEGATIVE = 'rowNegative'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards lower pixel row.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.ROW_POSITIVE","title":"<code>ROW_POSITIVE = 'rowPositive'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards higher pixel row.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.SOUTH","title":"<code>SOUTH = 'south'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is \u03d6 radians clockwise from north.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.SOUTH_EAST","title":"<code>SOUTH_EAST = 'southEast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately south-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.SOUTH_SOUTH_EAST","title":"<code>SOUTH_SOUTH_EAST = 'southSouthWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately south-south-east.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.SOUTH_SOUTH_WEST","title":"<code>SOUTH_SOUTH_WEST = 'southSouthWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately south-south-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.SOUTH_WEST","title":"<code>SOUTH_WEST = 'southWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately south-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.STARBOARD","title":"<code>STARBOARD = 'starboard'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is starboard; for an observer at the centre of the object this will be towards its right.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.TOWARDS","title":"<code>TOWARDS = 'towards'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is towards the object.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.UNSPECIFIED","title":"<code>UNSPECIFIED = 'unspecified'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is unspecified.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.UP","title":"<code>UP = 'up'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is up relative to gravity.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.WEST","title":"<code>WEST = 'west'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is 3\u03d6/2 radians clockwise from north.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.WEST_NORTH_WEST","title":"<code>WEST_NORTH_WEST = 'westNorthWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately west-north-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.AxisDirection.WEST_SOUTH_WEST","title":"<code>WEST_SOUTH_WEST = 'westSouthWest'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Axis positive direction is approximately west-south-west.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CartesianCS","title":"<code>CartesianCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 2- or 3-dimensional coordinate system with orthogonal straight axes. All axes shall have the same length unit of measure.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class CartesianCS(CoordinateSystem):\n    \"\"\"\n    A 2- or 3-dimensional coordinate system with orthogonal straight axes. All\n    axes shall have the same length unit of\n    measure.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystem","title":"<code>CoordinateSystem</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>The set of coordinate system axes that spans a given coordinate space. A coordinate system (CS) is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class CoordinateSystem(IdentifiedObject):\n    \"\"\"\n    The set of coordinate system axes that spans a given coordinate space.\n    A coordinate system (CS) is derived from a set of (mathematical) rules for\n    specifying how coordinates in a given space are to be assigned to points.\n    The coordinate values in a coordinate tuple shall be recorded in the order\n    in which the coordinate system axes associations are recorded, whenever\n    those coordinates use a coordinate reference system that uses this\n    coordinate system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def dimension(self) -&gt; int:\n        \"\"\"\n        Returns the dimension of the coordinate system.\n\n        :return: The dimension of the coordinate system.\n        :rtype: int\n        \"\"\"\n\n    @abstractmethod\n    def axis(self, dimension: int) -&gt; CoordinateSystemAxis:\n        \"\"\"\n        Returns the axis for this coordinate system at the specified dimension.\n\n        :param dimension: The zero based index of axis.\n        :type dimension: int\n        :return: The axis at the specified dimension.\n        :rtype: CoordinateSystemAxis\n        \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystem.dimension","title":"<code>dimension: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the dimension of the coordinate system.</p> <p>:return: The dimension of the coordinate system. :rtype: int</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystem.axis","title":"<code>axis(dimension)</code>  <code>abstractmethod</code>","text":"<p>Returns the axis for this coordinate system at the specified dimension.</p> <p>:param dimension: The zero based index of axis. :type dimension: int :return: The axis at the specified dimension. :rtype: CoordinateSystemAxis</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>@abstractmethod\ndef axis(self, dimension: int) -&gt; CoordinateSystemAxis:\n    \"\"\"\n    Returns the axis for this coordinate system at the specified dimension.\n\n    :param dimension: The zero based index of axis.\n    :type dimension: int\n    :return: The axis at the specified dimension.\n    :rtype: CoordinateSystemAxis\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis","title":"<code>CoordinateSystemAxis</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>Definition of a coordinate system axis.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class CoordinateSystemAxis(IdentifiedObject):\n    \"\"\"\n    Definition of a coordinate system axis.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def abbreviation(self) -&gt; str:\n        \"\"\"\n        The abbreviation used for this coordinate system axes.\n        This abbreviation is also used to identify the coordinate in a\n        coordinate tuple.\n\n        :return: The coordinate system axis abbreviation.\n        :rtype: int\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def direction(self) -&gt; AxisDirection:\n        \"\"\"\n        Direction of this coordinate system axis.\n\n        :return: The coordinate system axis direction.\n        :rtype: AxisDirection\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def unit(self):\n        \"\"\"\n        Returns the unit of measure used for this coordinate system axis.\n        The value of a coordinate in a coordinate tuple shall be recorded\n        using this unit of measure, whenever those coordinates use a\n        coordinate reference system that uses a coordinate system that uses\n        this axis.\n\n        :return: The coordinate system axis unit.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def minimum_value(self) -&gt; float:\n        \"\"\"\n        Returns the minimum value normally allowed for this axis, in the unit\n        of measure for the axis. If there is no minimum value, then this\n        method returns negative infinity.\n\n        :return: The minimum value, or the negative infinity if none.\n        :rtype: float\n        \"\"\"\n        return float(\"-inf\")\n\n    @property\n    @abstractmethod\n    def maximum_value(self) -&gt; float:\n        \"\"\"\n        Returns the maximum value normally allowed for this axis, in the unit\n        of measure for the axis. If there is no maximum value, then this\n        method returns positive infinity.\n\n        :return: The maximum value, or the positive infinity if none.\n        :rtype: float\n        \"\"\"\n        return float(\"inf\")\n\n    @property\n    @abstractmethod\n    def range_meaning(self) -&gt; RangeMeaning:\n        \"\"\"\n        Returns the meaning of axis value range specified by the minimum and\n        maximum values. This element shall be omitted when both minimum and\n        maximum values are omitted. It may be included when minimum and/or\n        maximum values are included. If this element is omitted when minimum\n        or maximum values are included, the meaning is unspecified.\n\n        :return: The range meaning, or null in none.\n        :rtype: RangeMeaning\n        \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.abbreviation","title":"<code>abbreviation: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The abbreviation used for this coordinate system axes. This abbreviation is also used to identify the coordinate in a coordinate tuple.</p> <p>:return: The coordinate system axis abbreviation. :rtype: int</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.direction","title":"<code>direction: AxisDirection</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Direction of this coordinate system axis.</p> <p>:return: The coordinate system axis direction. :rtype: AxisDirection</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.maximum_value","title":"<code>maximum_value: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the maximum value normally allowed for this axis, in the unit of measure for the axis. If there is no maximum value, then this method returns positive infinity.</p> <p>:return: The maximum value, or the positive infinity if none. :rtype: float</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.minimum_value","title":"<code>minimum_value: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the minimum value normally allowed for this axis, in the unit of measure for the axis. If there is no minimum value, then this method returns negative infinity.</p> <p>:return: The minimum value, or the negative infinity if none. :rtype: float</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.range_meaning","title":"<code>range_meaning: RangeMeaning</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the meaning of axis value range specified by the minimum and maximum values. This element shall be omitted when both minimum and maximum values are omitted. It may be included when minimum and/or maximum values are included. If this element is omitted when minimum or maximum values are included, the meaning is unspecified.</p> <p>:return: The range meaning, or null in none. :rtype: RangeMeaning</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CoordinateSystemAxis.unit","title":"<code>unit</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the unit of measure used for this coordinate system axis. The value of a coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.</p> <p>:return: The coordinate system axis unit.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.CylindricalCS","title":"<code>CylindricalCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 3-dimensional coordinate system consisting of a PolarCS extended by a straight axis perpendicular to the plane spanned by the polar CS.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class CylindricalCS(CoordinateSystem):\n    \"\"\"\n    A 3-dimensional coordinate system consisting of a PolarCS extended by a\n    straight axis perpendicular to the plane\n    spanned by the polar CS.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.EllipsoidalCS","title":"<code>EllipsoidalCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 2- or 3-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the 3D case) ellipsoidal height.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class EllipsoidalCS(CoordinateSystem):\n    \"\"\"\n    A 2- or 3-dimensional coordinate system in which position is specified by\n    geodetic latitude, geodetic longitude,\n    and (in the 3D case) ellipsoidal height.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.LinearCS","title":"<code>LinearCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 1-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance - with or without offset - from the origin point, specified through the datum definition, to the point along the axis.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class LinearCS(CoordinateSystem):\n    \"\"\"\n    A 1-dimensional coordinate system that consists of the points that lie on\n    the single axis described. The associated coordinate is the distance -\n    with or without offset - from the origin point, specified through the\n    datum definition, to the point along the axis.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.ParametricCS","title":"<code>ParametricCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 1-dimensional coordinate system containing a single axis. This coordinate system uses parameter values or functions to describe the position of a point.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class ParametricCS(CoordinateSystem):\n    \"\"\"\n    A 1-dimensional coordinate system containing a single axis. This\n    coordinate system uses parameter values or functions to describe the\n    position of a point.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.PolarCS","title":"<code>PolarCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 2-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class PolarCS(CoordinateSystem):\n    \"\"\"\n    A 2-dimensional coordinate system in which position is specified by the\n    distance from the origin and the angle between the line from the origin to\n    a point and a reference direction.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.RangeMeaning","title":"<code>RangeMeaning</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Meaning of the axis value range specified through minimum value and maximum value.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class RangeMeaning(Enum):\n    \"\"\"\n    Meaning of the axis value range specified through minimum value and\n    maximum value.\n    \"\"\"\n\n    EXACT = \"exact\"\n    \"\"\"\n    Any value between and including minimumValue and maximumValue is valid.\n    \"\"\"\n\n    WRAPAROUND = \"wraparound\"\n    \"\"\"\n    The axis is continuous with values wrapping around at the minimum_value\n    and maximum_value. Values with the same meaning repeat modulo the\n    difference between maximum_value and minimum_value.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.RangeMeaning.EXACT","title":"<code>EXACT = 'exact'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Any value between and including minimumValue and maximumValue is valid.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.RangeMeaning.WRAPAROUND","title":"<code>WRAPAROUND = 'wraparound'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The axis is continuous with values wrapping around at the minimum_value and maximum_value. Values with the same meaning repeat modulo the difference between maximum_value and minimum_value.</p>"},{"location":"referencing/cs/#opengis.referencing.cs.SphericalCS","title":"<code>SphericalCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 3-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an EllipsoidalCS based on an ellipsoid \"degenerated\" into a sphere.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class SphericalCS(CoordinateSystem):\n    \"\"\"\n    A 3-dimensional coordinate system with one distance measured from the\n    origin and two angular coordinates. Not to be confused with an\n    EllipsoidalCS based on an ellipsoid \"degenerated\" into a sphere.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.TimeCS","title":"<code>TimeCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 1-dimensional coordinate system containing a single time axis. This coordinate system is used to describe the temporal position of a point in the specified time units from a specified time origin.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class TimeCS(CoordinateSystem):\n    \"\"\"\n    A 1-dimensional coordinate system containing a single time axis. This\n    coordinate system is used to describe the temporal position of a point in\n    the specified time units from a specified time origin.\n    \"\"\"\n</code></pre>"},{"location":"referencing/cs/#opengis.referencing.cs.VerticalCS","title":"<code>VerticalCS</code>","text":"<p>               Bases: <code>CoordinateSystem</code></p> <p>A 1-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. An exact definition is deliberately not provided as the complexities of the subject fall outside the scope of the ISO 19111 specification.</p> Source code in <code>opengis/referencing/cs.py</code> <pre><code>class VerticalCS(CoordinateSystem):\n    \"\"\"\n    A 1-dimensional coordinate system used to record the heights or depths of\n    points. Such a coordinate system is usually dependent on the Earth's\n    gravity field, perhaps loosely as when atmospheric pressure is the basis\n    for the vertical coordinate system axis. An exact definition is\n    deliberately not provided as the complexities of the subject fall outside\n    the scope of the ISO 19111 specification.\n    \"\"\"\n</code></pre>"},{"location":"referencing/datum/","title":"<code>datum</code> module","text":"<p>This is the <code>datum</code> module.</p> <p>This module contains geographic metadata structures regarding datums derived from the ISO 19111 international standard.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Datum","title":"<code>Datum</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>Specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class Datum(IdentifiedObject):\n    \"\"\"\n    Specifies the relationship of a coordinate system to the earth, thus\n    creating a coordinate reference system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def anchor_point(self) -&gt; str | None:\n        \"\"\"\n        Description, possibly including coordinates, of the point or points\n        used to anchor the datum to the Earth.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def domain_of_validity(self) -&gt; Extent:\n        \"\"\"\n        Information about spatial, vertical, and temporal extent. This\n        interface has four optional attributes (geographic elements, temporal\n        elements, and vertical elements) and an element called description.\n        At least one of the four shall be used.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def realization_epoch(self) -&gt; datetime | None:\n        \"\"\"\n        The time after which this datum definition is valid.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; str:\n        \"\"\"\n        Description of domain of usage, or limitations of usage, for which\n        this datum object is valid.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.Datum.anchor_point","title":"<code>anchor_point: str | None</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Datum.domain_of_validity","title":"<code>domain_of_validity: Extent</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Information about spatial, vertical, and temporal extent. This interface has four optional attributes (geographic elements, temporal elements, and vertical elements) and an element called description. At least one of the four shall be used.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Datum.realization_epoch","title":"<code>realization_epoch: datetime | None</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The time after which this datum definition is valid.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Datum.scope","title":"<code>scope: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of domain of usage, or limitations of usage, for which this datum object is valid.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid","title":"<code>Ellipsoid</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>Geometric figure that can be used to describe the approximate shape of the Earth.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class Ellipsoid(IdentifiedObject):\n    \"\"\"\n    Geometric figure that can be used to describe the approximate shape of the\n    Earth.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def axis_unit(self):\n        \"\"\"\n        Linear unit of the semi-major and semi-minor axis values.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def semi_major_axis(self) -&gt; float:\n        \"\"\"\n        Length of the semi-major axis of the ellipsoid. This is the equatorial\n        radius in axis linear unit.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def semi_minor_axis(self) -&gt; float:\n        \"\"\"\n        Length of the semi-minor axis of the ellipsoid. This is the polar\n        radius in axis linear unit.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def inverse_flattering(self) -&gt; float:\n        \"\"\"\n        Value of the inverse of the flattening constant.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def is_inf_definitive(self) -&gt; bool:\n        \"\"\"\n        Indicates if the inverse flattening is definitive for this ellipsoid.\n        Some ellipsoids use the IVF as the defining value, and calculate the\n        polar radius whenever asked. Other ellipsoids use the polar radius to\n        calculate the IVF whenever asked. This distinction can be important to\n        avoid floating-point rounding errors.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def is_sphere(self) -&gt; bool:\n        \"\"\"\n        `True` if the ellipsoid is degenerate and is actually a sphere.\n        The sphere is completely defined by the semi-major axis, which is the\n        radius of the sphere.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.axis_unit","title":"<code>axis_unit</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Linear unit of the semi-major and semi-minor axis values.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.inverse_flattering","title":"<code>inverse_flattering: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Value of the inverse of the flattening constant.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.is_inf_definitive","title":"<code>is_inf_definitive: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Indicates if the inverse flattening is definitive for this ellipsoid. Some ellipsoids use the IVF as the defining value, and calculate the polar radius whenever asked. Other ellipsoids use the polar radius to calculate the IVF whenever asked. This distinction can be important to avoid floating-point rounding errors.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.is_sphere","title":"<code>is_sphere: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p><code>True</code> if the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.semi_major_axis","title":"<code>semi_major_axis: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Length of the semi-major axis of the ellipsoid. This is the equatorial radius in axis linear unit.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.Ellipsoid.semi_minor_axis","title":"<code>semi_minor_axis: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Length of the semi-minor axis of the ellipsoid. This is the polar radius in axis linear unit.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.EngineeringDatum","title":"<code>EngineeringDatum</code>","text":"<p>               Bases: <code>Datum</code></p> <p>Defines the origin of an engineering coordinate reference system.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class EngineeringDatum(Datum):\n    \"\"\"\n    Defines the origin of an engineering coordinate reference system.\n    \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.GeodeticDatum","title":"<code>GeodeticDatum</code>","text":"<p>               Bases: <code>Datum</code></p> <p>Defines the location and precise orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class GeodeticDatum(Datum):\n    \"\"\"\n    Defines the location and precise orientation in 3-dimensional space of a\n    defined ellipsoid (or sphere) that approximates the shape of the earth.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def ellipsoid(self) -&gt; Ellipsoid:\n        \"\"\"\n        Returns the ellipsoid.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def prime_meridian(self) -&gt; PrimeMeridian:\n        \"\"\"\n        Returns the prime meridian.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.GeodeticDatum.ellipsoid","title":"<code>ellipsoid: Ellipsoid</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the ellipsoid.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.GeodeticDatum.prime_meridian","title":"<code>prime_meridian: PrimeMeridian</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the prime meridian.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.PrimeMeridian","title":"<code>PrimeMeridian</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>A prime meridian defines the origin from which longitude values are determined.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class PrimeMeridian(IdentifiedObject):\n    \"\"\"\n    A prime meridian defines the origin from which longitude values are\n    determined.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def greenwich_longitude(self) -&gt; float:\n        \"\"\"\n        Longitude of the prime meridian measured from the Greenwich meridian,\n        positive eastward.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def angular_unit(self):\n        \"\"\"\n        Returns the angular unit of the Greenwich longitude.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.PrimeMeridian.angular_unit","title":"<code>angular_unit</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the angular unit of the Greenwich longitude.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.PrimeMeridian.greenwich_longitude","title":"<code>greenwich_longitude: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Longitude of the prime meridian measured from the Greenwich meridian, positive eastward.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.RealizationMethod","title":"<code>RealizationMethod</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Specification of the method by which the vertical reference frame is realized.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class RealizationMethod(Enum):\n    \"\"\"\n    Specification of the method by which the vertical reference frame is\n    realized.\n    \"\"\"\n    LEVELLING = \"levelling\"\n    \"\"\"\n    The realization is by adjustment of a levelling network fixed to one or\n    more tide gauges.\n    \"\"\"\n\n    GEOID = \"geoid\"\n    \"\"\"\n    The realization is through a geoid height model or a height correction\n    model. This is applied to a specified geodetic CRS.\n    \"\"\"\n\n    TIDAL = \"tidal\"\n    \"\"\"The realization is through a tidal model or by tidal predictions.\"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.RealizationMethod.GEOID","title":"<code>GEOID = 'geoid'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The realization is through a geoid height model or a height correction model. This is applied to a specified geodetic CRS.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.RealizationMethod.LEVELLING","title":"<code>LEVELLING = 'levelling'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The realization is by adjustment of a levelling network fixed to one or more tide gauges.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.RealizationMethod.TIDAL","title":"<code>TIDAL = 'tidal'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The realization is through a tidal model or by tidal predictions.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.TemporalDatum","title":"<code>TemporalDatum</code>","text":"<p>               Bases: <code>Datum</code></p> <p>A temporal datum defines the origin of a temporal coordinate reference system.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class TemporalDatum(Datum):\n    \"\"\"\n    A temporal datum defines the origin of a temporal coordinate reference\n    system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def anchor_point(self) -&gt; None:\n        \"\"\"\n        This attribute is defined in the Datum parent interface, but is not\n        used by a temporal datum.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def realization_epoch(self) -&gt; None:\n        \"\"\"\n        This attribute is defined in the Datum parent interface, but is not\n        used by a temporal datum.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def origin(self) -&gt; datetime:\n        \"\"\"\n        The date and time origin of this temporal datum.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.TemporalDatum.anchor_point","title":"<code>anchor_point: None</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>This attribute is defined in the Datum parent interface, but is not used by a temporal datum.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.TemporalDatum.origin","title":"<code>origin: datetime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The date and time origin of this temporal datum.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.TemporalDatum.realization_epoch","title":"<code>realization_epoch: None</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>This attribute is defined in the Datum parent interface, but is not used by a temporal datum.</p>"},{"location":"referencing/datum/#opengis.referencing.datum.VerticalDatum","title":"<code>VerticalDatum</code>","text":"<p>               Bases: <code>Datum</code></p> <p>The method through which this vertical reference frame is realized.</p> Source code in <code>opengis/referencing/datum.py</code> <pre><code>class VerticalDatum(Datum):\n    \"\"\"\n    The method through which this vertical reference frame is realized.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def realization_method(self) -&gt; RealizationMethod:\n        \"\"\"\n        The type of this vertical datum.\n        \"\"\"\n</code></pre>"},{"location":"referencing/datum/#opengis.referencing.datum.VerticalDatum.realization_method","title":"<code>realization_method: RealizationMethod</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The type of this vertical datum.</p>"},{"location":"referencing/operation/","title":"<code>operation</code> module","text":"<p>This is the <code>operation</code> module.</p> <p>This module contains geographic metadata structures regarding referencing system operations derived from the ISO 19111 international standard.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Conversion","title":"<code>Conversion</code>","text":"<p>               Bases: <code>SingleOperation</code></p> <p>An operation on coordinates that does not include any change of Datum.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class Conversion(SingleOperation):\n    \"\"\"\n    An operation on coordinates that does not include any change of Datum.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def source_crs(self) -&gt; Optional[CoordinateReferenceSystem]:\n        \"\"\"\n        Returns the source CRS. Conversions may have a source CRS that is not\n        specified here, but through `DerivedCRS.getBaseCRS()` instead. `None`\n        if not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def target_crs(self) -&gt; Optional[CoordinateReferenceSystem]:\n        \"\"\"\n        Returns the target CRS. Conversions may have a target CRS that is not\n        specified here, but through `DerivedCRS` instead. `None`\n        if not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation_version(self) -&gt; None:\n        \"\"\"\n        This attribute is declared in `CoordinateOperation` but is not used in\n        a conversion.\n        \"\"\"\n        return None\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.Conversion.operation_version","title":"<code>operation_version: None</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>This attribute is declared in <code>CoordinateOperation</code> but is not used in a conversion.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Conversion.source_crs","title":"<code>source_crs: Optional[CoordinateReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the source CRS. Conversions may have a source CRS that is not specified here, but through <code>DerivedCRS.getBaseCRS()</code> instead. <code>None</code> if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Conversion.target_crs","title":"<code>target_crs: Optional[CoordinateReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the target CRS. Conversions may have a target CRS that is not specified here, but through <code>DerivedCRS</code> instead. <code>None</code> if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation","title":"<code>CoordinateOperation</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class CoordinateOperation(IdentifiedObject):\n    \"\"\"\n    A mathematical operation on coordinates that transforms or converts\n    coordinates to another coordinate reference system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def source_crs(self) -&gt; Optional[CoordinateReferenceSystem]:\n        \"\"\"\n        Returns the source CRS. The source CRS is mandatory for\n        transformations only. Conversions may have a source CRS that is not\n        specified here, but through `DerivedCRS.getBaseCRS()` instead.\n        `None` if not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def target_crs(self) -&gt; Optional[CoordinateReferenceSystem]:\n        \"\"\"\n        Returns the target CRS. The target CRS is mandatory for\n        transformations only. Conversions may have a target CRS that is not\n        specified here, but through `DerivedCRS` instead. `None` if\n        not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation_version(self) -&gt; Optional[str]:\n        \"\"\"\n        Version of the coordinate transformation (i.e., instantiation due to\n        the stochastic nature of the parameters). Mandatory when describing a\n        transformation, and should not be supplied for a conversion.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def coordinate_operation_accuracy(self) -&gt;\\\n            Sequence[Optional[PositionalAccuracy]]:\n        \"\"\"\n        Estimate(s) of the impact of this operation on point accuracy. Gives\n        position error estimates for target coordinates of this coordinate\n        operation, assuming no errors in source coordinates, or an empty\n        collection if not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def domain_of_validity(self) -&gt; Optional[Extent]:\n        \"\"\"\n        Area or region or timeframe in which this coordinate operation is\n        valid or `None` if not available.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def scope(self) -&gt; str:\n        \"\"\"\n        Description of domain of usage, or limitations of usage, for which\n        this operation is valid.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def math_transform(self) -&gt; MathTransform:\n        \"\"\"\n        Gets the math transform. The math transform will transform positions\n        in the source coordinate reference system into positions in the target\n        coordinate reference system. It may be `None` in the case of defining\n        conversions or if it's not applicable.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.coordinate_operation_accuracy","title":"<code>coordinate_operation_accuracy: Sequence[Optional[PositionalAccuracy]]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Estimate(s) of the impact of this operation on point accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates, or an empty collection if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.domain_of_validity","title":"<code>domain_of_validity: Optional[Extent]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Area or region or timeframe in which this coordinate operation is valid or <code>None</code> if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.math_transform","title":"<code>math_transform: MathTransform</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Gets the math transform. The math transform will transform positions in the source coordinate reference system into positions in the target coordinate reference system. It may be <code>None</code> in the case of defining conversions or if it's not applicable.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.operation_version","title":"<code>operation_version: Optional[str]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.scope","title":"<code>scope: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Description of domain of usage, or limitations of usage, for which this operation is valid.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.source_crs","title":"<code>source_crs: Optional[CoordinateReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the source CRS. The source CRS is mandatory for transformations only. Conversions may have a source CRS that is not specified here, but through <code>DerivedCRS.getBaseCRS()</code> instead. <code>None</code> if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.CoordinateOperation.target_crs","title":"<code>target_crs: Optional[CoordinateReferenceSystem]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the target CRS. The target CRS is mandatory for transformations only. Conversions may have a target CRS that is not specified here, but through <code>DerivedCRS</code> instead. <code>None</code> if not available.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Formula","title":"<code>Formula</code>","text":"<p>Specification of the coordinate operation method formula.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class Formula:\n    \"\"\"\n    Specification of the coordinate operation method formula.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def formula(self) -&gt; str:\n        \"\"\"\n        Formula(s) or procedure used by the operation method.\n\n        :return: The formula used by the operation method, or null if none.\n        :rtype: str\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def citation(self) -&gt; Optional[Citation]:\n        \"\"\"\n        Reference to a publication giving the formula(s) or procedure used by\n        the coordinate operation method, or null if `None`.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.Formula.citation","title":"<code>citation: Optional[Citation]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Reference to a publication giving the formula(s) or procedure used by the coordinate operation method, or null if <code>None</code>.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Formula.formula","title":"<code>formula: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Formula(s) or procedure used by the operation method.</p> <p>:return: The formula used by the operation method, or null if none. :rtype: str</p>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform","title":"<code>MathTransform</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Transforms multi-dimensional coordinate points.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class MathTransform(ABC):\n    \"\"\"\n    Transforms multi-dimensional coordinate points.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def source_dimensions(self) -&gt; int:\n        \"\"\"\n        Returns the dimension of input points.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def target_dimensions(self) -&gt; int:\n        \"\"\"\n        Returns the dimension of output points.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def is_identity(self) -&gt; bool:\n        \"\"\"\n        Tests whether this transform does not move any points. True if this\n        MathTransform is an identity transform; false otherwise.\n        \"\"\"\n\n    @abstractmethod\n    def to_wkt(self) -&gt; str:\n        \"\"\"\n        Returns a Well Known Text (WKT) for this object. Well know text are\n        defined in extended Backus Naur form. This operation may fails if an\n        object is too complex for the WKT format capability.\n        \"\"\"\n\n    @abstractmethod\n    def inverse(self) -&gt; Any:\n        \"\"\"\n        Creates the inverse transform of this object. This method may fail if\n        the transform is not one to one. Should return a\n        `MathTransform` object.\n        \"\"\"\n\n    @abstractmethod\n    def transform(self, pt_src: DirectPosition,\n                  pt_dst: Optional[DirectPosition]) -&gt;\\\n            DirectPosition | np.ndarray:\n        \"\"\"\n        Transforms the specified pt_src and stores the result in pt_dst.\n\n        Arguments:\n            pt_src (DirectPosition): the specified coordinate point to\n                be transformed.\n            pt_dst (Optional[DirectPosition]): the specified coordinate point that\n                stores the result of transforming ptSrc, or null.\n        Returns:\n            The coordinate point or an array of coordinate points\n                after transforming pt_src and storing the result in pt_dst,\n                or a newly created point if pt_dst was null.\n        \"\"\"\n\n    @abstractmethod\n    def transform_list(\n        self,\n        src_pts: np.ndarray,\n        src_off: int,\n        dst_pts: np.ndarray,\n        dst_off: int,\n        num_pts: int,\n        ):\n        \"\"\"\n        Transforms a list of coordinate point ordinal values. This method is\n        provided for efficiently transforming many points. The supplied array\n        of ordinal values will contain packed ordinal values. For example, if\n        the source dimension is 3, then the ordinals will be packed in this\n        order: (x0,y0,z0, x1,y1,z1 ...).\n\n        :param src_pts: the array containing the source point coordinates.\n        :type src_pts: numpy.ndarray\n        :param src_off: the offset to the first point to be transformed in the\n            source array.\n        :type src_off: int\n        :param dst_pts: the array into which the transformed point coordinates\n            are returned. May be the same as srcPts\n        :type dst_pts: numpy.ndarray\n        :param dst_off: the offset to the location of the first transformed\n            point that is stored in the destination\n        :type dst_off: int\n        :param num_pts: the number of point objects to be transformed.\n        :type num_pts: int\n        \"\"\"\n\n    @abstractmethod\n    def derivative(self, point: DirectPosition) -&gt; np.ndarray:\n        \"\"\"\n        Gets the derivative of this transform at a point (never null).\n        The derivative is the matrix of the non-translating portion of\n        the approximate affine map at the point. The matrix will have\n        dimensions corresponding to the source and target coordinate systems.\n\n        Parameters:\n            point (DirectPosition): The coordinate point where to evaluate the\n                derivative. Null value is accepted only if the derivative is\n                the same everywhere (e.g., with affine transforms). But most\n                map projection will requires a non-null value.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.is_identity","title":"<code>is_identity: bool</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Tests whether this transform does not move any points. True if this MathTransform is an identity transform; false otherwise.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.source_dimensions","title":"<code>source_dimensions: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the dimension of input points.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.target_dimensions","title":"<code>target_dimensions: int</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the dimension of output points.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.derivative","title":"<code>derivative(point)</code>  <code>abstractmethod</code>","text":"<p>Gets the derivative of this transform at a point (never null). The derivative is the matrix of the non-translating portion of the approximate affine map at the point. The matrix will have dimensions corresponding to the source and target coordinate systems.</p> <p>Parameters:</p> Name Type Description Default <code>point</code> <code>DirectPosition</code> <p>The coordinate point where to evaluate the derivative. Null value is accepted only if the derivative is the same everywhere (e.g., with affine transforms). But most map projection will requires a non-null value.</p> required Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef derivative(self, point: DirectPosition) -&gt; np.ndarray:\n    \"\"\"\n    Gets the derivative of this transform at a point (never null).\n    The derivative is the matrix of the non-translating portion of\n    the approximate affine map at the point. The matrix will have\n    dimensions corresponding to the source and target coordinate systems.\n\n    Parameters:\n        point (DirectPosition): The coordinate point where to evaluate the\n            derivative. Null value is accepted only if the derivative is\n            the same everywhere (e.g., with affine transforms). But most\n            map projection will requires a non-null value.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.inverse","title":"<code>inverse()</code>  <code>abstractmethod</code>","text":"<p>Creates the inverse transform of this object. This method may fail if the transform is not one to one. Should return a <code>MathTransform</code> object.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef inverse(self) -&gt; Any:\n    \"\"\"\n    Creates the inverse transform of this object. This method may fail if\n    the transform is not one to one. Should return a\n    `MathTransform` object.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.to_wkt","title":"<code>to_wkt()</code>  <code>abstractmethod</code>","text":"<p>Returns a Well Known Text (WKT) for this object. Well know text are defined in extended Backus Naur form. This operation may fails if an object is too complex for the WKT format capability.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef to_wkt(self) -&gt; str:\n    \"\"\"\n    Returns a Well Known Text (WKT) for this object. Well know text are\n    defined in extended Backus Naur form. This operation may fails if an\n    object is too complex for the WKT format capability.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.transform","title":"<code>transform(pt_src, pt_dst)</code>  <code>abstractmethod</code>","text":"<p>Transforms the specified pt_src and stores the result in pt_dst.</p> <p>Parameters:</p> Name Type Description Default <code>pt_src</code> <code>DirectPosition</code> <p>the specified coordinate point to be transformed.</p> required <code>pt_dst</code> <code>Optional[DirectPosition]</code> <p>the specified coordinate point that stores the result of transforming ptSrc, or null.</p> required <p>Returns:     The coordinate point or an array of coordinate points         after transforming pt_src and storing the result in pt_dst,         or a newly created point if pt_dst was null.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef transform(self, pt_src: DirectPosition,\n              pt_dst: Optional[DirectPosition]) -&gt;\\\n        DirectPosition | np.ndarray:\n    \"\"\"\n    Transforms the specified pt_src and stores the result in pt_dst.\n\n    Arguments:\n        pt_src (DirectPosition): the specified coordinate point to\n            be transformed.\n        pt_dst (Optional[DirectPosition]): the specified coordinate point that\n            stores the result of transforming ptSrc, or null.\n    Returns:\n        The coordinate point or an array of coordinate points\n            after transforming pt_src and storing the result in pt_dst,\n            or a newly created point if pt_dst was null.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform.transform_list","title":"<code>transform_list(src_pts, src_off, dst_pts, dst_off, num_pts)</code>  <code>abstractmethod</code>","text":"<p>Transforms a list of coordinate point ordinal values. This method is provided for efficiently transforming many points. The supplied array of ordinal values will contain packed ordinal values. For example, if the source dimension is 3, then the ordinals will be packed in this order: (x0,y0,z0, x1,y1,z1 ...).</p> <p>:param src_pts: the array containing the source point coordinates. :type src_pts: numpy.ndarray :param src_off: the offset to the first point to be transformed in the     source array. :type src_off: int :param dst_pts: the array into which the transformed point coordinates     are returned. May be the same as srcPts :type dst_pts: numpy.ndarray :param dst_off: the offset to the location of the first transformed     point that is stored in the destination :type dst_off: int :param num_pts: the number of point objects to be transformed. :type num_pts: int</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef transform_list(\n    self,\n    src_pts: np.ndarray,\n    src_off: int,\n    dst_pts: np.ndarray,\n    dst_off: int,\n    num_pts: int,\n    ):\n    \"\"\"\n    Transforms a list of coordinate point ordinal values. This method is\n    provided for efficiently transforming many points. The supplied array\n    of ordinal values will contain packed ordinal values. For example, if\n    the source dimension is 3, then the ordinals will be packed in this\n    order: (x0,y0,z0, x1,y1,z1 ...).\n\n    :param src_pts: the array containing the source point coordinates.\n    :type src_pts: numpy.ndarray\n    :param src_off: the offset to the first point to be transformed in the\n        source array.\n    :type src_off: int\n    :param dst_pts: the array into which the transformed point coordinates\n        are returned. May be the same as srcPts\n    :type dst_pts: numpy.ndarray\n    :param dst_off: the offset to the location of the first transformed\n        point that is stored in the destination\n    :type dst_off: int\n    :param num_pts: the number of point objects to be transformed.\n    :type num_pts: int\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform1D","title":"<code>MathTransform1D</code>","text":"<p>               Bases: <code>MathTransform</code></p> <p>Transforms one-dimensional coordinate points.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class MathTransform1D(MathTransform):\n    \"\"\"\n    Transforms one-dimensional coordinate points.\n    \"\"\"\n\n    @abstractmethod\n    def inverse(self) -&gt; 'MathTransform1D':\n        \"\"\"\n        Creates the inverse transform of this object.\n        \"\"\"\n\n    @abstractmethod\n    def transform_value(self, value: float) -&gt; float:\n        \"\"\"\n        Transforms the specified value.\n\n        Parameters:\n            value (float): The value to transform.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform1D.inverse","title":"<code>inverse()</code>  <code>abstractmethod</code>","text":"<p>Creates the inverse transform of this object.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef inverse(self) -&gt; 'MathTransform1D':\n    \"\"\"\n    Creates the inverse transform of this object.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.MathTransform1D.transform_value","title":"<code>transform_value(value)</code>  <code>abstractmethod</code>","text":"<p>Transforms the specified value.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>The value to transform.</p> required Source code in <code>opengis/referencing/operation.py</code> <pre><code>@abstractmethod\ndef transform_value(self, value: float) -&gt; float:\n    \"\"\"\n    Transforms the specified value.\n\n    Parameters:\n        value (float): The value to transform.\n    \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.OperationMethod","title":"<code>OperationMethod</code>","text":"<p>               Bases: <code>IdentifiedObject</code></p> <p>Definition of an algorithm used to perform a coordinate operation.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class OperationMethod(IdentifiedObject):\n    \"\"\"\n    Definition of an algorithm used to perform a coordinate operation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def formula(self) -&gt; Formula:\n        \"\"\"\n        Formula(s) or procedure used by this operation method. This may be a\n        reference to a publication. Note that the operation method may not be\n        analytic, in which case this attribute references or contains the\n        procedure, not an analytic formula.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.OperationMethod.formula","title":"<code>formula: Formula</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Formula(s) or procedure used by this operation method. This may be a reference to a publication. Note that the operation method may not be analytic, in which case this attribute references or contains the procedure, not an analytic formula.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.PassThroughOperation","title":"<code>PassThroughOperation</code>","text":"<p>               Bases: <code>SingleOperation</code></p> <p>A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class PassThroughOperation(SingleOperation):\n    \"\"\"\n    A pass-through operation specifies that a subset of a coordinate tuple is\n    subject to a specific coordinate operation.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def operation(self) -&gt; SingleOperation:\n        \"\"\"\n        Returns the operation to apply on the subset of a coordinate tuple.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def modified_coordinates(self) -&gt; Sequence[int]:\n        \"\"\"\n        Ordered sequence of positive integers defining the positions in a\n        coordinate tuple of the coordinates affected by this pass-through\n        operation. Returns the modified coordinates.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.PassThroughOperation.modified_coordinates","title":"<code>modified_coordinates: Sequence[int]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. Returns the modified coordinates.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.PassThroughOperation.operation","title":"<code>operation: SingleOperation</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the operation to apply on the subset of a coordinate tuple.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.SingleOperation","title":"<code>SingleOperation</code>","text":"<p>               Bases: <code>CoordinateOperation</code></p> <p>A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class SingleOperation(CoordinateOperation):\n    \"\"\"\n    A parameterized mathematical operation on coordinates that transforms or\n    converts coordinates to another coordinate reference system.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def method(self) -&gt; OperationMethod:\n        \"\"\"\n        Returns the operation method.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.SingleOperation.method","title":"<code>method: OperationMethod</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the operation method.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Transformation","title":"<code>Transformation</code>","text":"<p>               Bases: <code>SingleOperation</code></p> <p>An operation on coordinates that usually includes a change of Datum.</p> Source code in <code>opengis/referencing/operation.py</code> <pre><code>class Transformation(SingleOperation):\n    \"\"\"\n    An operation on coordinates that usually includes a change of Datum.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def source_crs(self) -&gt; CoordinateReferenceSystem:\n        \"\"\"\n        Returns the source CRS (never null).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def target_crs(self) -&gt; CoordinateReferenceSystem:\n        \"\"\"\n        Returns the target CRS (never null).\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def operation_version(self) -&gt; str:\n        \"\"\"\n        Version of the coordinate transformation (i.e., instantiation due to\n        the stochastic nature of the parameters). This attribute is mandatory\n        in a Transformation.\n        \"\"\"\n</code></pre>"},{"location":"referencing/operation/#opengis.referencing.operation.Transformation.operation_version","title":"<code>operation_version: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). This attribute is mandatory in a Transformation.</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Transformation.source_crs","title":"<code>source_crs: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the source CRS (never null).</p>"},{"location":"referencing/operation/#opengis.referencing.operation.Transformation.target_crs","title":"<code>target_crs: CoordinateReferenceSystem</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>Returns the target CRS (never null).</p>"},{"location":"referencing/overview/","title":"Referencing Subpackage (ISO 19111)","text":"<p>This is the <code>referencing</code> subpackage.</p> <p>This subpackage contains spatial referencing data structures derived from the ISO 19111 international standard.</p>"},{"location":"util/measure/","title":"<code>measure</code> module","text":"<p>This is the <code>measure</code> module.</p> <p>This module contains measure types defined in the ISO 19103:2015 specification for which no equivalence is already present in the Python standard library.</p>"},{"location":"util/measure/#opengis.util.measure.Acceleration","title":"<code>Acceleration</code>","text":"<p>               Bases: <code>DirectedMeasure</code></p> <p>Acceleration is the rate of change of velocity per unit of time.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Acceleration(DirectedMeasure):\n    \"\"\"\n    Acceleration is the rate of change of velocity per unit of time.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Angle","title":"<code>Angle</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Angle is the amount of rotation needed to bring one line or plane into coincidence with another, generally measured in radians or degrees.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Angle(Measure):\n    \"\"\"\n    Angle is the amount of rotation needed to bring one line or plane into\n    coincidence with another, generally measured in radians or degrees.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomAngle:\n        \"\"\"The units of the angle.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Angle.unit_of_measure","title":"<code>unit_of_measure: UomAngle</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the angle.</p>"},{"location":"util/measure/#opengis.util.measure.AngularAcceleration","title":"<code>AngularAcceleration</code>","text":"<p>               Bases: <code>DirectedMeasure</code></p> <p>AngularAcceleration is the rate of change of angular velocity per unit of time.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class AngularAcceleration(DirectedMeasure):\n    \"\"\"\n    AngularAcceleration is the rate of change of angular velocity per unit\n    of time.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.AngularSpeed","title":"<code>AngularSpeed</code>","text":"<p>               Bases: <code>Measure</code></p> <p>AngularSpeed (often known as angular velocity) is the magnitude of the rate of change of angular position of a rotating body. Angular speed is always positive.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class AngularSpeed(Measure):\n    \"\"\"\n    AngularSpeed (often known as angular velocity) is the magnitude of the\n    rate of change of angular position of a rotating body. Angular speed\n    is always positive.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomAngularSpeed:\n        \"\"\"The units of the angular speed.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.AngularSpeed.unit_of_measure","title":"<code>unit_of_measure: UomAngularSpeed</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the angular speed.</p>"},{"location":"util/measure/#opengis.util.measure.AngularVelocity","title":"<code>AngularVelocity</code>","text":"<p>               Bases: <code>DirectedMeasure</code></p> <p>AngularVelocity is the instantaneous rate of change of angular displacement with time.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class AngularVelocity(DirectedMeasure):\n    \"\"\"\n    AngularVelocity is the instantaneous rate of change of angular\n    displacement with time.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomSpeed:\n        \"\"\"The units of the speed.\"\"\"\n\n    @property\n    @abstractmethod\n    def time(self) -&gt; UomTime:\n        \"\"\"The units of the time.\"\"\"\n\n    @property\n    @abstractmethod\n    def angle(self) -&gt; UomAngle:\n        \"\"\"The units of the angle.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.AngularVelocity.angle","title":"<code>angle: UomAngle</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the angle.</p>"},{"location":"util/measure/#opengis.util.measure.AngularVelocity.time","title":"<code>time: UomTime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the time.</p>"},{"location":"util/measure/#opengis.util.measure.AngularVelocity.unit_of_measure","title":"<code>unit_of_measure: UomSpeed</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the speed.</p>"},{"location":"util/measure/#opengis.util.measure.Area","title":"<code>Area</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Area is the measure of the physical extent of any 2-D geometric object.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Area(Measure):\n    \"\"\"\n    Area is the measure of the physical extent of any 2-D geometric object.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomArea:\n        \"\"\"The units of the area.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Area.unit_of_measure","title":"<code>unit_of_measure: UomArea</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the area.</p>"},{"location":"util/measure/#opengis.util.measure.Currency","title":"<code>Currency</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Currency is a system of money in general use in a particular country or countries.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Currency(Measure):\n    \"\"\"\n    Currency is a system of money in general use in a particular country\n    or countries.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomCurrency:\n        \"\"\"The units of the currency.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Currency.unit_of_measure","title":"<code>unit_of_measure: UomCurrency</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the currency.</p>"},{"location":"util/measure/#opengis.util.measure.DirectedMeasure","title":"<code>DirectedMeasure</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A DirectedMeasure is the result of ascertaining the value of a characteristic of some entity where direction is an essential aspect of the characteristic.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class DirectedMeasure(ABC):\n    \"\"\"\n    A DirectedMeasure is the result of ascertaining the value of\n    a characteristic of some entity where direction is an essential aspect\n    of the characteristic.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def value(self) -&gt; Vector:\n        \"\"\"\n        The magnitude and direction of the directed measure.\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UnitOfMeasure:\n        \"\"\"The units of the directed measure.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.DirectedMeasure.unit_of_measure","title":"<code>unit_of_measure: UnitOfMeasure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the directed measure.</p>"},{"location":"util/measure/#opengis.util.measure.DirectedMeasure.value","title":"<code>value: Vector</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The magnitude and direction of the directed measure.</p>"},{"location":"util/measure/#opengis.util.measure.Distance","title":"<code>Distance</code>","text":"<p>               Bases: <code>Length</code></p> <p>Distance is used as a type for returning the separation between two points.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Distance(Length):\n    \"\"\"\n    Distance is used as a type for returning the separation between two points.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Length","title":"<code>Length</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Length is the measure of distance as an integral, for example the length of curve, the perimeter of a polygon as the length of the boundary.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Length(Measure):\n    \"\"\"\n    Length is the measure of distance as an integral, for example the length\n    of curve, the perimeter of a polygon as the length of the boundary.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomLength:\n        \"\"\"The units of the length.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Length.unit_of_measure","title":"<code>unit_of_measure: UomLength</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the length.</p>"},{"location":"util/measure/#opengis.util.measure.Measure","title":"<code>Measure</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A Measure is the result from performing the act or process of ascertaining the value of a characteristic of some entity.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Measure(ABC):\n    \"\"\"\n    A Measure is the result from performing the act or process of\n    ascertaining the value of a characteristic of some entity.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def value(self) -&gt; float:\n        \"\"\"The value of the measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UnitOfMeasure:\n        \"\"\"The units of the measure.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Measure.unit_of_measure","title":"<code>unit_of_measure: UnitOfMeasure</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the measure.</p>"},{"location":"util/measure/#opengis.util.measure.Measure.value","title":"<code>value: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The value of the measure.</p>"},{"location":"util/measure/#opengis.util.measure.Scale","title":"<code>Scale</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Scale is the ratio of one quantity to another, often unitless.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Scale(Measure):\n    \"\"\"Scale is the ratio of one quantity to another, often unitless.\"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomScale:\n        \"\"\"The units of the length.\"\"\"\n\n    @property\n    @abstractmethod\n    def source_units(self) -&gt; UomLength:\n        \"\"\"The units of the source measure.\"\"\"\n\n    @property\n    @abstractmethod\n    def target_units(self) -&gt; UomLength:\n        \"\"\"The units of the target measure.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Scale.source_units","title":"<code>source_units: UomLength</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the source measure.</p>"},{"location":"util/measure/#opengis.util.measure.Scale.target_units","title":"<code>target_units: UomLength</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the target measure.</p>"},{"location":"util/measure/#opengis.util.measure.Scale.unit_of_measure","title":"<code>unit_of_measure: UomScale</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the length.</p>"},{"location":"util/measure/#opengis.util.measure.Speed","title":"<code>Speed</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Speed is the rate at which someone or something moves, generally expressed as distance over time. It is distinct from velocity in that speed can be measured along a curve.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Speed(Measure):\n    \"\"\"\n    Speed is the rate at which someone or something moves, generally expressed\n    as distance over time. It is distinct from velocity in that speed can be\n    measured along a curve.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def time(self) -&gt; UomTime:\n        \"The units of measure for the time.\"\n\n    @property\n    @abstractmethod\n    def distance(self) -&gt; UomLength:\n        \"The units of measure for the distance.\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomSpeed:\n        \"\"\"The units of the speed.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Speed.distance","title":"<code>distance: UomLength</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of measure for the distance.</p>"},{"location":"util/measure/#opengis.util.measure.Speed.time","title":"<code>time: UomTime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of measure for the time.</p>"},{"location":"util/measure/#opengis.util.measure.Speed.unit_of_measure","title":"<code>unit_of_measure: UomSpeed</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the speed.</p>"},{"location":"util/measure/#opengis.util.measure.StandardUnits","title":"<code>StandardUnits</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Standard units are the base and named derived units that form part of the International System of Units (SI), plus units which are based on SI units and are required for the other measures, for example metres per second.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class StandardUnits(Enum):\n    \"\"\"\n    Standard units are the base and named derived units that form part of the\n    International System of Units (SI), plus units which are based on SI units\n    and are required for the other measures, for example metres per second.\n    \"\"\"\n    METRE = \"metre\"\n    SECOND = \"second\"\n    RADIAN = \"radian\"\n    SQUARE_METRE = \"squareMetre\"\n    CUBIC_METRE = \"cubicMetre\"\n    METER_PR_SECOND = \"metrePrSecond\"\n    METRE_PR_METRE = \"metrePrMetre\"\n    METRE_PR_SECOND_PR_SECOND = \"metrePrSecondPrSecond\"\n    RADIAN_PR_SECOND = \"radianPrSecond\"\n    RADIAN_PR_SECOND_PR_SECOND = \"radianPrSecondPrSecond\"\n    KILOGRAM = \"kilomgram\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.SubUnitsPerUnit","title":"<code>SubUnitsPerUnit</code>","text":"<p>               Bases: <code>ABC</code></p> <p>Sub units per unit.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class SubUnitsPerUnit(ABC):\n    \"\"\"Sub units per unit.\"\"\"\n\n    @property\n    @abstractmethod\n    def factor(self) -&gt; float:\n        \"\"\"The number of sub units per unit.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.SubUnitsPerUnit.factor","title":"<code>factor: float</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The number of sub units per unit.</p>"},{"location":"util/measure/#opengis.util.measure.TimeMeasure","title":"<code>TimeMeasure</code>","text":"<p>               Bases: <code>Measure</code></p> <p>TimeMeasure is the designation of an instant on a selected time scale, astronomical or atomic. It is used in the sense of time of day.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class TimeMeasure(Measure):\n    \"\"\"\n    TimeMeasure is the designation of an instant on a selected time scale,\n    astronomical or atomic. It is used in the sense of time of day.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomTime:\n        \"\"\"The units of the time.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.TimeMeasure.unit_of_measure","title":"<code>unit_of_measure: UomTime</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the time.</p>"},{"location":"util/measure/#opengis.util.measure.UnitOfMeasure","title":"<code>UnitOfMeasure</code>","text":"<p>               Bases: <code>ABC</code></p> <p>A UnitOfMeasure is a quantity adopted as a standard of measurement for other quantities of the same kind.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UnitOfMeasure(ABC):\n    \"\"\"\n    A UnitOfMeasure is a quantity adopted as a standard of measurement\n    for other quantities of the same kind.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def uom_identifier(self) -&gt; str:\n        \"\"\"\n        A string used to identify the unit of measure.\n\n        EXAMPLES: foot, metre, radian, degree, inch, minute,\n        kilometres per hour\n        \"\"\"\n\n    @property\n    @abstractmethod\n    def subunit(self) -&gt; Optional[SubUnitsPerUnit]:\n        \"\"\"The sub units per unit\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UnitOfMeasure.subunit","title":"<code>subunit: Optional[SubUnitsPerUnit]</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The sub units per unit</p>"},{"location":"util/measure/#opengis.util.measure.UnitOfMeasure.uom_identifier","title":"<code>uom_identifier: str</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>A string used to identify the unit of measure.</p> <p>EXAMPLES: foot, metre, radian, degree, inch, minute, kilometres per hour</p>"},{"location":"util/measure/#opengis.util.measure.UnitsList","title":"<code>UnitsList</code>","text":"<p>               Bases: <code>Enum</code></p> <p>This code list contains other units which are not part of SI, but are in common use in some parts of the world.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UnitsList(Enum):\n    \"\"\"\n    This code list contains other units which are not part of SI, but are\n    in common use in some parts of the world.\n    \"\"\"\n    METRE = \"metre\"\n    SECOND = \"second\"\n    RADIAN = \"radian\"\n    SQUARE_METRE = \"squareMetre\"\n    CUBIC_METRE = \"cubicMetre\"\n    METER_PR_SECOND = \"metrePrSecond\"\n    METRE_PR_METRE = \"metrePrMetre\"\n    METRE_PR_SECOND_PR_SECOND = \"metrePrSecondPrSecond\"\n    RADIAN_PR_SECOND = \"radianPrSecond\"\n    RADIAN_PR_SECOND_PR_SECOND = \"radianPrSecondPrSecond\"\n    KILOGRAM = \"kilomgram\"\n    FOOT = \"foot\"\n    SQUARE_FOOT = \"squareFoot\"\n    CUBIC_YARD = \"cubicYard\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomAcceleration","title":"<code>UomAcceleration</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomAcceleration provides both the unit of measure of the velocity and of the time, for example metres per second, per second.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomAcceleration(UnitOfMeasure):\n    \"\"\"\n    UomAcceleration provides both the unit of measure of the velocity and of\n    the time, for example metres per second, per second.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomAngle","title":"<code>UomAngle</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomAngle is any of the reference quantities used to express the value of angles. In the US, the sexagesimal system of degrees, minutes and seconds is frequently used. The radian measurement system is also used. In other parts of the world the grad angle, gon, measuring system is used.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomAngle(UnitOfMeasure):\n    \"\"\"\n    UomAngle is any of the reference quantities used to express the value of\n    angles. In the US, the sexagesimal system of degrees, minutes and seconds\n    is frequently used. The radian measurement system is also used. In other\n    parts of the world the grad angle, gon, measuring system is used.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomAngularAcceleration","title":"<code>UomAngularAcceleration</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomAngularAcceleration provides both the unit of measure of the angular velocity and of the time, for example degrees per second, per second.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomAngularAcceleration(UnitOfMeasure):\n    \"\"\"\n    UomAngularAcceleration provides both the unit of measure of the angular\n    velocity and of the time, for example degrees per second, per second.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomAngularSpeed","title":"<code>UomAngularSpeed</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomAngularSpeed provides both the unit of measure of the angle and of the time, for example degrees per second.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomAngularSpeed(UnitOfMeasure):\n    \"\"\"\n    UomAngularSpeed provides both the unit of measure of the angle and of the\n    time, for example degrees per second.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomAngularVelocity","title":"<code>UomAngularVelocity</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomAngularVelocity is any of the reference quantities used to express the value of angular velocity. It must include an indication of which direction is considered positive.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomAngularVelocity(UnitOfMeasure):\n    \"\"\"\n    UomAngularVelocity is any of the reference quantities used to express\n    the value of angular velocity. It must include an indication of which\n    direction is considered positive.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomArea","title":"<code>UomArea</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomArea is any of the reference quantities used to express the value of area. Common units include square length units, such as square metres and square feet. Other common unit include acres (in the US) and hectares.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomArea(UnitOfMeasure):\n    \"\"\"\n    UomArea is any of the reference quantities used to express the value of\n    area. Common units include square length units, such as square metres and\n    square feet. Other common unit include acres (in the US) and hectares.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomCurrency","title":"<code>UomCurrency</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomCurrency indicates the specific currency, such as one listed in ISO 4217.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomCurrency(UnitOfMeasure):\n    \"\"\"\n    UomCurrency indicates the specific currency, such as one listed\n    in ISO 4217.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomLength","title":"<code>UomLength</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomLength is any of the reference quantities used to express the value of the length, distance between two entities. Examples are the English System of feet and inches or the metric system of millimetres, centimetres and metres, also the System International (SI) System of Units.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomLength(UnitOfMeasure):\n    \"\"\"\n    UomLength is any of the reference quantities used to express the value of\n    the length, distance between two entities. Examples are the English System\n    of feet and inches or the metric system of millimetres, centimetres and\n    metres, also the System International (SI) System of Units.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomScale","title":"<code>UomScale</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomScale is any of the reference quantities used to express the value of scale, or the ratio between quantities with the same unit. Scale factors are often unitless.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomScale(UnitOfMeasure):\n    \"\"\"\n    UomScale is any of the reference quantities used to express the value of\n    scale, or the ratio between quantities with the same unit. Scale factors\n    are often unitless.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomSpeed","title":"<code>UomSpeed</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomSpeed provides both the unit of measure of the distance and of the time, for example kilometres per hour, or metres per second.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomSpeed(UnitOfMeasure):\n    \"\"\"\n    UomSpeed provides both the unit of measure of the distance and of the\n    time, for example kilometres per hour, or metres per second.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomTime","title":"<code>UomTime</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomTime is any of the reference quantities used to express the value of or reckoning the passage of time and/or date, (e.g. seconds, minutes, days, months).</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomTime(UnitOfMeasure):\n    \"\"\"\n    UomTime is any of the reference quantities used to express the value of or\n    reckoning the passage of time and/or date, (e.g. seconds, minutes,\n    days, months).\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomVelocity","title":"<code>UomVelocity</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomVelocity is any of the reference quantities used to express the value of velocity.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomVelocity(UnitOfMeasure):\n    \"\"\"\n    UomVelocity is any of the reference quantities used to express the value\n    of velocity.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomVolume","title":"<code>UomVolume</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomVolume is any of the reference quantities used to express the value of volume.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomVolume(UnitOfMeasure):\n    \"\"\"\n    UomVolume is any of the reference quantities used to express the value\n    of volume.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.UomWeight","title":"<code>UomWeight</code>","text":"<p>               Bases: <code>UnitOfMeasure</code></p> <p>UomWeight is any of the reference quantities used to express force, such as newton.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class UomWeight(UnitOfMeasure):\n    \"\"\"\n    UomWeight is any of the reference quantities used to express force,\n    such as newton.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Velocity","title":"<code>Velocity</code>","text":"<p>               Bases: <code>DirectedMeasure</code></p> <p>Velocity is the instantaneous rate of change of position with time. It is usually calculated using the simple formula, the change in position during a given time interval.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Velocity(DirectedMeasure):\n    \"\"\"\n    Velocity is the instantaneous rate of change of position with time.\n    It is usually calculated using the simple formula, the change in position\n    during a given time interval.\n    \"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Volume","title":"<code>Volume</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Volume is the measure of the physical space of any 3-D geometric object.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Volume(Measure):\n    \"\"\"\n    Volume is the measure of the physical space of any 3-D geometric object.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomVolume:\n        \"\"\"The units of the volume.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Volume.unit_of_measure","title":"<code>unit_of_measure: UomVolume</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the volume.</p>"},{"location":"util/measure/#opengis.util.measure.Weight","title":"<code>Weight</code>","text":"<p>               Bases: <code>Measure</code></p> <p>Weight is the force exerted on the mass of a body by a gravitational field.</p> Source code in <code>opengis/util/measure.py</code> <pre><code>class Weight(Measure):\n    \"\"\"\n    Weight is the force exerted on the mass of a body by a gravitational field.\n    \"\"\"\n\n    @property\n    @abstractmethod\n    def unit_of_measure(self) -&gt; UomWeight:\n        \"\"\"The units of the weight.\"\"\"\n</code></pre>"},{"location":"util/measure/#opengis.util.measure.Weight.unit_of_measure","title":"<code>unit_of_measure: UomWeight</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>The units of the weight.</p>"},{"location":"util/overview/","title":"Referencing Subpackage (ISO 19103:2015)","text":"<p>This is the <code>util</code> subpackage.</p> <p>This subpackage contains types defined in the ISO 19103:2015 specification for which no equivalence is already present in the Python standard library.</p>"}]}